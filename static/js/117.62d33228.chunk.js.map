{"version":3,"sources":["services/service.js","views/CustomerMaster/ViewCustomersRequest.js"],"names":["MyApiUrl","ViewImg","table","placeholder","label","items","values","fields2","key","ViewCustomersRequest","useState","ResponseData","setResponseData","CustomerDocs","setCustomerDocs","ContactPersons","setContactPersons","RejectRemark","setRejectRemark","CustomerID","setCustomerID","block","setBlock","block2","setBlock2","Block8","setBlock8","GetAllCustomers","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","document","getElementById","className","axios","method","url","headers","then","response","data","map","item","Country","COUNTRY_NAME","State","STATE_NAME","District","DISTRICT_NAME","Taluk","TALUK_NAME","CUSTOMER_CATEGORY_NAME","CUSTOMER_TYPE_NAME","CUSTOMER_SUBTYPE_NAME","CUSTOMER_NAME","Email","CUSTOMER_EMAIL","CUSTOMER_EMAIL2","CUSTOMER_MOBILE","CUSTOMER_ALT_MOBILE","CUSTOMER_NUMBER","Capacity","CUSTOMER_CAPACITY","Unit","UNIT_NAME","Superior","EMPLOYEE_NAME","Password","CUSTOMER_PASSWORD","CUSTOMER_GST_NO","catch","error","console","log","React","useEffect","history","useHistory","id","style","marginTop","col","boxShadow","fields","hover","striped","bordered","sorter","tableFilter","itemsPerPageSelect","columnFilterSlot","size","itemsPerPage","pagination","scopedSlots","Profile","i","profile","CUSTOMER_PRFILE","Fragment","href","target","src","fluid","width","Documents","md","color","onClick","pkid","CUSTOMER_PKID","Action","put","fire","title","icon","confirmButtonText","confirm","Address","push","show","onClose","closeButton","fontWeight","fontFamily","textAlign","borderBottom","paddingBottom","CUSTOMER_CONTACT_PERSON_NAME","CUSTOMER_CONTACT_PERSON_EMAIL","CUSTOMER_CONTACT_PERSON_EMAIL2","CUSTOMER_CONTACT_PERSON_PHO","CUSTOMER_CONTACT_PERSON_PHO2","CUSTOMER_CONTACT_SEC_PERSON_NAME","CUSTOMER_CONTACT_SEC_PERSON_EMAIL","CUSTOMER_CONTACT_SEC_PERSON_EMAIL2","CUSTOMER_CONTACT_SEC_PERSON_PHO","CUSTOMER_CONTACT_SEC_PERSON_PHO2","CUSTOMER_DOC1","CUSTOMER_DOC2","CUSTOMER_DOC3","CUSTOMER_DOC4","CUSTOMER_DOC5","CUSTOMER_DOC6","padding","class","value","onChange","event","rows","height","fontSize","obj","remark"],"mappings":"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","file":"static/js/117.62d33228.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-29 12:14:40\r\n * @modify date 2021-12-06 15:20:08\r\n * @desc [description]\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CLink,\r\n  CRow,\r\n  CDataTable,\r\n  CImg,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CTextarea\r\n} from \"@coreui/react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { MyApiUrl, ViewImg } from \"src/services/service\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields2 = [\r\n  { key: \"Action\" },\r\n  { key: \"Customer Name\" },\r\n  { key: \"Customer Number\" },\r\n  { key: \"GST No\" },\r\n  { key: \"Customer Category\" },\r\n  { key: \"Customer Type\" },\r\n  { key: \"Customer Sub Type\" },\r\n  { key: \"Email\" },\r\n  { key: \"Alternate Email\" },\r\n  { key: \"Contact Number\" },\r\n  { key: \"Alternate Number\" },\r\n  { key: \"Capacity\" },\r\n  { key: \"Unit\" },\r\n  { key: \"Superior\" },\r\n  { key: \"Country\" },\r\n  { key: \"State\" },\r\n  { key: \"District\" },\r\n  { key: \"Taluk\" },\r\n  { key: \"Profile\" },\r\n  { key: \"Password\" },\r\n  { key: \"Address\" },\r\n  { key: \"Documents\" },\r\n  { key: \"Contact Persons\" },\r\n];\r\n\r\nconst ViewCustomersRequest = () => {\r\n  const [ResponseData, setResponseData] = useState([]);\r\n  const [CustomerDocs, setCustomerDocs] = useState([]);\r\n  const [ContactPersons, setContactPersons] = useState([]);\r\n  const [RejectRemark, setRejectRemark] = useState();\r\n  const [CustomerID, setCustomerID] = useState();\r\n\r\n\r\n  const [block, setBlock] = useState(false);\r\n  const [block2, setBlock2] = useState(false);\r\n  const [Block8, setBlock8] = useState(false);\r\n\r\n\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  const GetAllCustomers = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getPendingCustomersReqs\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const items = response.data.map((item) => {\r\n          return {\r\n            ...item,\r\n            Country: item.COUNTRY_NAME,\r\n            State: item.STATE_NAME,\r\n            District: item.DISTRICT_NAME,\r\n            Taluk: item.TALUK_NAME,\r\n            \"Customer Category\": item.CUSTOMER_CATEGORY_NAME,\r\n            \"Customer Type\": item.CUSTOMER_TYPE_NAME,\r\n            \"Customer Sub Type\": item.CUSTOMER_SUBTYPE_NAME,\r\n            \"Customer Name\": item.CUSTOMER_NAME,\r\n            Email: item.CUSTOMER_EMAIL,\r\n            \"Alternate Email\": item.CUSTOMER_EMAIL2,\r\n            \"Contact Number\": item.CUSTOMER_MOBILE,\r\n            \"Alternate Number\": item.CUSTOMER_ALT_MOBILE,\r\n            \"Customer Number\": item.CUSTOMER_NUMBER,\r\n            Capacity: item.CUSTOMER_CAPACITY,\r\n            Unit: item.UNIT_NAME,\r\n            Superior: item.EMPLOYEE_NAME,\r\n            Password: item.CUSTOMER_PASSWORD,\r\n            \"GST No\": item.CUSTOMER_GST_NO,\r\n          };\r\n        });\r\n        setResponseData(items);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const Accept = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios.put(MyApiUrl + \"acceptCustomerReqs/\" + pkid + \"\").then((response) => {\r\n      if (response.data === true) {\r\n        Swal.fire({\r\n          title: \"Customer Accepted Successfully!\",\r\n          icon: \"success\",\r\n          confirmButtonText: \"OK\",\r\n        });\r\n        GetAllCustomers();\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      } else {\r\n        Swal.fire({\r\n          title: \"Failed To Accept Customer!\",\r\n          icon: \"error\",\r\n          confirmButtonText: \"OK\",\r\n        });\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      }\r\n    });\r\n  }\r\n\r\n  const ConfirmReject = () => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    var res = confirm(\"Are you sure you want to Deny..?\");\r\n    if (res) {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      var obj = {\r\n        remark: RejectRemark\r\n      }\r\n      axios.put(MyApiUrl + \"rejectCustomerReqs/\" + CustomerID + \"\", obj).then((response) => {\r\n        if (response.data === true) {\r\n          Swal.fire({\r\n            title: \"Customer Denied Successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          GetAllCustomers();\r\n          setBlock8(!Block8);\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Failed To Deny Customer!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  const Reject = (pkid) => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    var res = confirm(\"Are you sure you want to Deny\");\r\n    if (res) {\r\n      setBlock8(!Block8);\r\n      setCustomerID(pkid);\r\n    }\r\n  };\r\n\r\n  const CustomerDocsBlock = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"customerdocs/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setCustomerDocs(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setBlock2(!block2);\r\n  };\r\n\r\n  const ContactPersonsBlock = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"customercontactpersons/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setContactPersons(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setBlock(!block);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    GetAllCustomers();\r\n  }, []);\r\n\r\n  let history = useHistory();\r\n  return (\r\n    <div id=\"city\">\r\n      <div id=\"divLoading\"> </div>\r\n      <h1 id=\"ccmaster\">View Customers Request</h1>\r\n      <CRow style={{ marginTop: \"3%\" }}>\r\n        <CCol col=\"12\">\r\n          <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>All Customers Request</CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={ResponseData}\r\n                        fields={fields2}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPageSelect={items}\r\n                        columnFilterSlot\r\n                        size=\"sm\"\r\n                        itemsPerPage={10}\r\n                        pagination\r\n                        scopedSlots={{\r\n                          Profile: (i) => {\r\n                            let profile = \"\";\r\n                            if (\r\n                              i.CUSTOMER_PRFILE === \"\" ||\r\n                              i.CUSTOMER_PRFILE === null\r\n                            ) {\r\n                              profile = \"NoImage.png\";\r\n                            } else {\r\n                              profile = i.CUSTOMER_PRFILE;\r\n                            }\r\n                            return (\r\n                              <React.Fragment>\r\n                                <td>\r\n                                  <CLink\r\n                                    href={ViewImg + \"/\" + profile}\r\n                                    target=\"_blank\"\r\n                                  >\r\n                                    <CImg\r\n                                      src={ViewImg + \"/\" + profile}\r\n                                      fluid\r\n                                      className=\"mb-2\"\r\n                                      style={{ width: \"100%\" }}\r\n                                    />\r\n                                  </CLink>\r\n                                </td>\r\n                              </React.Fragment>\r\n                            );\r\n                          },\r\n                          Documents: (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"10\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      CustomerDocsBlock(i.CUSTOMER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          \"Contact Persons\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"10\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ContactPersonsBlock(i.CUSTOMER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          Action: (item) => (\r\n                            <td>\r\n                              <CButton\r\n                                onClick={() => {\r\n                                  Accept(item.CUSTOMER_PKID);\r\n                                }}\r\n                                size=\"sm\"\r\n                                color=\"success\"\r\n                              >\r\n                                Accept\r\n                              </CButton>&nbsp;&nbsp;&nbsp;\r\n                              <CButton\r\n                                onClick={() => {\r\n                                  Reject(item.CUSTOMER_PKID);\r\n                                }}\r\n                                size=\"sm\"\r\n                                color=\"danger\"\r\n                              >\r\n                                Deny\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          Address: (item) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"10\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() =>\r\n                                      history.push(\"/AddCustomerAddress\", {\r\n                                        data: item,\r\n                                      })\r\n                                    }\r\n                                  >\r\n                                    Manage\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CModal show={block} onClose={() => setBlock(!block)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Contact Persons Info</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {ContactPersons.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    First Contact People\r\n                  </p>\r\n                  <table id=\"ModelTable\">\r\n                    <tr>\r\n                      <th>Name</th>\r\n                      <th>:</th>\r\n                      <td>{i.CUSTOMER_CONTACT_PERSON_NAME}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Email</th>\r\n                      <th>:</th>\r\n                      <td>{i.CUSTOMER_CONTACT_PERSON_EMAIL}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Alternate Email</th>\r\n                      <th>:</th>\r\n                      <td>{i.CUSTOMER_CONTACT_PERSON_EMAIL2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Contact Number</th>\r\n                      <th>:</th>\r\n                      <td>{i.CUSTOMER_CONTACT_PERSON_PHO}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Alternate Number</th>\r\n                      <th>:</th>\r\n                      <td>{i.CUSTOMER_CONTACT_PERSON_PHO2}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n                <CCol md=\"12\" style={{ marginTop: \"5%\" }}>\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Second Contact People\r\n                  </p>\r\n                  <table id=\"ModelTable\">\r\n                    <tr>\r\n                      <th>Name</th>\r\n                      <th>:</th>\r\n                      <td>{i.CUSTOMER_CONTACT_SEC_PERSON_NAME}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Email</th>\r\n                      <th>:</th>\r\n                      <td>{i.CUSTOMER_CONTACT_SEC_PERSON_EMAIL}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Alternate Email</th>\r\n                      <th>:</th>\r\n                      <td>{i.CUSTOMER_CONTACT_SEC_PERSON_EMAIL2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Contact Number</th>\r\n                      <th>:</th>\r\n                      <td>{i.CUSTOMER_CONTACT_SEC_PERSON_PHO}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Alternate Number</th>\r\n                      <th>:</th>\r\n                      <td>{i.CUSTOMER_CONTACT_SEC_PERSON_PHO2}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setBlock(!block)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block2} onClose={() => setBlock2(!block2)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Uploaded Documents</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {CustomerDocs.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"3\">\r\n                  <CImg\r\n                    src={ViewImg + \"/\" + i.CUSTOMER_DOC1}\r\n                    fluid\r\n                    className=\"mb-2\"\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </CCol>\r\n                <CCol md=\"3\">\r\n                  <CImg\r\n                    src={ViewImg + \"/\" + i.CUSTOMER_DOC2}\r\n                    fluid\r\n                    className=\"mb-2\"\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </CCol>\r\n                <CCol md=\"3\">\r\n                  <CImg\r\n                    src={ViewImg + \"/\" + i.CUSTOMER_DOC3}\r\n                    fluid\r\n                    className=\"mb-2\"\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </CCol>\r\n                <CCol md=\"3\">\r\n                  <CImg\r\n                    src={ViewImg + \"/\" + i.CUSTOMER_DOC4}\r\n                    fluid\r\n                    className=\"mb-2\"\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </CCol>\r\n                <CCol md=\"3\">\r\n                  <CImg\r\n                    src={ViewImg + \"/\" + i.CUSTOMER_DOC5}\r\n                    fluid\r\n                    className=\"mb-2\"\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </CCol>\r\n                <CCol md=\"3\">\r\n                  <CImg\r\n                    src={ViewImg + \"/\" + i.CUSTOMER_DOC6}\r\n                    fluid\r\n                    className=\"mb-2\"\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setBlock2(!block2)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={Block8} onClose={() => setBlock8(!Block8)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Remark</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow style={{ padding: \"0% 5% 0% 5% !important\" }}>\r\n            <CTextarea\r\n              class=\"form-control\"\r\n              value={RejectRemark}\r\n              onChange={(event) => {\r\n                setRejectRemark(event.target.value);\r\n              }}\r\n              id=\"exampleFormControlTextarea1\"\r\n              rows=\"3\"\r\n              style={{ height: \"200px\", fontSize: \"16px\" }}\r\n            ></CTextarea>\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setBlock8(!Block8)}>\r\n            Close\r\n          </CButton>\r\n          <CButton color=\"secondary\" onClick={ConfirmReject}>\r\n            Submit\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default ViewCustomersRequest;\r\n"],"sourceRoot":""}