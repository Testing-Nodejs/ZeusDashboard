{"version":3,"sources":["services/service.js","views/masters/DateFilter.js","services/SweetAlerts.js","views/OrderManagement/ApprovedOrders.js"],"names":["MyApiUrl","ViewImg","DateFilter","date","idate","Date","toISOString","split","getDate","toString","padStart","getMonth","getFullYear","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","table","placeholder","label","items","values","fields2","key","_style","width","ApprovedOrders","useState","ResponseData","setResponseData","BillingAddress","setBillingAddress","ShippingAddress","setShippingAddress","OrderRemark","setOrderRemark","fromDate","setfromDate","Otype","setOtype","Omonth","setOmonth","toDate","settoDate","block","setblock","block1","setblock1","block2","setblock2","ManagerRemark","setManagerRemark","ManagerRemarkBloack","setManagerRemarkBloack","OderSupplyType","setOderSupplyType","GetAllPendingOrder","document","getElementById","className","axios","method","url","headers","then","response","data","map","item","index","HDays","ORDER_NUMBER","ORDER_BY","TypeName","ORDER_TYPE_NAME","SUPPLY_NAME","Company","COMPANY_NAME","CUSTOMER_NAME","Logistic","ORDER_LOGISTIC","ORDER_LOGISTIC_DESTINATION","ORDER_LOGISTIC_PAY_MODE","ORDER_DELIVERY_TYPE","ORDER_CASH_DISCOUNT","ORDER_ORDER_AMOUNT","GetOrderSupplyType","catch","error","console","log","params","language_code","Option","i","value","SUPPLY_TYPE_PKID","React","useEffect","history","useHistory","id","style","marginTop","col","boxShadow","md","htmlFor","custom","name","onChange","event","target","type","size","color","onClick","fire","icon","title","fields","hover","striped","bordered","sorter","tableFilter","itemsPerPageSelect","itemsPerPage","pagination","scopedSlots","ORDER_DATE","clock","slice","Attachment","profile","ORD_DOC","Fragment","href","src","fluid","push","ItemCount","pkid","ORDER_PKID","Remark","Status","show","onClose","closeButton","fontWeight","fontFamily","textAlign","borderBottom","paddingBottom","CUSTOMER_ADDRESS_ADDRESS1","CUSTOMER_ADDRESS_ADDRESS2","CUSTOMER_ADDRESS_ADDRESS3","CUSTOMER_ADDRESS_ZIP_CODE","ORDER_REMARK","ORDER_MANAGER_REMARK"],"mappings":"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","file":"static/js/26.36c14c7f.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","export default function DateFilter({ date }) {\r\n  let idate = new Date(new Date(date).toISOString().split(\"T\")[0]);\r\n  let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n    idate.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n  return dateMDY;\r\n}\r\n","import Swal from \"sweetalert2\";\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  export{\r\n    Toast\r\n  }","/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-25 17:00:15\r\n * @modify date 2021-12-06 15:32:46\r\n * @desc [description]\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CDataTable,\r\n  CButton,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModal,\r\n  CLabel,\r\n  CInput,\r\n  CSelect,\r\n  CLink,\r\n  CImg,\r\n} from \"@coreui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MyApiUrl, ViewImg } from \"src/services/service\";\r\nimport { Toast } from \"src/services/SweetAlerts\";\r\nimport DateFilter from \"../masters/DateFilter\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields2 = [\r\n  { key: \"Status\", _style: { width: \"60%\" } },\r\n  { key: \"Ordered Date\" },\r\n  { key: \"Ordered Time\" },\r\n  { key: \"Customer Name\" },\r\n  { key: \"Order Items\" },\r\n  { key: \"Company\" },\r\n  { key: \"Order Number\" },\r\n  { key: \"Order By\" },\r\n  { key: \"Ordered Person\" },\r\n  { key: \"Order Type\" },\r\n  { key: \"Supply Type\" },\r\n  { key: \"Day Till Now\" },\r\n  { key: \"Billing Address\" },\r\n  { key: \"Shipping Address\" },\r\n  { key: \"Logistic\" },\r\n  { key: \"Logistic Designation\" },\r\n  { key: \"Logistic Payment Mode\" },\r\n  { key: \"Delivery Type\" },\r\n  { key: \"Cash Discount\" },\r\n  { key: \"Grand Total\" },\r\n  { key: \"Attachment\" },\r\n  { key: \"Remark\" },\r\n  { key: \"Manager Remark\" },\r\n];\r\n\r\nconst ApprovedOrders = () => {\r\n  const [ResponseData, setResponseData] = useState([]);\r\n  const [BillingAddress, setBillingAddress] = useState([]);\r\n  const [ShippingAddress, setShippingAddress] = useState([]);\r\n  const [OrderRemark, setOrderRemark] = useState([]);\r\n  const [fromDate, setfromDate] = useState();\r\n  const [Otype, setOtype] = useState();\r\n  const [Omonth, setOmonth] = useState();\r\n  const [toDate, settoDate] = useState();\r\n  const [block, setblock] = useState(false);\r\n  const [block1, setblock1] = useState(false);\r\n  const [block2, setblock2] = useState(false);\r\n\r\n  const [ManagerRemark, setManagerRemark] = useState([]);\r\n  const [ManagerRemarkBloack, setManagerRemarkBloack] = useState(false);\r\n\r\n  // Filters\r\n\r\n  const [OderSupplyType, setOderSupplyType] = useState([]);\r\n\r\n  const GetAllPendingOrder = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"GetAllApprovedOrder\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const items = response.data.map((item, index) => {\r\n          return {\r\n            ...item,\r\n            \"Day Till Now\": item.HDays,\r\n            \"Order Number\": item.ORDER_NUMBER,\r\n            \"Order By\": item.ORDER_BY,\r\n            \"Ordered Person\": item.TypeName,\r\n            \"Order Type\": item.ORDER_TYPE_NAME,\r\n            \"Supply Type\": item.SUPPLY_NAME,\r\n            Company: item.COMPANY_NAME,\r\n            \"Customer Name\": item.CUSTOMER_NAME,\r\n            Logistic: item.ORDER_LOGISTIC,\r\n            \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n            \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n            \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n            \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n            \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n          };\r\n        });\r\n        setResponseData(items);\r\n        GetOrderSupplyType();\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const GetOrderSupplyType = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderSupplyType\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      params: {\r\n        language_code: \"en\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const Option = response.data.map((item, i) => (\r\n          <option key={i} value={item.SUPPLY_TYPE_PKID}>\r\n            {item.SUPPLY_NAME}\r\n          </option>\r\n        ));\r\n        setOderSupplyType(Option);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const ViewBillingAddress = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderBillingAddress/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setBillingAddress(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock(!block);\r\n  };\r\n\r\n  const ViewShippingAddress = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderShippingAddress/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setShippingAddress(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock1(!block1);\r\n  };\r\n\r\n  const ViewOderRemark = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderRemark/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setOrderRemark(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock2(!block2);\r\n  };\r\n\r\n  const ViewSalesPersonRemark = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderRemarkByManager/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setManagerRemark(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setManagerRemarkBloack(!block2);\r\n  };\r\n\r\n  const FilterDates = () => {\r\n    if (fromDate === \"\" || fromDate == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Select From Date!\",\r\n      });\r\n    } else if (toDate === \"\" || toDate == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Select To Date!\",\r\n      });\r\n    } else {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      axios({\r\n        method: \"GET\",\r\n        url: MyApiUrl + \"GetApprovedOrdersByDate/\" + fromDate + \"/\" + toDate,\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          const items = response.data.map((item, index) => {\r\n            return {\r\n              ...item,\r\n              \"Day Till Now\": item.HDays,\r\n              \"Order Number\": item.ORDER_NUMBER,\r\n              \"Order By\": item.ORDER_BY,\r\n              \"Ordered Person\": item.TypeName,\r\n              \"Order Type\": item.ORDER_TYPE_NAME,\r\n              \"Supply Type\": item.SUPPLY_NAME,\r\n              Company: item.COMPANY_NAME,\r\n              \"Customer Name\": item.CUSTOMER_NAME,\r\n              Logistic: item.ORDER_LOGISTIC,\r\n              \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n              \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n              \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n              \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n              \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n            };\r\n          });\r\n          setResponseData(items);\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const FilterReset = () => {\r\n    GetAllPendingOrder();\r\n    setfromDate(\"\");\r\n    settoDate(\"\");\r\n    setOtype(\"0\");\r\n    setOmonth(\"0\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    GetAllPendingOrder();\r\n  }, []);\r\n  let history = useHistory();\r\n  return (\r\n    <div id=\"city\">\r\n      <div id=\"divLoading\"> </div>\r\n      <h1 id=\"ccmaster\">Admin Approved Orders</h1>\r\n      <CRow style={{ marginTop: \"3%\" }}>\r\n        <CCol col=\"12\">\r\n          <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardBody>\r\n                      <CRow>\r\n                        <CCol md=\"2\">\r\n                          <CLabel htmlFor=\"nf-email\">Select Order Type</CLabel>\r\n                          <CSelect\r\n                            custom\r\n                            name=\"merchant\"\r\n                            value={Otype}\r\n                            onChange={(event) => {\r\n                              document.getElementById(\"divLoading\").className = \"show\";\r\n                              axios({\r\n                                method: \"GET\",\r\n                                url:\r\n                                  MyApiUrl +\r\n                                  \"/GetApprovedOrdersBySupplayType/\" +\r\n                                  event.target.value,\r\n                                headers: {\r\n                                  \"content-type\": \"application/json\",\r\n                                },\r\n                              })\r\n                                .then((response) => {\r\n                                  const items = response.data.map(\r\n                                    (item, index) => {\r\n                                      return {\r\n                                        ...item,\r\n                                        \"Day Till Now\": item.HDays,\r\n                                        \"Order Number\": item.ORDER_NUMBER,\r\n                                        \"Order By\": item.ORDER_BY,\r\n                                        \"Ordered Person\": item.TypeName,\r\n                                        \"Order Type\": item.ORDER_TYPE_NAME,\r\n                                        \"Supply Type\": item.SUPPLY_NAME,\r\n                                        Company: item.COMPANY_NAME,\r\n                                        \"Customer Name\": item.CUSTOMER_NAME,\r\n                                        Logistic: item.ORDER_LOGISTIC,\r\n                                        \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n                                        \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n                                        \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n                                        \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n                                        \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n                                      };\r\n                                    }\r\n                                  );\r\n                                  setResponseData(items);\r\n                                  document.getElementById(\"divLoading\").className = \"hide\";\r\n                                })\r\n                                .catch((error) => {\r\n                                  console.log(error);\r\n                                });\r\n                            }}\r\n                            id=\"merchant\"\r\n                          >\r\n                            <option value=\"0\">All</option>\r\n                            {OderSupplyType}\r\n                          </CSelect>\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CLabel htmlFor=\"nf-email\">Select Month</CLabel>\r\n                          <CSelect\r\n                            custom\r\n                            name=\"Marchant\"\r\n                            id=\"Marchant\"\r\n                            value={Omonth}\r\n                            onChange={(event) => {\r\n                              document.getElementById(\"divLoading\").className = \"show\";\r\n                              axios({\r\n                                method: \"GET\",\r\n                                url:\r\n                                  MyApiUrl +\r\n                                  \"/GetApprovedOrdersByMonth/\" +\r\n                                  event.target.value,\r\n                                headers: {\r\n                                  \"content-type\": \"application/json\",\r\n                                },\r\n                              })\r\n                                .then((response) => {\r\n                                  const items = response.data.map(\r\n                                    (item, index) => {\r\n                                      return {\r\n                                        ...item,\r\n                                        \"Day Till Now\": item.HDays,\r\n                                        \"Order Number\": item.ORDER_NUMBER,\r\n                                        \"Order By\": item.ORDER_BY,\r\n                                        \"Ordered Person\": item.TypeName,\r\n                                        \"Order Type\": item.ORDER_TYPE_NAME,\r\n                                        \"Supply Type\": item.SUPPLY_NAME,\r\n                                        Company: item.COMPANY_NAME,\r\n                                        \"Customer Name\": item.CUSTOMER_NAME,\r\n                                        Logistic: item.ORDER_LOGISTIC,\r\n                                        \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n                                        \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n                                        \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n                                        \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n                                        \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n                                      };\r\n                                    }\r\n                                  );\r\n                                  setResponseData(items);\r\n                                  document.getElementById(\"divLoading\").className = \"hide\";\r\n                                })\r\n                                .catch((error) => {\r\n                                  console.log(error);\r\n                                });\r\n                            }}\r\n                          >\r\n                            <option value=\"0\">All</option>\r\n                            <option value=\"1\">Jan</option>\r\n                            <option value=\"2\">Feb</option>\r\n                            <option value=\"3\">March</option>\r\n                            <option value=\"4\">April</option>\r\n                            <option value=\"5\">May</option>\r\n                            <option value=\"6\">Jun</option>\r\n                            <option value=\"7\">Jul</option>\r\n                            <option value=\"8\">Aug</option>\r\n                            <option value=\"9\">Sept</option>\r\n                            <option value=\"10\">Oct</option>\r\n                            <option value=\"11\">Nov</option>\r\n                            <option value=\"12\">Dec</option>\r\n                          </CSelect>\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CLabel>From:</CLabel>\r\n                          <CInput\r\n                            type=\"date\"\r\n                            onChange={(event) => {\r\n                              setfromDate(event.target.value);\r\n                            }}\r\n                            value={fromDate}\r\n                          />\r\n                        </CCol>\r\n\r\n                        <CCol md=\"2\">\r\n                          <CLabel>To:</CLabel>\r\n                          <CInput\r\n                            type=\"date\"\r\n                            onChange={(event) => {\r\n                              settoDate(event.target.value);\r\n                            }}\r\n                            value={toDate}\r\n                          />\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CButton\r\n                            size=\"sm\"\r\n                            color=\"info\"\r\n                            style={{ marginTop: \"28px\", width: \"100%\" }}\r\n                            onClick={FilterDates}\r\n                          >\r\n                            Filter\r\n                          </CButton>\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CButton\r\n                            size=\"sm\"\r\n                            color=\"danger\"\r\n                            style={{ marginTop: \"28px\", width: \"100%\" }}\r\n                            onClick={FilterReset}\r\n                          >\r\n                            Reset\r\n                          </CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                      <hr />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol col=\"12\">\r\n          <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Approved Orders</CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={ResponseData}\r\n                        fields={fields2}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPageSelect={items}\r\n                        size=\"sm\"\r\n                        itemsPerPage={10}\r\n                        pagination\r\n                        scopedSlots={{\r\n                          \"Ordered Date\": (i) => (\r\n                            <td>{<DateFilter date={i.ORDER_DATE} />}</td>\r\n                          ),\r\n                          \"Ordered Time\": (i) => {\r\n                            return (\r\n                              <td>\r\n                                {new Date(i.clock)\r\n                                  .toISOString()\r\n                                  .split(\"T\")[1]\r\n                                  .slice(0, -1)}\r\n                              </td>\r\n                            );\r\n                          },\r\n                          Attachment: (i) => {\r\n                            let profile = \"\";\r\n                            if (\r\n                              i.ORD_DOC === \"\" ||\r\n                              i.ORD_DOC === null\r\n                            ) {\r\n                              profile = \"NoImage.png\";\r\n                            } else {\r\n                              profile = i.ORD_DOC;\r\n                            }\r\n                            return (\r\n                              <React.Fragment>\r\n                                <td>\r\n                                  <CLink\r\n                                    href={ViewImg + \"/\" + profile}\r\n                                    target=\"_blank\"\r\n                                  >\r\n                                    <CImg\r\n                                      src={ViewImg + \"/\" + profile}\r\n                                      fluid\r\n                                      className=\"mb-2\"\r\n                                      style={{ width: \"100%\" }}\r\n                                    />\r\n                                  </CLink>\r\n                                </td>\r\n                              </React.Fragment>\r\n                            );\r\n                          },\r\n                          \"Order Items\": (i) => (\r\n                            <td>\r\n                              <CButton\r\n                                onClick={() => {\r\n                                  history.push(\"/OrderItems\", {\r\n                                    data: i,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {i.ItemCount}\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          \"Billing Address\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewBillingAddress(i.ORDER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          \"Shipping Address\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewShippingAddress(i.ORDER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          Remark: (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewOderRemark(i.ORDER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          Status: (i) => (\r\n                            <td>\r\n                              <span className=\"ApprovedOrders\">Approved</span>\r\n                            </td>\r\n                          ),\r\n                          \"Manager Remark\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewSalesPersonRemark(i.ORDER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CModal show={block} onClose={() => setblock(!block)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Customer Billing Address</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {BillingAddress.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Billing Address\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS1}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS3}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ZIP_CODE}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock(!block)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block1} onClose={() => setblock1(!block1)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Customer Shipping Address</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {ShippingAddress.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Shipping Address\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS1}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS3}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ZIP_CODE}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock1(!block1)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block2} onClose={() => setblock2(!block2)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Order Remark</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {OrderRemark.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Remark\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.ORDER_REMARK}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock2(!block2)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={ManagerRemarkBloack} onClose={() => setManagerRemarkBloack(!ManagerRemarkBloack)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Order Remark From Manager</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {ManagerRemark.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Remark\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.ORDER_MANAGER_REMARK}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setManagerRemarkBloack(!ManagerRemarkBloack)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApprovedOrders;\r\n"],"sourceRoot":""}