{"version":3,"sources":["services/service.js","../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/icons/DeleteSharp.js","views/CustomerMaster/CustomerSubType.js"],"names":["MyApiUrl","ViewImg","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","table","placeholder","label","items","values","fields","key","CustomerSubType","useState","typePkid","CustomerType","ResponseData","AddButton","UpdateButton","Kimo","setKimo","CustTypeData","setCustTypeData","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","GetCustomerType","useCallback","document","getElementById","className","axios","method","url","headers","then","response","Option","data","map","item","i","CUSTOMER_TYPE_PKID","CUSTOMER_TYPE_NAME","catch","error","console","log","AddCustomerSubType","fire","icon","title","obj","CustType","CustSubType","post","confirmButtonText","fetchData","UpdateCustomerSubType","put","typeSubPkid","params","language_code","CUSTOMER_SUBTYPE_NAME","Updatebtn","type","onClick","size","id","Addbtn","useEffect","style","marginTop","xs","sm","md","lg","xl","boxShadow","action","encType","row","custom","name","onChange","e","target","hover","striped","bordered","tableFilter","itemsPerPageSelect","sorter","itemsPerPage","pagination","scopedSlots","Action","Emptsubtype","Emptype","CUSTOMER_SUBTYPE_PKID","CUSTOMER_SUBTYPE_TYPE_FKID","status","confirm"],"mappings":"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","file":"static/js/59.e8754842.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 21h12V7H6v14zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteSharp');\n\nexports.default = _default;","/**\r\n * @author KimoSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-25 18:21:31\r\n * @modify date 2021-12-07 12:26:04\r\n * @desc [description]\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CRow,\r\n  CDataTable,\r\n  CLabel,\r\n  CSelect,\r\n} from \"@coreui/react\";\r\n\r\nimport { MyApiUrl } from \"src/services/service\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields = [\r\n  { key: \"Action\" },\r\n  { key: \"CustomerType\" },\r\n  { key: \"CustomerSubType\" },\r\n];\r\n\r\nconst CustomerSubType = () => {\r\n  const [Kimo, setKimo] = useState({\r\n    typePkid: \"\",\r\n    CustomerType: \"-1\",\r\n    ResponseData: [],\r\n    AddButton: true,\r\n    UpdateButton: false,\r\n  });\r\n\r\n  const [CustTypeData, setCustTypeData] = useState([]);\r\n\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  const GetCustomerType = React.useCallback(() => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"custtype\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const Option = response.data.map((item, i) => (\r\n          <option key={i} value={item.CUSTOMER_TYPE_PKID}>\r\n            {item.CUSTOMER_TYPE_NAME}\r\n          </option>\r\n        ));\r\n        setCustTypeData(Option);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const AddCustomerSubType = () => {\r\n    if (Kimo.CustomerType === \"-1\") {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Select Customer Type!\",\r\n      });\r\n    } else if (Kimo.CustomerSubType == \"\" || Kimo.CustomerSubType == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Enter Customer Sub Type!\",\r\n      });\r\n    } else {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      const obj = {\r\n        CustType: Kimo.CustomerType,\r\n        CustSubType: Kimo.CustomerSubType,\r\n      };\r\n\r\n      axios.post(MyApiUrl + \"custsubtype\", obj).then((response) => {\r\n        if (response.data === \"Already Existed!\") {\r\n          Swal.fire({\r\n            title: \"Customer Sub Type Already Exist!\",\r\n            icon: \"info\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          fetchData();\r\n          setKimo({\r\n            ...Kimo,\r\n            typePkid: \"\",\r\n            CustomerType: \"\",\r\n            CustomerSubType: \"\",\r\n            AddButton: true,\r\n            UpdateButton: false,\r\n          });\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        } else if (response.data === true) {\r\n          Swal.fire({\r\n            title: \"Customer Sub Type Added Successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          fetchData();\r\n          setKimo({\r\n            ...Kimo,\r\n            typePkid: \"\",\r\n            CustomerType: \"\",\r\n            CustomerSubType: \"\",\r\n            AddButton: true,\r\n            UpdateButton: false,\r\n          });\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        } else if (response.data === false) {\r\n          Swal.fire({\r\n            title: \"Customer Sub Type Failed To Add!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const UpdateCustomerSubType = () => {\r\n    if (Kimo.CustomerType === \"-1\") {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Select Customer Type!\",\r\n      });\r\n    } else if (Kimo.CustomerSubType == \"\" || Kimo.CustomerSubType == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Enter Customer Sub Type!\",\r\n      });\r\n    } else {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      const obj = {\r\n        CustType: Kimo.CustomerType,\r\n        CustSubType: Kimo.CustomerSubType,\r\n      };\r\n      axios\r\n        .put(MyApiUrl + \"custsubtype/\" + Kimo.typeSubPkid, obj)\r\n        .then((response) => {\r\n          if (response.data == false) {\r\n            Swal.fire({\r\n              title: \"Customer Sub Type Not Updated!\",\r\n              icon: \"warning\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n\r\n            fetchData();\r\n            setKimo({\r\n              ...Kimo,\r\n              typePkid: \"\",\r\n              CustomerType: \"\",\r\n              CustomerSubType: \"\",\r\n              AddButton: true,\r\n              UpdateButton: false,\r\n            });\r\n            document.getElementById(\"divLoading\").className = \"hide\";\r\n          } else if (response.data == \"1\") {\r\n            Swal.fire({\r\n              title: \"Customer Sub Type Updated!\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n\r\n            fetchData();\r\n            setKimo({\r\n              ...Kimo,\r\n              typePkid: \"\",\r\n              CustomerType: \"\",\r\n              CustomerSubType: \"\",\r\n              AddButton: true,\r\n              UpdateButton: false,\r\n            });\r\n            document.getElementById(\"divLoading\").className = \"hide\";\r\n          } else {\r\n            Swal.fire({\r\n              title: \"Customer Sub Type Already Existed!\",\r\n              icon: \"info\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n            document.getElementById(\"divLoading\").className = \"hide\";\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const EditCustomerSubType = (id, Emptsubtype, Emptype) => {\r\n    console.log(id, Emptsubtype, Emptype);\r\n    setKimo({\r\n      ...Kimo,\r\n      typeSubPkid: id,\r\n      CustomerType: Emptype,\r\n      CustomerSubType: Emptsubtype,\r\n      AddButton: false,\r\n      UpdateButton: true,\r\n    });\r\n  };\r\n\r\n  const DeleteCustomerSubType = (id) => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    var res = confirm(\"Are you sure you want to delete\");\r\n    if (res) {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      axios({\r\n        method: \"DELETE\",\r\n        url: MyApiUrl + \"custsubtype/\" + id + \"\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        params: {\r\n          language_code: \"en\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          if (response.data == true) {\r\n            Swal.fire({\r\n              title: \"Customer Sub Type Deleted!\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n\r\n            fetchData();\r\n            document.getElementById(\"divLoading\").className = \"hide\";\r\n          } else {\r\n            Swal.fire({\r\n              title: \"Customer Sub Type Failed To Deleted!\",\r\n              icon: \"error\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n            document.getElementById(\"divLoading\").className = \"hide\";\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const fetchData = React.useCallback(() => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"custsubtype\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      params: {\r\n        language_code: \"en\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const items = response.data.map((item) => {\r\n          return {\r\n            ...item,\r\n            CustomerType: item.CUSTOMER_TYPE_NAME,\r\n            CustomerSubType: item.CUSTOMER_SUBTYPE_NAME\r\n          };\r\n        });\r\n        setKimo({\r\n          ...Kimo,\r\n          ResponseData: items,\r\n        });\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const Updatebtn = () => (\r\n    <CButton\r\n      type=\"button\"\r\n      onClick={UpdateCustomerSubType}\r\n      size=\"md\"\r\n      id=\"Add-btn\"\r\n    >\r\n      Update\r\n    </CButton>\r\n  );\r\n\r\n  const Addbtn = () => (\r\n    <CButton type=\"button\" onClick={AddCustomerSubType} size=\"md\" id=\"Add-btn\">\r\n      Add\r\n    </CButton>\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    fetchData();\r\n    GetCustomerType();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"divLoading\"> </div>\r\n      <h1 id=\"ccmaster\">Customer Sub Type</h1>\r\n      <CRow style={{ marginTop: \"3%\" }}>\r\n        <CCol xs=\"12\" sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\" className=\"mb-3 mb-xl-0\">\r\n          <div id=\"country-master\">\r\n            <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol>\r\n                    <CCard>\r\n                      <CCardHeader>Add Customer Sub Type</CCardHeader>\r\n                      <CCardBody>\r\n                        <CForm\r\n                          action=\"\"\r\n                          method=\"post\"\r\n                          encType=\"multipart/form-data\"\r\n                          className=\"form-horizontal\"\r\n                        >\r\n                          <CFormGroup row>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n                              <CLabel>Customer Type</CLabel>\r\n                              <CSelect\r\n                                custom\r\n                                name=\"CustType\"\r\n                                id=\"CustType\"\r\n                                value={Kimo.CustomerType}\r\n                                onChange={(e) => {\r\n                                  setKimo({\r\n                                    ...Kimo,\r\n                                    CustomerType: e.target.value,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                <option value=\"-1\">Select Customer Type</option>\r\n                                {CustTypeData}\r\n                              </CSelect>\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                          <CFormGroup row>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n                              <CLabel>Customer Sub Type</CLabel>\r\n                              <CInput\r\n                                id=\"text-input1\"\r\n                                name=\"text-input\"\r\n                                placeholder=\"Customer Sub Type\"\r\n                                type=\"text\"\r\n                                value={Kimo.CustomerSubType}\r\n                                onChange={(e) => {\r\n                                  setKimo({\r\n                                    ...Kimo,\r\n                                    CustomerSubType: e.target.value,\r\n                                  });\r\n                                }}\r\n                              />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n\r\n                          {Kimo.UpdateButton && <Updatebtn />}\r\n                          {Kimo.AddButton && <Addbtn />}\r\n                        </CForm>\r\n                      </CCardBody>\r\n                    </CCard>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n            </CCard>\r\n          </div>\r\n        </CCol>\r\n\r\n        <CCol xs=\"12\" sm=\"12\" md=\"8\" lg=\"8\" xl=\"8\" className=\"mb-3 mb-xl-0\">\r\n          <div id=\"country-table\">\r\n            <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol>\r\n                    <CCard>\r\n                      <CCardHeader>Added Customer Sub Type</CCardHeader>\r\n                      <CCardBody>\r\n                        <CDataTable\r\n                          items={Kimo.ResponseData}\r\n                          fields={fields}\r\n                          hover\r\n                          striped\r\n                          bordered\r\n                          tableFilter={table}\r\n                          itemsPerPageSelect={items}\r\n                          sorter\r\n                          size=\"sm\"\r\n                          itemsPerPage={10}\r\n                          pagination\r\n                          scopedSlots={{\r\n\r\n                            Action: (item) => (\r\n                              <td>\r\n                                <CButton\r\n                                  onClick={() => {\r\n                                    EditCustomerSubType(\r\n                                      item.CUSTOMER_SUBTYPE_PKID,\r\n                                      item.CUSTOMER_SUBTYPE_NAME,\r\n                                      item.CUSTOMER_SUBTYPE_TYPE_FKID\r\n                                    );\r\n                                  }}\r\n                                  size=\"sm\"\r\n                                  id=\"war-btn\"\r\n                                >\r\n                                  <EditIcon />\r\n                                  {item.status}\r\n                                </CButton>\r\n                                <CButton\r\n                                  size=\"sm\"\r\n                                  onClick={() => {\r\n                                    DeleteCustomerSubType(\r\n                                      item.CUSTOMER_SUBTYPE_PKID\r\n                                    );\r\n                                  }}\r\n                                  id=\"war-btn1\"\r\n                                >\r\n                                  <DeleteSharpIcon />\r\n                                  {item.status}\r\n                                </CButton>\r\n                              </td>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      </CCardBody>\r\n                    </CCard>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n            </CCard>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerSubType;\r\n"],"sourceRoot":""}