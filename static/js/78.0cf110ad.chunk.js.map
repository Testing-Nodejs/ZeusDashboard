{"version":3,"sources":["services/service.js","../node_modules/@material-ui/icons/DeleteSharp.js","views/EmployeeMaster/EditEmployee.js"],"names":["MyApiUrl","ViewImg","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","EditEmployee","props","console","log","location","state","data","EMPLOYEE_TYPE_FKID","EMPOYEE_SUB_TYPE_FKID","EMPLOYEE_HQ_FKID","EMPLOYEE_COMPANY_FKID","EMPLOYEE_NAME","EMPLOYEE_EMAIL","EMPLOYEE_ALT_EMAIL","EMPLOYEE_PHONE_CODE","EMPLOYEE_CONTACT","EMPLOYEE_ALT_PHONE_CODE","EMPLOYEE_ALT_CONTACT","EMPLOYEE_DESIGNATION","EMPLOYEE_QUALIFICATION","EMPLOYEE_DOJ","EMPLOYEE_PREV_EXPERIENCE","EMPLOYEE_DOB","EMPLOYEE_REGION","EMPLOYEE_GENDER","EMPLOYEE_REPORTING_TO","EMPLOYEE_PASSWORD","EMPLOYEE_PROFILE","EMPOLYEE_IS_MANAGER","EMPLOYEE_SALARY","EMPLOYEE_DOR","EMPLOYEE_ADDRESS1","EMPLOYEE_ADDRESS2","EMPLOYEE_ADDRESS3","EMPLOYEE_ADDRESS_ZIP","EMPLOYEE_ALT_ADDRESS1","EMPLOYEE_ALT_ADDRESS2","EMPLOYEE_ALT_ADDRESS3","EMPLOYEE_ALT_ADDRESS_ZIP","EMPLOYEE_PKID","history","useHistory","useState","EmptypeData","setEmptypeData","EmpSubtypeData","setEmpSubtypeData","EmpHQData","setEmpHQData","CompanyData","setCompanyData","CountryData","setCountryData","StateData","setStateData","CityData","setCityData","AreaData","setAreaData","EmployeeManagers","setEmployeeManagers","EmployeeOtherCoveredAreaCounty","setEmployeeOtherCoveredAreaCounty","EmployeeOtherCoveredAreaState","setEmployeeOtherCoveredAreaState","EmployeeOtherCoveredAreaCity","setEmployeeOtherCoveredAreaCity","EmployeeOtherCoveredAreaArea","setEmployeeOtherCoveredAreaArea","EmployeeUploadedOtherDocs","EmployeeUploadedOtherDocsEdit","setEmployeeUploadedOtherDocsEdit","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","selectedFiles","setselectedFiles","ProfilePic","setProfilePic","ViewUploadedDocs","document","getElementById","className","axios","method","url","headers","then","response","Option","map","item","i","push","EMPLOYEE_DOCS_FILE","md","onClick","DeleteOtherDoc","EMPLOYEE_DOCS_PKID","size","id","style","marginBottom","float","src","fluid","width","catch","error","uploadFiles","length","upload","idx","file","formData","FormData","append","post","formatDate","date","Date","month","getMonth","day","getDate","year","getFullYear","join","Emptype","EmpSubtype","EmpHQ","Company","Name","Email","Email2","Designation","Qualification","JoiningDate","PreviousExp","DateofBirth","PhoCode","PhoneNumber","AltPhoCode","AlterNateNumber","Region","password","Gender","ReportingTo","Profile","Ismanager","salary","dateofreleaving","address1","address2","address3","ZipCode","altaddress1","altaddress2","altaddress3","altZipCode","pkid","EmployeeFeilds","setEmployeeFeilds","GetEmployeeSubTypeById","EMPLOYEE_SUB_TYPE_PKID","EMPLOYEE_SUB_TYPE_NAME","GetEmployeeHQ","HQ_PKID","HQ_NAME","GetStateEdit","a","params","language_code","GetCityEdit","GetAreaEdit","GetState","event","target","checked","x","obj","CountryId","parseInt","splice","filter","objIndex","findIndex","COUNTRY_PKID","status","tmpNodes","objLatest","includes","STATE_PKID","indexOf","StateObject","StateId","stateID","res","j","DISTRICT_PKID","CityObject","DistrictId","resCity","k","TALUK_PKID","objForArea","GetCity","GetArea","objlatest","SelectedArea","useEffect","EMPLOYEE_TYPE_PKID","EMPLOYEE_TYPE_NAME","COMPANY_PKID","COMPANY_NAME","to","encType","htmlFor","type","placeholder","onChange","replace","custom","name","COUNTRY_CODE","paddingRight","readOnly","fontWeight","padding","borderRadius","paddingLeft","maxLength","test","xs","files","paddingBottom","marginTop","borderRight","borderTop","borderBottom","fontSize","textAlign","onDrop","getRootProps","getInputProps","Array","isArray","disabled","paddingTop","fontFamily","display","COUNTRY_NAME","STATE_NAME","DISTRICT_NAME","TALUK_NAME","lastIndexOf","fire","icon","title","OtherDocs","Set","CoveredArea","put","confirmButtonText","color"],"mappings":"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","file":"static/js/78.0cf110ad.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 21h12V7H6v14zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteSharp');\n\nexports.default = _default;","/*\r\n * @Author: ---- KIMO a.k.a KIMOSABE ----\r\n * @Date: 2022-02-12 16:16:24\r\n * @Last Modified by: ---- KIMO a.k.a KIMOSABE ----\r\n * @Last Modified time: 2022-02-12 18:23:52\r\n */\r\n\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CButton,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CSelect,\r\n  CLink,\r\n  CImg,\r\n} from \"@coreui/react\";\r\n\r\nimport { MyApiUrl, ViewImg } from \"src/services/service\";\r\nimport \"../../../src/style.css\";\r\nimport \"../../style.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\nconst EditEmployee = (props) => {\r\n  console.log(props);\r\n  const {\r\n    EMPLOYEE_TYPE_FKID,\r\n    EMPOYEE_SUB_TYPE_FKID,\r\n    EMPLOYEE_HQ_FKID,\r\n    EMPLOYEE_COMPANY_FKID,\r\n    EMPLOYEE_NAME,\r\n    EMPLOYEE_EMAIL,\r\n    EMPLOYEE_ALT_EMAIL,\r\n    EMPLOYEE_PHONE_CODE,\r\n    EMPLOYEE_CONTACT,\r\n    EMPLOYEE_ALT_PHONE_CODE,\r\n    EMPLOYEE_ALT_CONTACT,\r\n    EMPLOYEE_DESIGNATION,\r\n    EMPLOYEE_QUALIFICATION,\r\n    EMPLOYEE_DOJ,\r\n    EMPLOYEE_PREV_EXPERIENCE,\r\n    EMPLOYEE_DOB,\r\n    EMPLOYEE_REGION,\r\n    EMPLOYEE_GENDER,\r\n    EMPLOYEE_REPORTING_TO,\r\n    EMPLOYEE_PASSWORD,\r\n    EMPLOYEE_PROFILE,\r\n    EMPOLYEE_IS_MANAGER,\r\n    EMPLOYEE_SALARY,\r\n    EMPLOYEE_DOR,\r\n    EMPLOYEE_ADDRESS1,\r\n    EMPLOYEE_ADDRESS2,\r\n    EMPLOYEE_ADDRESS3,\r\n    EMPLOYEE_ADDRESS_ZIP,\r\n    EMPLOYEE_ALT_ADDRESS1,\r\n    EMPLOYEE_ALT_ADDRESS2,\r\n    EMPLOYEE_ALT_ADDRESS3,\r\n    EMPLOYEE_ALT_ADDRESS_ZIP,\r\n    EMPLOYEE_PKID,\r\n  } = props.location.state.data;\r\n\r\n  let history = useHistory();\r\n  const [EmptypeData, setEmptypeData] = useState([]);\r\n  const [EmpSubtypeData, setEmpSubtypeData] = useState([]);\r\n  const [EmpHQData, setEmpHQData] = useState([]);\r\n  const [CompanyData, setCompanyData] = useState([]);\r\n  const [AreaResponseByHQ, setAreaResponseByHQ] = useState([]);\r\n  const [CountryData, setCountryData] = useState([]);\r\n  const [StateData, setStateData] = useState([]);\r\n  const [CityData, setCityData] = useState([]);\r\n  const [AreaData, setAreaData] = useState([]);\r\n  const [EmployeeManagers, setEmployeeManagers] = useState([]);\r\n\r\n  // const [EmployeeCoveredArea, setEmployeeCoveredArea] = useState([]);\r\n\r\n  const [EmployeeOtherCoveredAreaCounty, setEmployeeOtherCoveredAreaCounty] =\r\n    useState([]);\r\n  const [EmployeeOtherCoveredAreaState, setEmployeeOtherCoveredAreaState] =\r\n    useState([]);\r\n  const [EmployeeOtherCoveredAreaCity, setEmployeeOtherCoveredAreaCity] =\r\n    useState([]);\r\n  const [EmployeeOtherCoveredAreaArea, setEmployeeOtherCoveredAreaArea] =\r\n    useState([]);\r\n\r\n  const [EmployeeUploadedOtherDocs, setEmployeeUploadedOtherDocs] = useState(\r\n    []\r\n  );\r\n\r\n  const [EmployeeUploadedOtherDocsEdit, setEmployeeUploadedOtherDocsEdit] =\r\n    useState([]);\r\n\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  const [selectedFiles, setselectedFiles] = useState();\r\n  const [ProfilePic, setProfilePic] = useState(EMPLOYEE_PROFILE);\r\n\r\n  const ViewUploadedDocs = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"GetEmployeeOtherDocs/\" + EMPLOYEE_PKID + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const Option = response.data.map((item, i) => {\r\n          EmployeeUploadedOtherDocs.push(item.EMPLOYEE_DOCS_FILE);\r\n          return (\r\n            <CCol md=\"3\">\r\n              <CButton\r\n                onClick={() => {\r\n                  DeleteOtherDoc(item.EMPLOYEE_DOCS_PKID);\r\n                }}\r\n                size=\"sm\"\r\n                id=\"war-btn1\"\r\n                style={{\r\n                  marginBottom: \"7%\",\r\n                  float: \"right\",\r\n                }}\r\n              >\r\n                <DeleteSharpIcon />\r\n              </CButton>\r\n              <CImg\r\n                src={ViewImg + \"/\" + item.EMPLOYEE_DOCS_FILE}\r\n                fluid\r\n                className=\"mb-2\"\r\n                style={{ width: \"100%\" }}\r\n              />\r\n            </CCol>\r\n          );\r\n        });\r\n        setEmployeeUploadedOtherDocsEdit(Option);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onDrop = (files) => {\r\n    if (files.length > 0) {\r\n      setselectedFiles(files);\r\n    }\r\n  };\r\n\r\n  const uploadFiles = () => {\r\n    for (let i = 0; i < selectedFiles.length; i++) {\r\n      upload(i, selectedFiles[i]);\r\n    }\r\n  };\r\n\r\n  const upload = (idx, file) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    var formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    axios.post(MyApiUrl + \"upload\", formData).then((response) => {\r\n      EmployeeUploadedOtherDocs.push(response.data);\r\n      document.getElementById(\"divLoading\").className = \"hide\";\r\n    });\r\n  };\r\n\r\n  const formatDate = (date) => {\r\n    var d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n\r\n    return [year, month, day].join(\"-\");\r\n  };\r\n\r\n  const [EmployeeFeilds, setEmployeeFeilds] = useState({\r\n    Emptype: EMPLOYEE_TYPE_FKID,\r\n    EmpSubtype: EMPOYEE_SUB_TYPE_FKID,\r\n    EmpHQ: EMPLOYEE_HQ_FKID,\r\n    Company: EMPLOYEE_COMPANY_FKID,\r\n    Name: EMPLOYEE_NAME,\r\n    Email: EMPLOYEE_EMAIL,\r\n    Email2: EMPLOYEE_ALT_EMAIL,\r\n    Designation: EMPLOYEE_DESIGNATION,\r\n    Qualification: EMPLOYEE_QUALIFICATION,\r\n    JoiningDate: EMPLOYEE_DOJ == null ? \"\" : formatDate(EMPLOYEE_DOJ),\r\n    PreviousExp: EMPLOYEE_PREV_EXPERIENCE,\r\n    DateofBirth: EMPLOYEE_DOB == null ? \"\" : formatDate(EMPLOYEE_DOB),\r\n    PhoCode: EMPLOYEE_PHONE_CODE,\r\n    PhoneNumber: EMPLOYEE_CONTACT,\r\n    AltPhoCode: EMPLOYEE_ALT_PHONE_CODE,\r\n    AlterNateNumber: EMPLOYEE_ALT_CONTACT,\r\n    Region: EMPLOYEE_REGION,\r\n    password: EMPLOYEE_PASSWORD,\r\n    Gender: EMPLOYEE_GENDER,\r\n    ReportingTo: EMPLOYEE_REPORTING_TO,\r\n    Profile: \"\",\r\n    Ismanager: EMPOLYEE_IS_MANAGER,\r\n    salary: EMPLOYEE_SALARY,\r\n    dateofreleaving: EMPLOYEE_DOR == null ? \"\" : formatDate(EMPLOYEE_DOR),\r\n    address1: EMPLOYEE_ADDRESS1,\r\n    address2: EMPLOYEE_ADDRESS2,\r\n    address3: EMPLOYEE_ADDRESS3,\r\n    ZipCode: EMPLOYEE_ADDRESS_ZIP,\r\n    altaddress1: EMPLOYEE_ALT_ADDRESS1,\r\n    altaddress2: EMPLOYEE_ALT_ADDRESS2,\r\n    altaddress3: EMPLOYEE_ALT_ADDRESS3,\r\n    altZipCode: EMPLOYEE_ALT_ADDRESS_ZIP,\r\n    pkid: EMPLOYEE_PKID,\r\n  });\r\n\r\n  const GetCountryCode = (id) => {\r\n    if (id == 0 || id == \"0\") {\r\n\r\n    } else {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      axios({\r\n        method: \"GET\",\r\n        url: MyApiUrl + \"CountryCodeByHQ/\" + id + \"\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          setEmployeeFeilds({\r\n            ...EmployeeFeilds,\r\n            PhoCode: response.data[0].COUNTRY_CODE,\r\n            AltPhoCode: response.data[0].COUNTRY_CODE,\r\n            EmpHQ: id,\r\n          });\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  const GetEmptype = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"emptypes\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const Option = response.data.map((item, i) => (\r\n          <option key={i} value={item.EMPLOYEE_TYPE_PKID}>\r\n            {item.EMPLOYEE_TYPE_NAME}\r\n          </option>\r\n        ));\r\n        setEmptypeData(Option);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    ViewUploadedDocs();\r\n  };\r\n\r\n  const GetEmployeeSubTypeById = (id) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"empsubtypesById/\" + id,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const Option = response.data.map((item, i) => (\r\n          <option key={i} value={item.EMPLOYEE_SUB_TYPE_PKID}>\r\n            {item.EMPLOYEE_SUB_TYPE_NAME}\r\n          </option>\r\n        ));\r\n        setEmpSubtypeData(Option);\r\n        GetEmployeeHQ();\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const GetEmployeeHQ = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"hq\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const Option = response.data.map((item, i) => (\r\n          <option key={i} value={item.HQ_PKID}>\r\n            {item.HQ_NAME}\r\n          </option>\r\n        ));\r\n        setEmpHQData(Option);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const GetAllCompanies = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"companies\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const Option = response.data.map((item, i) => (\r\n          <option key={i} value={item.COMPANY_PKID}>\r\n            {item.COMPANY_NAME}\r\n          </option>\r\n        ));\r\n        setCompanyData(Option);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const AddEmployee = () => {\r\n    let lastAtPos = EmployeeFeilds.Email.lastIndexOf(\"@\");\r\n    let lastDotPos = EmployeeFeilds.Email.lastIndexOf(\".\");\r\n\r\n    let lastAtPos1 = EmployeeFeilds.Email2.lastIndexOf(\"@\");\r\n    let lastDotPos1 = EmployeeFeilds.Email2.lastIndexOf(\".\");\r\n\r\n    if (EmployeeFeilds.Name === \"\" || EmployeeFeilds.Name === null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter Employee Name!\",\r\n      });\r\n    } else if (EmployeeFeilds.Email === \"\" || EmployeeFeilds.Email === null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter Employee Email!\",\r\n      });\r\n    } else if (EmployeeFeilds.EmpHQ === \"-1\") {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select HQ!\",\r\n      });\r\n    } else if (EmployeeFeilds.Company === \"-1\") {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select Company!\",\r\n      });\r\n    } else if (\r\n      EmployeeFeilds.Ismanager === \"-1\" ||\r\n      EmployeeFeilds.Ismanager === \"\"\r\n    ) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter Employee Manager Type!\",\r\n      });\r\n    } else if (EmployeeFeilds.Emptype === \"-1\") {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select Employee Type!\",\r\n      });\r\n    } else if (EmployeeFeilds.EmpSubtype === \"-1\") {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select Sub Employee Type!\",\r\n      });\r\n    }\r\n    // else if (\r\n    //   !(\r\n    //     lastAtPos < lastDotPos &&\r\n    //     lastAtPos > 0 &&\r\n    //     EmployeeFeilds.Email.indexOf(\"@@\") === -1 &&\r\n    //     lastDotPos > 2 &&\r\n    //     EmployeeFeilds.Email.length - lastDotPos > 2\r\n    //   )\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Valid Employee Email!\",\r\n    //   });\r\n    // } else if (EmployeeFeilds.Email2 === \"\" || EmployeeFeilds.Email2 === null) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Alternate Employee Email!\",\r\n    //   });\r\n    // } else if (\r\n    //   !(\r\n    //     lastAtPos1 < lastDotPos1 &&\r\n    //     lastAtPos1 > 0 &&\r\n    //     EmployeeFeilds.Email2.indexOf(\"@@\") === -1 &&\r\n    //     lastDotPos1 > 2 &&\r\n    //     EmployeeFeilds.Email2.length - lastDotPos1 > 2\r\n    //   )\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Valid Alternate Employee Email!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.PhoneNumber === \"\" ||\r\n    //   EmployeeFeilds.PhoneNumber === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee Phone Number!\",\r\n    //   });\r\n    // } else if (EmployeeFeilds.PhoneNumber.length !== 10) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Valid Phone Number!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.AlterNateNumber === \"\" ||\r\n    //   EmployeeFeilds.AlterNateNumber === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee Alternate Phone Number!\",\r\n    //   });\r\n    // } else if (EmployeeFeilds.AlterNateNumber.length !== 10) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Valid Alternate Phone Number!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.Designation === \"\" ||\r\n    //   EmployeeFeilds.Designation == null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee Designation!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.Qualification === \"\" ||\r\n    //   EmployeeFeilds.Qualification === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee Qualification!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.JoiningDate === \"\" ||\r\n    //   EmployeeFeilds.JoiningDate === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee JoiningDate!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.DateofBirth === \"\" ||\r\n    //   EmployeeFeilds.DateofBirth === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee DateofBirth!\",\r\n    //   });\r\n    // } else if (EmployeeFeilds.Region === \"\" || EmployeeFeilds.Region === null) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee Region!\",\r\n    //   });\r\n    // } else if (EmployeeFeilds.Gender === \"-1\" || EmployeeFeilds.Gender === \"\") {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Select Employee Gender!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.ReportingTo === \"-1\" ||\r\n    //   EmployeeFeilds.ReportingTo === \"\"\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Select Employee Reporting!\",\r\n    //   });\r\n    // } \r\n\r\n    else if (\r\n      EmployeeFeilds.password === \"\" ||\r\n      EmployeeFeilds.password === null\r\n    ) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter Employee password!\",\r\n      });\r\n    }\r\n    // else if (ProfilePic === \"\" || ProfilePic === null) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Select Employee Profile Pic!\",\r\n    //   });\r\n    // } \r\n\r\n    // else if (EmployeeFeilds.salary === \"\" || EmployeeFeilds.salary === null) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee Salary!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.dateofreleaving === \"\" ||\r\n    //   EmployeeFeilds.dateofreleaving === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee Releaving Date!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.address1 === \"\" ||\r\n    //   EmployeeFeilds.address1 === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee address1!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.address2 === \"\" ||\r\n    //   EmployeeFeilds.address2 === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee address2!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.address3 === \"\" ||\r\n    //   EmployeeFeilds.address3 === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee address 3!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.ZipCode === \"\" ||\r\n    //   EmployeeFeilds.ZipCode === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee address Zipcode!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.altaddress1 === \"\" ||\r\n    //   EmployeeFeilds.altaddress1 === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee alternate address1!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.altaddress2 === \"\" ||\r\n    //   EmployeeFeilds.altaddress2 === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee alternate address 2!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.altaddress3 === \"\" ||\r\n    //   EmployeeFeilds.altaddress3 === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee alternate address 3!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.altZipCode === \"\" ||\r\n    //   EmployeeFeilds.altZipCode === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee alternate address Zipcode!\",\r\n    //   });\r\n    // } \r\n    else {\r\n      if (EmployeeOtherCoveredAreaArea.length === 0) {\r\n        Toast.fire({\r\n          icon: \"warning\",\r\n          title: \"Please Select Atleast One Covering Area!\",\r\n        });\r\n      } else {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        var obj = {\r\n          Emptype: EmployeeFeilds.Emptype,\r\n          EmpSubtype: EmployeeFeilds.EmpSubtype,\r\n          EmpHQ: EmployeeFeilds.EmpHQ,\r\n          Company: EmployeeFeilds.Company,\r\n          Name: EmployeeFeilds.Name,\r\n          Email: EmployeeFeilds.Email,\r\n          Email2: EmployeeFeilds.Email2,\r\n          Designation: EmployeeFeilds.Designation,\r\n          Qualification: EmployeeFeilds.Qualification,\r\n          JoiningDate: EmployeeFeilds.JoiningDate,\r\n          DateofBirth: EmployeeFeilds.DateofBirth,\r\n          PhoCode: EmployeeFeilds.PhoCode,\r\n          PhoneNumber: EmployeeFeilds.PhoneNumber,\r\n          AltPhoCode: EmployeeFeilds.AltPhoCode,\r\n          AlterNateNumber: EmployeeFeilds.AlterNateNumber,\r\n          Region: EmployeeFeilds.Region,\r\n          password: EmployeeFeilds.password,\r\n          Gender: EmployeeFeilds.Gender,\r\n          ReportingTo: EmployeeFeilds.ReportingTo,\r\n          Ismanager: EmployeeFeilds.Ismanager,\r\n          salary: EmployeeFeilds.salary,\r\n          dateofreleaving: EmployeeFeilds.dateofreleaving,\r\n          address1: EmployeeFeilds.address1,\r\n          address2: EmployeeFeilds.address2,\r\n          address3: EmployeeFeilds.address3,\r\n          ZipCode: EmployeeFeilds.ZipCode,\r\n          altaddress1: EmployeeFeilds.altaddress1,\r\n          altaddress2: EmployeeFeilds.altaddress2,\r\n          altaddress3: EmployeeFeilds.altaddress3,\r\n          altZipCode: EmployeeFeilds.altZipCode,\r\n          Profile: ProfilePic,\r\n          OtherDocs: [...new Set(EmployeeUploadedOtherDocs)],\r\n          CoveredArea: [...new Set(EmployeeOtherCoveredAreaArea)],\r\n          // OtherCoveredArea: [...new Set(EmployeeOtherCoveredAreaArea)],\r\n        };\r\n        console.log(obj);\r\n        axios.put(MyApiUrl + \"emps/\" + EMPLOYEE_PKID, obj).then((response) => {\r\n          if (response.data === true) {\r\n            Swal.fire({\r\n              title: \"Employee Details Update!\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n            document.getElementById(\"divLoading\").className = \"hide\";\r\n            history.push(\"/ViewEmployees\");\r\n          } else {\r\n            Swal.fire({\r\n              title: \"Failed To Update Employee Details!\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n            document.getElementById(\"divLoading\").className = \"hide\";\r\n            history.push(\"/ViewEmployees\");\r\n          }\r\n        });\r\n      }\r\n\r\n    }\r\n  };\r\n\r\n  // const GetAllSelectedArea = (event) => {\r\n  //   console.log(event)\r\n  //   let x = [...EmployeeCoveredArea, event.target.value];\r\n  //   setEmployeeCoveredArea(x);\r\n  // };\r\n\r\n  const GetAllCountry = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getEmpCountriesInCoveredAreasForEdit/\" + EMPLOYEE_PKID,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      params: {\r\n        language_code: \"en\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setCountryData(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    GetStateEdit(EMPLOYEE_PKID);\r\n  };\r\n\r\n  const GetStateEdit = async (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getEmpStatesInCoveredAreasForEdit/\" + pkid,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      params: {\r\n        language_code: \"en\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setStateData(response.data);\r\n        GetCityEdit(pkid);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const GetCityEdit = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getEmpCitiesInCoveredAreasForEdit/\" + pkid,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      params: {\r\n        language_code: \"en\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setCityData(response.data);\r\n        GetAreaEdit(pkid);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const GetAreaEdit = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getEmpAreasInCoveredAreasForEdit/\" + pkid,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      params: {\r\n        language_code: \"en\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(\"Area Data\", response.data);\r\n        setAreaData(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const GetState = async (event) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    if (event.target.checked === true) {\r\n      var x = [...EmployeeOtherCoveredAreaCounty, event.target.value];\r\n      setEmployeeOtherCoveredAreaCounty(x);\r\n      var obj = {\r\n        CountryId: x,\r\n      };\r\n      axios.post(MyApiUrl + \"statesCheckBox/\", obj).then((response) => {\r\n        setStateData(response.data);\r\n      });\r\n    } else {\r\n      for (var i = 0; i < EmployeeOtherCoveredAreaCounty.length; i++) {\r\n        if (parseInt(EmployeeOtherCoveredAreaCounty[i]) === parseInt(event.target.value)) {\r\n          EmployeeOtherCoveredAreaCounty.splice(i, 1);\r\n        }\r\n      }\r\n      if (\r\n        EmployeeOtherCoveredAreaCounty.filter(\r\n          (item) => item !== event.target.value\r\n        ).length === 0\r\n      ) {\r\n        setStateData([]);\r\n        setCityData([]);\r\n        setAreaData([]);\r\n        setEmployeeOtherCoveredAreaCity([]);\r\n        setEmployeeOtherCoveredAreaArea([]);\r\n\r\n        let objIndex = CountryData.findIndex((obj => obj.COUNTRY_PKID === parseInt(event.target.value)));\r\n        CountryData[objIndex].status = false;\r\n        const tmpNodes = [...CountryData];\r\n        setCountryData(tmpNodes);\r\n      } else {\r\n        var obj = {\r\n          CountryId: EmployeeOtherCoveredAreaCounty,\r\n        };\r\n\r\n        axios.post(MyApiUrl + \"statesCheckBox/\", obj).then((response) => {\r\n          setStateData(response.data);\r\n        });\r\n\r\n        let objIndex = StateData.findIndex((obj => obj.COUNTRY_PKID === parseInt(event.target.value)));\r\n        StateData[objIndex].status = false;\r\n        const tmpNodes = [...StateData];\r\n        setStateData(tmpNodes);\r\n\r\n        var objLatest = {\r\n          CountryId: [parseInt(event.target.value)],\r\n        };\r\n        axios.post(MyApiUrl + \"statesCheckBox/\", objLatest).then((response) => {\r\n          for (var i = 0; i < response.data.length; i++) {\r\n            if (EmployeeOtherCoveredAreaState.includes(parseInt(response.data[i].STATE_PKID)) === true) {\r\n              EmployeeOtherCoveredAreaState.splice(EmployeeOtherCoveredAreaState.indexOf(parseInt(response.data[i].STATE_PKID)), 1);\r\n            }\r\n\r\n            var StateObject = {\r\n              CountryId: [parseInt(event.target.value)],\r\n              StateId: [parseInt(response.data[i].STATE_PKID)],\r\n            };\r\n            let stateID = parseInt(response.data[i].STATE_PKID);\r\n            axios.post(MyApiUrl + \"districtsCheckbox/\", StateObject).then((res) => {\r\n              for (var j = 0; j < res.data.length; j++) {\r\n                if (EmployeeOtherCoveredAreaCity.includes(parseInt(res.data[j].DISTRICT_PKID)) === true) {\r\n                  EmployeeOtherCoveredAreaCity.splice(EmployeeOtherCoveredAreaCity.indexOf(parseInt(res.data[j].DISTRICT_PKID)), 1);\r\n                }\r\n\r\n                var CityObject = {\r\n                  CountryId: [parseInt(event.target.value)],\r\n                  StateId: [stateID],\r\n                  DistrictId: [parseInt(res.data[j].DISTRICT_PKID)],\r\n                };\r\n\r\n                axios.post(MyApiUrl + \"taluksCheckbox/\", CityObject).then((resCity) => {\r\n                  for (var k = 0; k < resCity.data.length; k++) {\r\n                    if (EmployeeOtherCoveredAreaArea.includes(parseInt(resCity.data[k].TALUK_PKID)) === true) {\r\n                      EmployeeOtherCoveredAreaArea.splice(EmployeeOtherCoveredAreaArea.indexOf(parseInt(resCity.data[k].TALUK_PKID)), 1);\r\n                    }\r\n                  }\r\n                });\r\n\r\n              }\r\n            });\r\n          }\r\n          var objForArea = {\r\n            CountryId: EmployeeOtherCoveredAreaCounty,\r\n            StateId: EmployeeOtherCoveredAreaState,\r\n            DistrictId: EmployeeOtherCoveredAreaCity,\r\n          };\r\n          axios.post(MyApiUrl + \"taluksCheckbox/\", objForArea).then((response) => {\r\n            setAreaData(response.data);\r\n          });\r\n        });\r\n\r\n      }\r\n    }\r\n    document.getElementById(\"divLoading\").className = \"hide\";\r\n  };\r\n\r\n  const GetCity = (event) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    if (event.target.checked === true) {\r\n      var x = [...EmployeeOtherCoveredAreaState, event.target.value];\r\n      setEmployeeOtherCoveredAreaState(x);\r\n\r\n      var obj = {\r\n        CountryId: EmployeeOtherCoveredAreaCounty,\r\n        StateId: x,\r\n      };\r\n\r\n      axios.post(MyApiUrl + \"districtsCheckbox/\", obj).then((response) => {\r\n        setCityData(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      });\r\n    } else {\r\n      console.log(EmployeeOtherCoveredAreaState);\r\n      for (var i = 0; i < EmployeeOtherCoveredAreaState.length; i++) {\r\n        if (parseInt(EmployeeOtherCoveredAreaState[i]) === parseInt(event.target.value)) {\r\n          EmployeeOtherCoveredAreaState.splice(i, 1);\r\n        }\r\n      }\r\n      console.log(EmployeeOtherCoveredAreaState);\r\n      if (\r\n        EmployeeOtherCoveredAreaState.filter(\r\n          (item) => item !== event.target.value\r\n        ).length === 0\r\n      ) {\r\n        console.log(\"Inside If\");\r\n        setCityData([]);\r\n        setAreaData([]);\r\n        setEmployeeOtherCoveredAreaCity([]);\r\n        setEmployeeOtherCoveredAreaArea([]);\r\n        let objIndex = StateData.findIndex((obj => obj.STATE_PKID === parseInt(event.target.value)));\r\n        StateData[objIndex].status = false;\r\n        const tmpNodes = [...StateData];\r\n        setStateData(tmpNodes);\r\n      } else {\r\n        var obj = {\r\n          CountryId: EmployeeOtherCoveredAreaCounty,\r\n          StateId: EmployeeOtherCoveredAreaState,\r\n        };\r\n        console.log(obj);\r\n        axios.post(MyApiUrl + \"districtsCheckbox/\", obj).then((response) => {\r\n          setCityData(response.data);\r\n        });\r\n\r\n        let objIndex = StateData.findIndex((obj => obj.STATE_PKID === parseInt(event.target.value)));\r\n        StateData[objIndex].status = false;\r\n        const tmpNodes = [...StateData];\r\n        setStateData(tmpNodes);\r\n        console.log(EmployeeOtherCoveredAreaCity);\r\n\r\n        var objLatest = {\r\n          CountryId: EmployeeOtherCoveredAreaCounty,\r\n          StateId: [parseInt(event.target.value)],\r\n        };\r\n        axios.post(MyApiUrl + \"districtsCheckbox/\", objLatest).then((response) => {\r\n          for (var i = 0; i < response.data.length; i++) {\r\n            if (EmployeeOtherCoveredAreaCity.includes(parseInt(response.data[i].DISTRICT_PKID)) === true) {\r\n              EmployeeOtherCoveredAreaCity.splice(EmployeeOtherCoveredAreaCity.indexOf(parseInt(response.data[i].DISTRICT_PKID)), 1);\r\n            }\r\n\r\n            var CityObject = {\r\n              CountryId: EmployeeOtherCoveredAreaCounty,\r\n              StateId: [parseInt(event.target.value)],\r\n              DistrictId: [parseInt(response.data[i].DISTRICT_PKID)],\r\n            };\r\n            console.log(EmployeeOtherCoveredAreaArea);\r\n            axios.post(MyApiUrl + \"taluksCheckbox/\", CityObject).then((res) => {\r\n              console.log(res.data);\r\n              for (var j = 0; j < res.data.length; j++) {\r\n                if (EmployeeOtherCoveredAreaArea.includes(parseInt(res.data[j].TALUK_PKID)) === true) {\r\n                  EmployeeOtherCoveredAreaArea.splice(EmployeeOtherCoveredAreaArea.indexOf(parseInt(res.data[j].TALUK_PKID)), 1);\r\n                }\r\n              }\r\n              console.log(EmployeeOtherCoveredAreaArea);\r\n            });\r\n          }\r\n          var objForArea = {\r\n            CountryId: EmployeeOtherCoveredAreaCounty,\r\n            StateId: EmployeeOtherCoveredAreaState,\r\n            DistrictId: EmployeeOtherCoveredAreaCity,\r\n          };\r\n          axios.post(MyApiUrl + \"taluksCheckbox/\", objForArea).then((response) => {\r\n            setAreaData(response.data);\r\n          });\r\n        });\r\n      }\r\n\r\n      document.getElementById(\"divLoading\").className = \"hide\";\r\n    }\r\n  };\r\n\r\n  const GetArea = (event) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    if (event.target.checked === true) {\r\n      var x = [...EmployeeOtherCoveredAreaCity, parseInt(event.target.value)];\r\n      setEmployeeOtherCoveredAreaCity(x);\r\n      var obj = {\r\n        CountryId: EmployeeOtherCoveredAreaCounty,\r\n        StateId: EmployeeOtherCoveredAreaState,\r\n        DistrictId: x,\r\n      };\r\n      console.log(\"🚀 ~ file: EditEmployee.js ~ line 605 ~ GetArea ~ obj\", obj)\r\n\r\n      axios.post(MyApiUrl + \"taluksCheckbox/\", obj).then((response) => {\r\n        setAreaData(response.data);\r\n      });\r\n      document.getElementById(\"divLoading\").className = \"hide\";\r\n    } else {\r\n      setEmployeeOtherCoveredAreaCity(\r\n        EmployeeOtherCoveredAreaCity.filter(\r\n          (item) => item !== parseInt(event.target.value)\r\n        )\r\n      );\r\n      if (\r\n        EmployeeOtherCoveredAreaCity.filter(\r\n          (item) => item !== parseInt(event.target.value)\r\n        ).length === 0\r\n      ) {\r\n        setAreaData([]);\r\n        setEmployeeOtherCoveredAreaArea([]);\r\n      } else {\r\n        var x = EmployeeOtherCoveredAreaCity.filter(\r\n          (item) => item !== parseInt(event.target.value)\r\n        );\r\n        var obj = {\r\n          CountryId: EmployeeOtherCoveredAreaCounty,\r\n          StateId: EmployeeOtherCoveredAreaState,\r\n          DistrictId: x,\r\n        };\r\n        axios.post(MyApiUrl + \"taluksCheckbox/\", obj).then((response) => {\r\n          setAreaData(response.data);\r\n        });\r\n\r\n        let objIndex = CityData.findIndex((obj => obj.DISTRICT_PKID === parseInt(event.target.value)));\r\n        CityData[objIndex].status = false;\r\n        const tmpNodes = [...CityData];\r\n        setCityData(tmpNodes);\r\n        var objlatest = {\r\n          CountryId: EmployeeOtherCoveredAreaCounty,\r\n          StateId: EmployeeOtherCoveredAreaState,\r\n          DistrictId: [parseInt(event.target.value)],\r\n        };\r\n        axios.post(MyApiUrl + \"taluksCheckbox/\", objlatest).then((response) => {\r\n          for (var i = 0; i < response.data.length; i++) {\r\n            if (EmployeeOtherCoveredAreaArea.includes(parseInt(response.data[i].TALUK_PKID)) === true) {\r\n              EmployeeOtherCoveredAreaArea.splice(EmployeeOtherCoveredAreaArea.indexOf(parseInt(response.data[i].TALUK_PKID)), 1);\r\n            }\r\n          }\r\n        });\r\n      }\r\n      document.getElementById(\"divLoading\").className = \"hide\";\r\n    }\r\n  };\r\n\r\n  const SelectedArea = (event) => {\r\n    if (event.target.checked == false) {\r\n      for (var i = 0; i < EmployeeOtherCoveredAreaArea.length; i++) {\r\n        if (parseInt(EmployeeOtherCoveredAreaArea[i]) === parseInt(event.target.value)) {\r\n          EmployeeOtherCoveredAreaArea.splice(i, 1);\r\n        }\r\n      }\r\n      let objIndex = AreaData.findIndex((obj => obj.TALUK_PKID === parseInt(event.target.value)));\r\n      AreaData[objIndex].status = false;\r\n      const tmpNodes = [...AreaData];\r\n      setAreaData(tmpNodes);\r\n    } else {\r\n      var x = [...EmployeeOtherCoveredAreaArea, parseInt(event.target.value)];\r\n      console.log(x)\r\n      setEmployeeOtherCoveredAreaArea(x);\r\n    }\r\n  };\r\n\r\n  const GetProfilePic = (event) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    var formData = new FormData();\r\n    formData.append(\"file\", event.target.files[0]);\r\n    axios.post(MyApiUrl + \"upload\", formData).then((response) => {\r\n      setProfilePic(response.data);\r\n      document.getElementById(\"divLoading\").className = \"hide\";\r\n    });\r\n  };\r\n\r\n  const GetAllManagers = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getAllManagers\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const Option = response.data.map((item, i) => (\r\n          <option key={i} value={item.EMPLOYEE_PKID}>\r\n            {item.EMPLOYEE_NAME}\r\n          </option>\r\n        ));\r\n        setEmployeeManagers(Option);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const DeleteOtherDoc = (id) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    EmployeeUploadedOtherDocs.length = 0;\r\n    axios({\r\n      method: \"DELETE\",\r\n      url: MyApiUrl + \"DeleteEmpDocs/\" + id + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.data === true) {\r\n          ViewUploadedDocs();\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    GetAllCountry();\r\n    GetEmptype();\r\n    GetEmployeeHQ();\r\n    GetAllCompanies();\r\n    GetAllManagers();\r\n    GetEmployeeSubTypeById(EmployeeFeilds.Emptype);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"divLoading\"> </div>\r\n      <CRow>\r\n        <CCol md=\"3\" />\r\n        <CCol md=\"6\">\r\n          <h1 id=\"ccmaster\">Update Employee</h1>\r\n          <br />\r\n        </CCol>\r\n        <CCol md=\"3\" />\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md=\"12\">\r\n          <CCard>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol md=\"1\">\r\n                  <div>\r\n                    <CLink to=\"/ViewEmployees\">\r\n                      <CButton size=\"sm\" id=\"AddEmp\">\r\n                        Back\r\n                      </CButton>\r\n                    </CLink>\r\n                    <br />\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Update Employee</CCardHeader>\r\n                    <CCardBody>\r\n                      <CForm\r\n                        method=\"post\"\r\n                        encType=\"multipart/form-data\"\r\n                        className=\"form-horizontal\"\r\n                      >\r\n                        <CFormGroup className=\"pr-1\">\r\n                          <div>\r\n                            <p>\r\n                              <b>Employee Information</b>\r\n                            </p>\r\n                            <CRow id=\"firstrow\">\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Employee Name\r\n                                </CLabel>\r\n                                <CInput\r\n                                  type=\"text\"\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\"Name Of The Employee\"\r\n                                  value={EmployeeFeilds.Name}\r\n                                  onChange={(event) => {\r\n                                    let value = event.target.value;\r\n                                    value = value.replace(/[^A-Z a-z]/gi, \"\");\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      Name: value,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"nf-email\">Gender</CLabel>\r\n                                <CSelect\r\n                                  custom\r\n                                  name=\"Gender\"\r\n                                  id=\"Gender\"\r\n                                  value={EmployeeFeilds.Gender}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      Gender: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  <option value=\"-1\">Select Gender</option>\r\n                                  <option value=\"Male\">Male</option>\r\n                                  <option value=\"Female\">Female</option>\r\n                                  <option value=\"Others\">Others</option>\r\n                                </CSelect>\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Designation\r\n                                </CLabel>\r\n                                <CInput\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\"Designation\"\r\n                                  value={EmployeeFeilds.Designation}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      Designation: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Qualification\r\n                                </CLabel>\r\n                                <CInput\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\"Qualification\"\r\n                                  value={EmployeeFeilds.Qualification}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      Qualification: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Date Of Birth\r\n                                </CLabel>\r\n                                <CInput\r\n                                  type=\"date\"\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\"Date Of Birth\"\r\n                                  value={EmployeeFeilds.DateofBirth}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      DateofBirth: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Email\r\n                                </CLabel>\r\n                                <CInput\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\"Email Address\"\r\n                                  value={EmployeeFeilds.Email}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      Email: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Alternate Email\r\n                                </CLabel>\r\n                                <CInput\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\"Alternate Email\"\r\n                                  value={EmployeeFeilds.Email2}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      Email2: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Headquarter\r\n                                </CLabel>\r\n                                <CSelect\r\n                                  custom\r\n                                  name=\"Emptype\"\r\n                                  id=\"Emptype\"\r\n                                  value={EmployeeFeilds.EmpHQ}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      EmpHQ: event.target.value,\r\n                                    });\r\n                                    GetCountryCode(event.target.value);\r\n                                  }}\r\n                                >\r\n                                  <option value=\"-1\">Select Headquarter</option>\r\n                                  {EmpHQData}\r\n                                  <option value=\"0\">---NONE---</option>\r\n                                </CSelect>\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Contact Number\r\n                                </CLabel>\r\n                                <CRow>\r\n                                  <CCol md=\"2\" style={{ paddingRight: \"0%\" }}>\r\n                                    <CInput\r\n                                      id=\"text-input1\"\r\n                                      name=\"text-input\"\r\n                                      placeholder=\"Code\"\r\n                                      value=\"+\"\r\n                                      readOnly\r\n                                      style={{ fontWeight: \"600\", padding: \"7px\", borderRadius: \"4px 0px 0px 4px !important\" }}\r\n                                    />\r\n                                  </CCol>\r\n                                  <CCol md=\"2\" style={{ paddingRight: \"0%\", paddingLeft: \"0%\" }}>\r\n                                    <CInput\r\n                                      id=\"text-input1\"\r\n                                      name=\"text-input\"\r\n                                      style={{ borderRadius: \"0px\", padding: \"7px\" }}\r\n                                      value={EmployeeFeilds.PhoCode}\r\n                                      maxLength=\"3\"\r\n                                      onChange={(event) => {\r\n                                        const re = /^[0-9\\b]+$/;\r\n                                        if (\r\n                                          event.target.value === \"\" ||\r\n                                          re.test(event.target.value)\r\n                                        ) {\r\n                                          setEmployeeFeilds({\r\n                                            ...EmployeeFeilds,\r\n                                            PhoCode: event.target.value,\r\n                                          });\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                  </CCol>\r\n                                  <CCol md=\"8\" style={{ paddingLeft: \"0%\" }}>\r\n                                    <CInput\r\n                                      id=\"text-input1\"\r\n                                      name=\"text-input\"\r\n                                      placeholder=\"Contact Number\"\r\n                                      value={EmployeeFeilds.PhoneNumber}\r\n                                      maxLength=\"10\"\r\n                                      onChange={(event) => {\r\n                                        const re = /^[0-9\\b]+$/;\r\n                                        if (\r\n                                          event.target.value === \"\" ||\r\n                                          re.test(event.target.value)\r\n                                        ) {\r\n                                          setEmployeeFeilds({\r\n                                            ...EmployeeFeilds,\r\n                                            PhoneNumber: event.target.value,\r\n                                          });\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                  </CCol>\r\n                                </CRow>\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Alternate Number\r\n                                </CLabel>\r\n                                <CRow>\r\n                                  <CCol md=\"2\" style={{ paddingRight: \"0%\" }}>\r\n                                    <CInput\r\n                                      id=\"text-input1\"\r\n                                      name=\"text-input\"\r\n                                      placeholder=\"Code\"\r\n                                      value=\"+\"\r\n                                      readOnly\r\n                                      style={{ fontWeight: \"600\", padding: \"7px\", borderRadius: \"4px 0px 0px 4px !important\" }}\r\n                                    />\r\n                                  </CCol>\r\n                                  <CCol md=\"2\" style={{ paddingRight: \"0%\", paddingLeft: \"0%\" }}>\r\n                                    <CInput\r\n                                      id=\"text-input1\"\r\n                                      name=\"text-input\"\r\n                                      style={{ borderRadius: \"0px\", padding: \"7px\" }}\r\n                                      value={EmployeeFeilds.AltPhoCode}\r\n                                      maxLength=\"3\"\r\n                                      onChange={(event) => {\r\n                                        const re = /^[0-9\\b]+$/;\r\n                                        if (\r\n                                          event.target.value === \"\" ||\r\n                                          re.test(event.target.value)\r\n                                        ) {\r\n                                          setEmployeeFeilds({\r\n                                            ...EmployeeFeilds,\r\n                                            AltPhoCode: event.target.value,\r\n                                          });\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                  </CCol>\r\n                                  <CCol md=\"8\" style={{ paddingLeft: \"0%\" }}>\r\n                                    <CInput\r\n                                      id=\"text-input1\"\r\n                                      name=\"text-input\"\r\n                                      placeholder=\"Contact Number\"\r\n                                      value={EmployeeFeilds.AlterNateNumber}\r\n                                      maxLength=\"10\"\r\n                                      onChange={(event) => {\r\n                                        const re = /^[0-9\\b]+$/;\r\n                                        if (\r\n                                          event.target.value === \"\" ||\r\n                                          re.test(event.target.value)\r\n                                        ) {\r\n                                          setEmployeeFeilds({\r\n                                            ...EmployeeFeilds,\r\n                                            AlterNateNumber: event.target.value,\r\n                                          });\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                  </CCol>\r\n                                </CRow>\r\n                              </CCol>\r\n\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Company\r\n                                </CLabel>\r\n                                <CSelect\r\n                                  custom\r\n                                  name=\"Country\"\r\n                                  id=\"Country\"\r\n                                  value={EmployeeFeilds.Company}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      Company: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  <option value=\"-1\">Select Company</option>\r\n                                  {CompanyData}\r\n                                </CSelect>\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Region\r\n                                </CLabel>\r\n                                <CInput\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\"Region\"\r\n                                  value={EmployeeFeilds.Region}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      Region: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"nf-email\">Manager / Officer / Admin</CLabel>\r\n                                <CSelect\r\n                                  custom\r\n                                  name=\"manager\"\r\n                                  id=\"manager\"\r\n                                  value={EmployeeFeilds.Ismanager}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      Ismanager: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  <option value=\"-1\">Select Here</option>\r\n                                  <option value=\"1\">Manager</option>\r\n                                  <option value=\"0\">Officer</option>\r\n                                  <option value=\"2\">Admin</option>\r\n                                </CSelect>\r\n                              </CCol>\r\n                              <CCol xs=\"3\" md=\"3\">\r\n                                <CLabel>Select Emp Type</CLabel>\r\n                                <CSelect\r\n                                  custom\r\n                                  name=\"Emptype\"\r\n                                  id=\"Emptype\"\r\n                                  value={EmployeeFeilds.Emptype}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      Emptype: event.target.value,\r\n                                    });\r\n                                    GetEmployeeSubTypeById(event.target.value);\r\n                                  }}\r\n                                >\r\n                                  <option value=\"-1\">Employee Type</option>\r\n                                  {EmptypeData}\r\n                                </CSelect>\r\n                              </CCol>\r\n\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Employee Sub-type\r\n                                </CLabel>\r\n                                <CSelect\r\n                                  custom\r\n                                  name=\"Emptype\"\r\n                                  id=\"Emptype\"\r\n                                  value={EmployeeFeilds.EmpSubtype}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      EmpSubtype: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  <option value=\"-1\">Employee Sub Type</option>\r\n                                  {EmpSubtypeData}\r\n                                </CSelect>\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Password\r\n                                </CLabel>\r\n                                <CInput\r\n                                  type=\"password\"\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\"********\"\r\n                                  value={EmployeeFeilds.password}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      password: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"nf-email\">Salary</CLabel>\r\n                                <CInput\r\n                                  type=\"text\"\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\"Employee Salary\"\r\n                                  value={EmployeeFeilds.salary}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      salary: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Joining Date\r\n                                </CLabel>\r\n                                <CInput\r\n                                  type=\"date\"\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\"Joint Date\"\r\n                                  value={EmployeeFeilds.JoiningDate}\r\n                                  onChange={(event) => {\r\n\r\n\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      JoiningDate: event.target.value,\r\n                                    });\r\n\r\n\r\n\r\n                                  }}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Previous Experience\r\n                                </CLabel>\r\n                                <CInput\r\n                                  type=\"text\"\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\"Previous Experience\"\r\n                                  value={EmployeeFeilds.PreviousExp}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      PreviousExp: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"nf-email\">\r\n                                  Releaving Date\r\n                                </CLabel>\r\n                                <CInput\r\n                                  type=\"date\"\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\"Date Of Birth\"\r\n                                  value={EmployeeFeilds.dateofreleaving}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      dateofreleaving: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Profile\r\n                                </CLabel>\r\n                                <CInput\r\n                                  type=\"file\"\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\" \"\r\n                                  value={EmployeeFeilds.Profile}\r\n                                  onChange={GetProfilePic}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"nf-email\">Reporting To</CLabel>\r\n                                <CSelect\r\n                                  custom\r\n                                  name=\"RepTo\"\r\n                                  id=\"RepTo\"\r\n                                  value={EmployeeFeilds.ReportingTo}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      ReportingTo: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  <option value=\"-1\">Select Here</option>\r\n                                  {EmployeeManagers}\r\n                                  <option value=\"0\">Self</option>\r\n                                </CSelect>\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"nf-email\">\r\n                                  Existing Profile\r\n                                </CLabel>\r\n                                <CImg\r\n                                  src={ViewImg + \"/\" + EmployeeFeilds.Profile}\r\n                                  fluid\r\n                                  className=\"mb-2\"\r\n                                  style={{ width: \"100%\" }}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\"></CCol>\r\n                              <CCol md=\"3\"></CCol>\r\n                              <CCol md=\"12\" style={{ paddingBottom: \"0%\", marginBottom: \"0%\", marginTop: \"3%\" }}>\r\n                                <p style={{ marginBottom: \"0%\", fontWeight: \"600\" }}>Employee : {EmployeeFeilds.Name}</p>\r\n                              </CCol>\r\n                              <CCol\r\n                                md=\"6\"\r\n                                style={{\r\n                                  marginTop: \"3%\",\r\n                                  borderRight: \"1px solid rgb(211, 211, 211)\",\r\n                                  borderTop: \"1px solid rgb(211, 211, 211)\",\r\n                                  borderBottom: \"1px solid rgb(211, 211, 211)\",\r\n                                  padding: \"2%\",\r\n                                }}\r\n                              >\r\n                                <p\r\n                                  htmlFor=\"nf-email\"\r\n                                  style={{\r\n                                    fontWeight: \"700\",\r\n                                    fontSize: \"16px\",\r\n                                    textAlign: \"center\",\r\n                                  }}\r\n                                >\r\n                                  Permanent Address\r\n                                </p>\r\n                                <CCol md=\"12\">\r\n                                  <CLabel htmlFor=\"nf-email\">Address 1</CLabel>\r\n                                  <CInput\r\n                                    id=\"exampleInputName2\"\r\n                                    placeholder=\" \"\r\n                                    value={EmployeeFeilds.address1}\r\n                                    onChange={(event) => {\r\n                                      setEmployeeFeilds({\r\n                                        ...EmployeeFeilds,\r\n                                        address1: event.target.value,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                </CCol>\r\n                                <CCol md=\"12\">\r\n                                  <CLabel htmlFor=\"nf-email\">Address 2</CLabel>\r\n                                  <CInput\r\n                                    id=\"exampleInputName2\"\r\n                                    placeholder=\" \"\r\n                                    value={EmployeeFeilds.address2}\r\n                                    onChange={(event) => {\r\n                                      setEmployeeFeilds({\r\n                                        ...EmployeeFeilds,\r\n                                        address2: event.target.value,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                </CCol>\r\n                                <CCol md=\"12\">\r\n                                  <CLabel htmlFor=\"nf-email\">Address 3</CLabel>\r\n                                  <CInput\r\n                                    id=\"exampleInputName2\"\r\n                                    placeholder=\" \"\r\n                                    value={EmployeeFeilds.address3}\r\n                                    onChange={(event) => {\r\n                                      setEmployeeFeilds({\r\n                                        ...EmployeeFeilds,\r\n                                        address3: event.target.value,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                </CCol>\r\n                                <CCol md=\"12\">\r\n                                  <CLabel htmlFor=\"nf-email\">Zip Code</CLabel>\r\n                                  <CInput\r\n                                    id=\"exampleInputName2\"\r\n                                    placeholder=\" \"\r\n                                    value={EmployeeFeilds.ZipCode}\r\n                                    onChange={(event) => {\r\n                                      setEmployeeFeilds({\r\n                                        ...EmployeeFeilds,\r\n                                        ZipCode: event.target.value,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                </CCol>\r\n                              </CCol>\r\n\r\n                              <CCol\r\n                                md=\"6\"\r\n                                style={{\r\n                                  marginTop: \"3%\",\r\n                                  borderTop: \"1px solid rgb(211, 211, 211)\",\r\n                                  borderBottom: \"1px solid rgb(211, 211, 211)\",\r\n                                  padding: \"2%\",\r\n                                }}\r\n                              >\r\n                                <p\r\n                                  htmlFor=\"nf-email\"\r\n                                  style={{\r\n                                    fontWeight: \"700\",\r\n                                    fontSize: \"16px\",\r\n                                    textAlign: \"center\",\r\n                                  }}\r\n                                >\r\n                                  Correspondence Address\r\n                                </p>\r\n                                <CCol md=\"12\">\r\n                                  <CLabel htmlFor=\"nf-email\">Address 1</CLabel>\r\n                                  <CInput\r\n                                    id=\"exampleInputName2\"\r\n                                    placeholder=\" \"\r\n                                    value={EmployeeFeilds.altaddress1}\r\n                                    onChange={(event) => {\r\n                                      setEmployeeFeilds({\r\n                                        ...EmployeeFeilds,\r\n                                        altaddress1: event.target.value,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                </CCol>\r\n                                <CCol md=\"12\">\r\n                                  <CLabel htmlFor=\"nf-email\">Address 2</CLabel>\r\n                                  <CInput\r\n                                    id=\"exampleInputName2\"\r\n                                    placeholder=\" \"\r\n                                    value={EmployeeFeilds.altaddress2}\r\n                                    onChange={(event) => {\r\n                                      setEmployeeFeilds({\r\n                                        ...EmployeeFeilds,\r\n                                        altaddress2: event.target.value,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                </CCol>\r\n                                <CCol md=\"12\">\r\n                                  <CLabel htmlFor=\"nf-email\">Address 3</CLabel>\r\n                                  <CInput\r\n                                    id=\"exampleInputName2\"\r\n                                    placeholder=\" \"\r\n                                    value={EmployeeFeilds.altaddress3}\r\n                                    onChange={(event) => {\r\n                                      setEmployeeFeilds({\r\n                                        ...EmployeeFeilds,\r\n                                        altaddress3: event.target.value,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                </CCol>\r\n                                <CCol md=\"12\">\r\n                                  <CLabel htmlFor=\"nf-email\">Zip Code</CLabel>\r\n                                  <CInput\r\n                                    id=\"exampleInputName2\"\r\n                                    placeholder=\" \"\r\n                                    value={EmployeeFeilds.altZipCode}\r\n                                    onChange={(event) => {\r\n                                      setEmployeeFeilds({\r\n                                        ...EmployeeFeilds,\r\n                                        altZipCode: event.target.value,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                </CCol>\r\n                              </CCol>\r\n                              <CCol\r\n                                md=\"6\"\r\n                                style={{\r\n                                  marginTop: \"3%\",\r\n                                  borderBottom: \"1px solid rgb(211, 211, 211)\",\r\n                                  borderRight: \"1px solid rgb(211, 211, 211)\",\r\n                                  padding: \"2%\",\r\n                                }}\r\n                              >\r\n                                <p\r\n                                  htmlFor=\"nf-email\"\r\n                                  style={{\r\n                                    fontWeight: \"700\",\r\n                                    fontSize: \"16px\",\r\n                                    textAlign: \"center\",\r\n                                  }}\r\n                                >\r\n                                  Upload Documents\r\n                                </p>\r\n                                <div className=\"my-3\">\r\n                                  <Dropzone onDrop={onDrop}>\r\n                                    {({ getRootProps, getInputProps }) => (\r\n                                      <section>\r\n                                        <div\r\n                                          {...getRootProps({\r\n                                            className: \"dropzone\",\r\n                                          })}\r\n                                        >\r\n                                          <input {...getInputProps()} />\r\n                                          {selectedFiles &&\r\n                                            Array.isArray(selectedFiles) &&\r\n                                            selectedFiles.length ? (\r\n                                            <div className=\"selected-file\">\r\n                                              {selectedFiles.length > 3\r\n                                                ? `${selectedFiles.length} files`\r\n                                                : selectedFiles\r\n                                                  .map((file) => file.name)\r\n                                                  .join(\", \")}\r\n                                            </div>\r\n                                          ) : (\r\n                                            `Drag and drop files here, or click to select files`\r\n                                          )}\r\n                                        </div>\r\n                                        <aside className=\"selected-file-wrapper\">\r\n                                          <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-success\"\r\n                                            disabled={!selectedFiles}\r\n                                            onClick={uploadFiles}\r\n                                          >\r\n                                            Upload\r\n                                          </button>\r\n                                        </aside>\r\n                                      </section>\r\n                                    )}\r\n                                  </Dropzone>\r\n                                </div>\r\n                              </CCol>\r\n                              <CCol\r\n                                md=\"6\"\r\n                                style={{\r\n                                  marginTop: \"3%\",\r\n                                  borderBottom: \"1px solid rgb(211, 211, 211)\",\r\n                                  padding: \"2%\",\r\n                                }}\r\n                              >\r\n                                <p\r\n                                  htmlFor=\"nf-email\"\r\n                                  style={{\r\n                                    fontWeight: \"700\",\r\n                                    fontSize: \"16px\",\r\n                                    textAlign: \"center\",\r\n                                  }}\r\n                                >\r\n                                  Uploaded Documents\r\n                                </p>\r\n                                <CRow>{EmployeeUploadedOtherDocsEdit}</CRow>\r\n                              </CCol>\r\n                              <CCol md=\"12\" style={{ paddingBottom: \"0%\", marginBottom: \"0%\", marginTop: \"3%\" }}>\r\n                                <p style={{ marginBottom: \"0%\", fontWeight: \"600\" }}>Employee : {EmployeeFeilds.Name}</p>\r\n                              </CCol>\r\n                              <CCol\r\n                                md=\"12\"\r\n                                style={{\r\n                                  borderBottom: \"1px solid rgb(211, 211, 211)\",\r\n                                  padding: \"2%\",\r\n                                }}\r\n                              >\r\n                                <p\r\n                                  htmlFor=\"nf-email\"\r\n                                  style={{\r\n                                    fontWeight: \"700\",\r\n                                    fontSize: \"16px\",\r\n                                    textAlign: \"center\",\r\n                                    paddingBottom: \"2%\",\r\n                                    borderBottom: \"1px solid #ebedef\",\r\n                                  }}\r\n                                >\r\n                                  Covered Areas\r\n                                </p>\r\n                                <CRow style={{ paddingTop: \"1%\" }}>\r\n                                  <CCol\r\n                                    md=\"3\"\r\n                                    style={{ borderRight: \"1px solid #ebedef\" }}\r\n                                  >\r\n                                    <p\r\n                                      style={{\r\n                                        fontWeight: \"700\",\r\n                                        fontFamily: \"sans-serif\",\r\n                                        textAlign: \"center\",\r\n                                        borderBottom: \"1px solid #ebedef\",\r\n                                        paddingBottom: \"5%\",\r\n                                      }}\r\n                                    >\r\n                                      Choose Country\r\n                                    </p>\r\n                                    {CountryData.map((i) => {\r\n                                      if (i.status == true) {\r\n                                        if (!EmployeeOtherCoveredAreaCounty.includes(i.COUNTRY_PKID)) {\r\n                                          EmployeeOtherCoveredAreaCounty.push(i.COUNTRY_PKID);\r\n                                        }\r\n                                        return (\r\n                                          <CCol md=\"12\">\r\n                                            <CInput\r\n                                              type=\"checkbox\"\r\n                                              name=\"area\"\r\n                                              id=\"area\"\r\n                                              checked\r\n                                              className=\"CheckBoxClass\"\r\n                                              placeholder=\" \"\r\n                                              value={i.COUNTRY_PKID}\r\n                                              onClick={GetState}\r\n                                            />\r\n                                            <label style={{ display: \"inline-block !important\" }}>{i.COUNTRY_NAME}</label>\r\n                                          </CCol>\r\n                                        );\r\n                                      } else {\r\n                                        return (\r\n                                          <CCol md=\"12\">\r\n                                            <CInput\r\n                                              type=\"checkbox\"\r\n                                              name=\"area\"\r\n                                              id=\"area\"\r\n                                              className=\"CheckBoxClass\"\r\n                                              placeholder=\" \"\r\n                                              value={i.COUNTRY_PKID}\r\n                                              onClick={GetState}\r\n                                            />\r\n                                            <label style={{ display: \"inline-block !important\" }}>{i.COUNTRY_NAME}</label>\r\n                                          </CCol>\r\n                                        );\r\n                                      }\r\n                                    })}\r\n                                  </CCol>\r\n                                  <CCol\r\n                                    md=\"3\"\r\n                                    style={{ borderRight: \"1px solid #ebedef\" }}\r\n                                  >\r\n                                    <p\r\n                                      style={{\r\n                                        fontWeight: \"700\",\r\n                                        fontFamily: \"sans-serif\",\r\n                                        textAlign: \"center\",\r\n                                        borderBottom: \"1px solid #ebedef\",\r\n                                        paddingBottom: \"5%\",\r\n                                      }}\r\n                                    >\r\n                                      Choose States\r\n                                    </p>\r\n                                    {StateData.map((i) => {\r\n                                      if (i.status == true) {\r\n                                        if (!EmployeeOtherCoveredAreaState.includes(i.STATE_PKID)) {\r\n                                          EmployeeOtherCoveredAreaState.push(i.STATE_PKID);\r\n                                        }\r\n                                        return (\r\n                                          <CCol md=\"12\">\r\n                                            <CInput\r\n                                              type=\"checkbox\"\r\n                                              name=\"area\"\r\n                                              id=\"area\"\r\n                                              checked\r\n                                              className=\"CheckBoxClass\"\r\n                                              placeholder=\" \"\r\n                                              value={i.STATE_PKID}\r\n                                              onClick={GetCity}\r\n                                            />\r\n                                            <label style={{ display: \"inline-block !important\" }}>{i.STATE_NAME}</label>\r\n                                          </CCol>\r\n                                        );\r\n                                      } else {\r\n                                        return (\r\n                                          <CCol md=\"12\">\r\n                                            <CInput\r\n                                              type=\"checkbox\"\r\n                                              name=\"area\"\r\n                                              id=\"area\"\r\n                                              className=\"CheckBoxClass\"\r\n                                              placeholder=\" \"\r\n                                              value={i.STATE_PKID}\r\n                                              onClick={GetCity}\r\n                                            />\r\n                                            <label style={{ display: \"inline-block !important\" }}>{i.STATE_NAME}</label>\r\n                                          </CCol>\r\n                                        );\r\n                                      }\r\n                                    })}\r\n                                  </CCol>\r\n                                  <CCol\r\n                                    md=\"3\"\r\n                                    style={{ borderRight: \"1px solid #ebedef\" }}\r\n                                  >\r\n                                    <p\r\n                                      style={{\r\n                                        fontWeight: \"700\",\r\n                                        fontFamily: \"sans-serif\",\r\n                                        textAlign: \"center\",\r\n                                        borderBottom: \"1px solid #ebedef\",\r\n                                        paddingBottom: \"5%\",\r\n                                      }}\r\n                                    >\r\n                                      Choose District\r\n                                    </p>\r\n                                    {CityData.map((i) => {\r\n                                      if (i.status == true) {\r\n                                        if (!EmployeeOtherCoveredAreaCity.includes(i.DISTRICT_PKID)) {\r\n                                          EmployeeOtherCoveredAreaCity.push(i.DISTRICT_PKID);\r\n                                        }\r\n                                        return (\r\n                                          <CCol md=\"12\">\r\n                                            <CInput\r\n                                              type=\"checkbox\"\r\n                                              name=\"area\"\r\n                                              id=\"area\"\r\n                                              className=\"CheckBoxClass\"\r\n                                              placeholder=\" \"\r\n                                              checked\r\n                                              value={i.DISTRICT_PKID}\r\n                                              onClick={GetArea}\r\n                                            />\r\n                                            <label style={{ display: \"inline-block !important\" }}>{i.DISTRICT_NAME}</label>\r\n                                          </CCol>\r\n                                        );\r\n                                      } else {\r\n                                        return (\r\n                                          <CCol md=\"12\">\r\n                                            <CInput\r\n                                              type=\"checkbox\"\r\n                                              name=\"area\"\r\n                                              id=\"area\"\r\n                                              className=\"CheckBoxClass\"\r\n                                              placeholder=\" \"\r\n                                              value={i.DISTRICT_PKID}\r\n                                              onClick={GetArea}\r\n                                            />\r\n                                            <label style={{ display: \"inline-block !important\" }}>{i.DISTRICT_NAME}</label>\r\n                                          </CCol>\r\n                                        );\r\n                                      }\r\n                                    })}\r\n                                  </CCol>\r\n                                  <CCol md=\"3\">\r\n                                    <p\r\n                                      style={{\r\n                                        fontWeight: \"700\",\r\n                                        fontFamily: \"sans-serif\",\r\n                                        textAlign: \"center\",\r\n                                        borderBottom: \"1px solid #ebedef\",\r\n                                        paddingBottom: \"5%\",\r\n                                      }}\r\n                                    >\r\n                                      Choose Taluk\r\n                                    </p>\r\n                                    {AreaData.map((i) => {\r\n                                      if (i.status == true) {\r\n                                        if (!EmployeeOtherCoveredAreaArea.includes(i.TALUK_PKID)) {\r\n                                          EmployeeOtherCoveredAreaArea.push(i.TALUK_PKID);\r\n                                        }\r\n                                        return (\r\n                                          <CCol md=\"12\">\r\n                                            <CInput\r\n                                              type=\"checkbox\"\r\n                                              name=\"area\"\r\n                                              id={`area-${i.TALUK_PKID}`}\r\n                                              className=\"CheckBoxClass\"\r\n                                              placeholder=\" \"\r\n                                              checked=\"true\"\r\n                                              value={i.TALUK_PKID}\r\n                                              onClick={SelectedArea}\r\n                                            />\r\n                                            <label style={{ display: \"inline-block !important\" }}>{i.TALUK_NAME}</label>\r\n                                          </CCol>\r\n                                        );\r\n                                      } else {\r\n                                        return (\r\n                                          <CCol md=\"12\">\r\n                                            <CInput\r\n                                              type=\"checkbox\"\r\n                                              name=\"area\"\r\n                                              id=\"area\"\r\n                                              className=\"CheckBoxClass\"\r\n                                              placeholder=\" \"\r\n                                              value={i.TALUK_PKID}\r\n                                              onClick={SelectedArea}\r\n                                            />\r\n                                            <label style={{ display: \"inline-block !important\" }}>{i.TALUK_NAME}</label>\r\n                                          </CCol>\r\n                                        );\r\n                                      }\r\n                                    })}\r\n                                  </CCol>\r\n                                </CRow>\r\n                              </CCol>\r\n                            </CRow>\r\n                          </div>\r\n\r\n                          <CRow>\r\n                            <CCol md=\"6\" style={{ paddingBottom: \"0%\", marginBottom: \"0%\" }}>\r\n                              <p style={{ marginBottom: \"0%\", fontWeight: \"600\" }}>Employee : {EmployeeFeilds.Name}</p>\r\n                            </CCol>\r\n                            <CCol md=\"6\">\r\n                              <div id=\"inline-btn\">\r\n                                <CButton\r\n                                  type=\"button\"\r\n                                  onClick={AddEmployee}\r\n                                  color=\"primary\"\r\n                                  style={{ float: \"right\", fontWeight: \"600\" }}\r\n                                >\r\n                                  UPDATE EMPLOYEE\r\n                                </CButton>\r\n                              </div>\r\n                            </CCol>\r\n                          </CRow>\r\n                        </CFormGroup>\r\n                      </CForm>\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditEmployee;"],"sourceRoot":""}