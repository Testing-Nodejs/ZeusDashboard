{"version":3,"sources":["services/service.js","views/masters/DateFilter.js","views/Reports/VisitedCustomers.js"],"names":["MyApiUrl","ViewImg","DateFilter","date","idate","Date","toISOString","split","getDate","toString","padStart","getMonth","getFullYear","VisitedCustomers","props","console","log","EmployeeType","location","state","data","propsData","EMPLOYEE_TYPE_NAME","EmployeeSubType","EMPLOYEE_SUB_TYPE_NAME","EmployeeHQ","HQ_NAME","Company","COMPANY_NAME","EmployeeName","EMPLOYEE_NAME","EmployeeEmail","EMPLOYEE_EMAIL","ContactNumber","EMPLOYEE_CONTACT","JoiningDate","EMPLOYEE_DOJ","EmployeeID","EMPLOYEE_PKID","AttendenceDate","i","MDate","useState","block","setBlock","Remark","setRemark","ResponseData","setResponseData","React","useEffect","document","getElementById","className","axios","method","url","headers","then","response","catch","error","history","useHistory","id","md","color","size","onClick","goBack","col","cnt","csvData","Array","push","map","item","EMPLOYEE_VISITED_CUSTOMERS_DATE","dateMDY","visitedTime","EMPLOYEE_VISITED_CUSTOMERS_TIME","slice","CUSTOMER_CATEGORY_NAME","CUSTOMER_TYPE_NAME","CUSTOMER_SUBTYPE_NAME","CUSTOMER_NAME","CUSTOMER_EMAIL","CUSTOMER_MOBILE","CUSTOMER_FIRM_NAME","fileName","buffer","join","blob","Blob","type","link","createElement","undefined","download","setAttribute","window","URL","createObjectURL","style","body","appendChild","click","removeChild","navigator","msSaveBlob","marginTop","width","borderRight","overflow","index","CUSTOMER_CONTACT_PERSON_NAME","CUSTOMER_CONTACT_PERSON_EMAIL","CUSTOMER_CONTACT_PERSON_EMAIL2","CUSTOMER_CONTACT_PERSON_PHO","CUSTOMER_CONTACT_PERSON_PHO2","fontSize","remarks","EMPLOYEE_VISITED_CUSTOMERS_REMARK","show","onClose","closeButton","marginLeft"],"mappings":"kHAAA,oEAWE,IAAMA,EAAW,yCAEXC,EAAU,sC,uDCbH,SAASC,EAAT,GAA+B,IAATC,EAAQ,EAARA,KAC/BC,EAAQ,IAAIC,KAAK,IAAIA,KAAKF,GAAMG,cAAcC,MAAM,KAAK,IAM7D,MALW,UAAMH,EAAMI,UAAUC,WAAWC,SAAS,EAAG,KAA7C,aACTN,EAAMO,WAAa,GAElBF,WACAC,SAAS,EAAG,KAJJ,YAIYN,EAAMQ,eAN/B,mC,2IC0YeC,UA5WU,SAACC,GACxBC,QAAQC,IAAIF,GACZ,IAAMG,EAAeH,EAAMI,SAASC,MAAMC,KAAKC,UAAUC,mBACnDC,EACJT,EAAMI,SAASC,MAAMC,KAAKC,UAAUG,uBAChCC,EAAaX,EAAMI,SAASC,MAAMC,KAAKC,UAAUK,QACjDC,EAAUb,EAAMI,SAASC,MAAMC,KAAKC,UAAUO,aAC9CC,EAAef,EAAMI,SAASC,MAAMC,KAAKC,UAAUS,cACnDC,EAAgBjB,EAAMI,SAASC,MAAMC,KAAKC,UAAUW,eACpDC,EAAgBnB,EAAMI,SAASC,MAAMC,KAAKC,UAAUa,iBACpDC,EAAcrB,EAAMI,SAASC,MAAMC,KAAKC,UAAUe,aAClDC,EAAavB,EAAMI,SAASC,MAAMC,KAAKC,UAAUiB,cAEjDC,EAAiBzB,EAAMI,SAASC,MAAMC,KAAKoB,EAAEC,MAbjB,EAeRC,oBAAS,GAfD,mBAe3BC,EAf2B,KAepBC,EAfoB,OAgBNF,qBAhBM,mBAgB3BG,EAhB2B,KAgBnBC,EAhBmB,OAiBMJ,mBAAS,IAjBf,mBAiB3BK,EAjB2B,KAiBbC,EAjBa,KAwIlCC,IAAMC,WAAU,WApHdC,SAASC,eAAe,cAAcC,UAAY,OAClDC,IAAM,CACJC,OAAQ,MACRC,IACExD,IACA,0CACAqC,EACA,IACAE,EACFkB,QAAS,CACP,eAAgB,sBAGjBC,MAAK,SAACC,GACL5C,QAAQC,IAAI2C,EAASvC,MACrB4B,EAAgBW,EAASvC,MACzB+B,SAASC,eAAe,cAAcC,UAAY,UAEnDO,OAAM,SAACC,GACN9C,QAAQC,IAAI6C,QAmGf,IACH,IAAIC,EAAUC,cACd,OACE,gCACE,qBAAKC,GAAG,aAAR,eACA,oBAAIA,GAAG,WAAP,iCACA,uBACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAMC,GAAG,MACT,cAAC,IAAD,CAAMA,GAAG,KAAT,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMA,GAAG,IAAT,SACE,cAAC,IAAD,CACEC,MAAM,SACNC,KAAK,KACLC,QAAS,kBAAMN,EAAQO,UAHzB,sBASJ,uBACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMC,IAAI,IAAV,8BACA,cAAC,IAAD,CAAMA,IAAI,IAAV,SACE,cAAC,IAAD,CACEF,QA/HV,WACdjB,SAASC,eAAe,cAAcC,UAAY,OAClD,IAAIkB,EAAM,EAENC,EAAU,IAAIC,MAClBD,EAAQE,KACN,2PAEF3B,EAAa4B,KAAI,SAACC,GAChB,IAAIxE,EAAQ,IAAIC,KACd,IAAIA,KAAKuE,EAAKC,iCACXvE,cACAC,MAAM,KAAK,IAEZuE,EAAO,UAAM1E,EAAMI,UAAUC,WAAWC,SAAS,EAAG,KAA7C,aACTN,EAAMO,WAAa,GAElBF,WACAC,SAAS,EAAG,KAJJ,YAIYN,EAAMQ,eAEzBmE,EAAc,IAAI1E,KAAKuE,EAAKI,iCAC7B1E,cACAC,MAAM,KAAK,GACX0E,MAAM,GAAI,GACb,OACEV,IACAC,EAAQE,KACN,IACAH,EACA,MACAtD,EACA,MACAM,EACA,MACAE,EACA,MACAE,EACA,MACAE,EACA,MACAE,EACA,MACAE,EACA,MACA6C,EACA,MACAC,EACA,MACAH,EAAKM,uBACL,MACAN,EAAKO,mBACL,MACAP,EAAKQ,sBACL,MACAR,EAAKS,cACL,MACAT,EAAKU,eACL,MACAV,EAAKW,gBACL,MACAX,EAAKY,mBACL,QAKN,IAAMC,EAAW,iCACXC,EAASlB,EAAQmB,KAAK,MACtBC,EAAO,IAAIC,KAAK,CAACH,GAAS,CAC9BI,KAAM,2BAIFC,EAAO5C,SAAS6C,cAAc,UACdC,IAAlBF,EAAKG,UACPH,EAAKI,aAAa,OAAQC,OAAOC,IAAIC,gBAAgBV,IACrDG,EAAKI,aAAa,WAAYV,GAC9BM,EAAKQ,MAAQ,oBACbpD,SAASqD,KAAKC,YAAYV,GAC1BA,EAAKW,QACLvD,SAASqD,KAAKG,YAAYZ,IACjBa,UAAUC,YACnBD,UAAUC,WAAWjB,EAAMH,GAG7BtC,SAASC,eAAe,cAAcC,UAAY,QA2C1Ba,MAAM,UACNqC,MAAO,CACLO,UAAW,MAEb3C,KAAK,KACLH,GAAG,SAPL,oCAcN,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMC,GAAG,KAAT,SACE,uBAAOD,GAAG,kBAAkBuC,MAAO,CAAEQ,MAAO,QAA5C,SACE,+BACE,qBAAIR,MAAO,CAAES,YAAa,qBAA1B,UACE,+BACE,6BACE,kDAEF,6BAAK/F,OAEP,+BACE,6BACE,sDAEF,6BAAKM,OAEP,+BACE,6BACE,uCAEF,6BAAKE,OAEP,+BACE,6BACE,4CAEF,6BAAKE,UAGT,qBAAI4E,MAAO,CAAES,YAAa,qBAA1B,UACE,+BACE,6BACE,kDAEF,6BAAKnF,OAEP,+BACE,6BACE,kDAEF,6BAAKE,OAEP,+BACE,6BACE,mDAEF,6BAAKE,OAEP,+BACE,6BACE,iDAEF,6BAAKE,wBASrB,eAAC,IAAD,WACE,eAAC,IAAD,kCACuB,cAAC,IAAD,CAAYhC,KAAMoC,IADzC,QAGA,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAM0B,GAAG,KAAT,SACE,qBAAKsC,MAAO,CAAEU,SAAU,QAAxB,SACE,wBAAOjD,GAAG,aAAV,UACE,gCACE,+BACE,oCACA,8CACA,8CACA,mDACA,+CACA,mDACA,+CACA,uCACA,gDACA,qDACA,sDACA,0DACA,uDACA,2DACA,6CAGJ,gCACGjB,EAAa4B,KAAI,SAACnC,EAAG0E,GACpB,OACE,+BACE,6BAAKA,EAAQ,IACb,6BAEI,cAAC,IAAD,CACE/G,KACEqC,EAAEqC,oCAKV,6BACG,IAAIxE,KACHmC,EAAEwC,iCAED1E,cACAC,MAAM,KAAK,GACX0E,MAAM,GAAI,KAEf,6BAAKzC,EAAE0C,yBACP,6BAAK1C,EAAE2C,qBACP,6BAAK3C,EAAE4C,wBACP,6BAAK5C,EAAE6C,gBACP,6BAAK7C,EAAE8C,iBACP,6BAAK9C,EAAE+C,kBACP,6BAAK/C,EAAE2E,+BACP,6BAAK3E,EAAE4E,gCACP,6BAAK5E,EAAE6E,iCACP,6BAAK7E,EAAE8E,8BACP,6BAAK9E,EAAE+E,+BACP,6BACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMtD,GAAG,IAAT,SACE,cAAC,IAAD,CACEC,MAAM,UACNC,KAAK,KACLH,GAAG,SACHuC,MAAO,CAAEiB,SAAU,QACnBpD,QAAS,WAxLlC,IAACqD,IA0L4BjF,EAAEkF,kCAzLhD5E,EAAU2E,GACV7E,GAAUD,IAiL8B,gEA+BpC,cAAC,IAAD,CAAMsB,GAAG,SAEX,eAAC,IAAD,CAAQ0D,KAAMhF,EAAOiF,QAAS,kBAAMhF,GAAUD,IAAQuB,MAAM,OAA5D,UACE,cAAC,IAAD,CAAc2D,aAAW,EAAzB,SACE,cAAC,IAAD,+BAEF,cAAC,IAAD,UACE,cAAC,IAAD,UACE,mBAAGtB,MAAO,CAAEuB,WAAY,MAAxB,SACGjF,QAIP,cAAC,IAAD,UACE,cAAC,IAAD,CAASqB,MAAM,YAAYE,QAAS,kBAAMxB,GAAUD,IAApD","file":"static/js/103.507d9916.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","export default function DateFilter({ date }) {\r\n  let idate = new Date(new Date(date).toISOString().split(\"T\")[0]);\r\n  let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n    idate.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n  return dateMDY;\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-25 17:00:15\r\n * @modify date 2021-12-06 15:32:46\r\n * @desc [description]\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CButton,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalFooter,\r\n  CModalBody,\r\n} from \"@coreui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MyApiUrl } from \"src/services/service\";\r\nimport DateFilter from \"../masters/DateFilter\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\n\r\nconst VisitedCustomers = (props) => {\r\n  console.log(props);\r\n  const EmployeeType = props.location.state.data.propsData.EMPLOYEE_TYPE_NAME;\r\n  const EmployeeSubType =\r\n    props.location.state.data.propsData.EMPLOYEE_SUB_TYPE_NAME;\r\n  const EmployeeHQ = props.location.state.data.propsData.HQ_NAME;\r\n  const Company = props.location.state.data.propsData.COMPANY_NAME;\r\n  const EmployeeName = props.location.state.data.propsData.EMPLOYEE_NAME;\r\n  const EmployeeEmail = props.location.state.data.propsData.EMPLOYEE_EMAIL;\r\n  const ContactNumber = props.location.state.data.propsData.EMPLOYEE_CONTACT;\r\n  const JoiningDate = props.location.state.data.propsData.EMPLOYEE_DOJ;\r\n  const EmployeeID = props.location.state.data.propsData.EMPLOYEE_PKID;\r\n\r\n  const AttendenceDate = props.location.state.data.i.MDate;\r\n\r\n  const [block, setBlock] = useState(false);\r\n  const [Remark, setRemark] = useState();\r\n  const [ResponseData, setResponseData] = useState([]);\r\n\r\n  const GetEmployeeOrders = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url:\r\n        MyApiUrl +\r\n        \"/getCustomersDetailsFromAttendenceDate/\" +\r\n        EmployeeID +\r\n        \"/\" +\r\n        AttendenceDate,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setResponseData(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const ToExcel = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    var cnt = 0;\r\n    // eslint-disable-next-line no-array-constructor\r\n    var csvData = new Array();\r\n    csvData.push(\r\n      '\"Sl No\",\"Employee Type\",\"Employee Sub Type\",\"HQ\",\"Company\",\"Employee Name\",\"Employee Email\",\"Contact Number\",\"Visited Date\",\"Visited Time\",\"Customer Category\",\"Customer Type\",\"Customer Sub Type\",\"Customer Name\",\"Email\",\"Contact Number\",\"Firm Name\"'\r\n    );\r\n    ResponseData.map((item) => {\r\n      let idate = new Date(\r\n        new Date(item.EMPLOYEE_VISITED_CUSTOMERS_DATE)\r\n          .toISOString()\r\n          .split(\"T\")[0]\r\n      );\r\n      let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n        idate.getMonth() + 1\r\n      )\r\n        .toString()\r\n        .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n\r\n      let visitedTime = new Date(item.EMPLOYEE_VISITED_CUSTOMERS_TIME)\r\n        .toISOString()\r\n        .split(\"T\")[1]\r\n        .slice(0, -1);\r\n      return (\r\n        cnt++,\r\n        csvData.push(\r\n          '\"' +\r\n          cnt +\r\n          '\",\"' +\r\n          EmployeeType +\r\n          '\",\"' +\r\n          EmployeeSubType +\r\n          '\",\"' +\r\n          EmployeeHQ +\r\n          '\",\"' +\r\n          Company +\r\n          '\",\"' +\r\n          EmployeeName +\r\n          '\",\"' +\r\n          EmployeeEmail +\r\n          '\",\"' +\r\n          ContactNumber +\r\n          '\",\"' +\r\n          dateMDY +\r\n          '\",\"' +\r\n          visitedTime +\r\n          '\",\"' +\r\n          item.CUSTOMER_CATEGORY_NAME +\r\n          '\",\"' +\r\n          item.CUSTOMER_TYPE_NAME +\r\n          '\",\"' +\r\n          item.CUSTOMER_SUBTYPE_NAME +\r\n          '\",\"' +\r\n          item.CUSTOMER_NAME +\r\n          '\",\"' +\r\n          item.CUSTOMER_EMAIL +\r\n          '\",\"' +\r\n          item.CUSTOMER_MOBILE +\r\n          '\",\"' +\r\n          item.CUSTOMER_FIRM_NAME +\r\n          '\"'\r\n        )\r\n      );\r\n    });\r\n\r\n    const fileName = \"Employee Visited Customers.csv\";\r\n    const buffer = csvData.join(\"\\n\");\r\n    const blob = new Blob([buffer], {\r\n      type: \"text/csv;charset=utf8;\",\r\n    });\r\n\r\n    //IN IE\r\n    const link = document.createElement(\"a\");\r\n    if (link.download !== undefined) {\r\n      link.setAttribute(\"href\", window.URL.createObjectURL(blob));\r\n      link.setAttribute(\"download\", fileName);\r\n      link.style = \"visibility:hidden\";\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } else if (navigator.msSaveBlob) {\r\n      navigator.msSaveBlob(blob, fileName);\r\n    } else {\r\n    }\r\n    document.getElementById(\"divLoading\").className = \"hide\";\r\n  };\r\n\r\n  const ViewRemark = (remarks) => {\r\n    setRemark(remarks);\r\n    setBlock(!block);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    GetEmployeeOrders();\r\n  }, []);\r\n  let history = useHistory();\r\n  return (\r\n    <div>\r\n      <div id=\"divLoading\"> </div>\r\n      <h1 id=\"ccmaster\">Employee Attendance</h1>\r\n      <br />\r\n      <CRow>\r\n        <CCol md=\"2\" />\r\n        <CCol md=\"12\">\r\n          <CCard>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol md=\"1\">\r\n                  <CButton\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() => history.goBack()}\r\n                  >\r\n                    Back\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n              <br />\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>\r\n                      <CRow>\r\n                        <CCol col=\"6\">Employee Details</CCol>\r\n                        <CCol col=\"6\">\r\n                          <CButton\r\n                            onClick={ToExcel}\r\n                            color=\"primary\"\r\n                            style={{\r\n                              marginTop: \"0%\",\r\n                            }}\r\n                            size=\"sm\"\r\n                            id=\"AddEmp\"\r\n                          >\r\n                            Export To Excel\r\n                          </CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                      <CRow>\r\n                        <CCol md=\"12\">\r\n                          <table id=\"customerDetails\" style={{ width: \"100%\" }}>\r\n                            <tr>\r\n                              <td style={{ borderRight: \"1px solid #7e0103\" }}>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Employee Type :</b>\r\n                                  </th>\r\n                                  <td>{EmployeeType}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Employee Sub Type :</b>\r\n                                  </th>\r\n                                  <td>{EmployeeSubType}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>HQ :</b>\r\n                                  </th>\r\n                                  <td>{EmployeeHQ}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Company :</b>\r\n                                  </th>\r\n                                  <td>{Company}</td>\r\n                                </tr>\r\n                              </td>\r\n                              <td style={{ borderRight: \"1px solid #7e0103\" }}>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Employee Name :</b>\r\n                                  </th>\r\n                                  <td>{EmployeeName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Email Address :</b>\r\n                                  </th>\r\n                                  <td>{EmployeeEmail}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Contact Number :</b>\r\n                                  </th>\r\n                                  <td>{ContactNumber}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Joining Date :</b>\r\n                                  </th>\r\n                                  <td>{JoiningDate}</td>\r\n                                </tr>\r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardBody>\r\n                  </CCard>\r\n                  <CCard>\r\n                    <CCardHeader>\r\n                      Visited Customers ( {<DateFilter date={AttendenceDate} />} )\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                      <CRow>\r\n                        <CCol md=\"12\">\r\n                          <div style={{ overflow: \"auto\" }}>\r\n                            <table id=\"Attendence\">\r\n                              <thead>\r\n                                <tr>\r\n                                  <th>Sl</th>\r\n                                  <th>Visited Date</th>\r\n                                  <th>Visited Time</th>\r\n                                  <th>Customer Category</th>\r\n                                  <th>Customer Type</th>\r\n                                  <th>Customer Sub Type</th>\r\n                                  <th>Customer Name</th>\r\n                                  <th>Email</th>\r\n                                  <th>Contact Number</th>\r\n                                  <th>Contact People Name</th>\r\n                                  <th>Contact People Email</th>\r\n                                  <th>Contact People Alt Email</th>\r\n                                  <th>Contact People Number</th>\r\n                                  <th>Contact People Alt Number</th>\r\n                                  <th>Remark</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {ResponseData.map((i, index) => {\r\n                                  return (\r\n                                    <tr>\r\n                                      <td>{index + 1}</td>\r\n                                      <td>\r\n                                        {\r\n                                          <DateFilter\r\n                                            date={\r\n                                              i.EMPLOYEE_VISITED_CUSTOMERS_DATE\r\n                                            }\r\n                                          />\r\n                                        }\r\n                                      </td>\r\n                                      <td>\r\n                                        {new Date(\r\n                                          i.EMPLOYEE_VISITED_CUSTOMERS_TIME\r\n                                        )\r\n                                          .toISOString()\r\n                                          .split(\"T\")[1]\r\n                                          .slice(0, -1)}\r\n                                      </td>\r\n                                      <td>{i.CUSTOMER_CATEGORY_NAME}</td>\r\n                                      <td>{i.CUSTOMER_TYPE_NAME}</td>\r\n                                      <td>{i.CUSTOMER_SUBTYPE_NAME}</td>\r\n                                      <td>{i.CUSTOMER_NAME}</td>\r\n                                      <td>{i.CUSTOMER_EMAIL}</td>\r\n                                      <td>{i.CUSTOMER_MOBILE}</td>\r\n                                      <td>{i.CUSTOMER_CONTACT_PERSON_NAME}</td>\r\n                                      <td>{i.CUSTOMER_CONTACT_PERSON_EMAIL}</td>\r\n                                      <td>{i.CUSTOMER_CONTACT_PERSON_EMAIL2}</td>\r\n                                      <td>{i.CUSTOMER_CONTACT_PERSON_PHO}</td>\r\n                                      <td>{i.CUSTOMER_CONTACT_PERSON_PHO2}</td>\r\n                                      <td>\r\n                                        <CRow>\r\n                                          <CCol md=\"8\">\r\n                                            <CButton\r\n                                              color=\"primary\"\r\n                                              size=\"sm\"\r\n                                              id=\"AddEmp\"\r\n                                              style={{ fontSize: \"12px\" }}\r\n                                              onClick={() => {\r\n                                                ViewRemark(\r\n                                                  i.EMPLOYEE_VISITED_CUSTOMERS_REMARK\r\n                                                );\r\n                                              }}\r\n                                            >\r\n                                              Click Here\r\n                                            </CButton>\r\n                                          </CCol>\r\n                                        </CRow>\r\n                                      </td>\r\n                                    </tr>\r\n                                  );\r\n                                })}\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol md=\"2\" />\r\n      </CRow>\r\n      <CModal show={block} onClose={() => setBlock(!block)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Visited Remark</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            <p style={{ marginLeft: \"2%\" }}>\r\n              {Remark}\r\n            </p>\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setBlock(!block)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisitedCustomers;\r\n"],"sourceRoot":""}