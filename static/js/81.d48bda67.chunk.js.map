{"version":3,"sources":["services/service.js","views/masters/DateFilter.js","views/EmployeeMaster/EmployeeSeparation.js"],"names":["MyApiUrl","ViewImg","DateFilter","date","idate","Date","toISOString","split","getDate","toString","padStart","getMonth","getFullYear","table","placeholder","label","items","values","fields2","key","CoverdArea","EmployeeSeparation","useState","ResponseData","setResponseData","EmployeeCoveredArea","setEmployeeCoveredArea","EmployeeUploadedDoc","setEmployeeUploadedDoc","EmployeeAddress","setEmployeeAddress","block2","setBlock2","block3","setBlock3","block4","setBlock4","GetAllEmployees","document","getElementById","className","axios","method","url","headers","then","response","data","map","item","EMPLOYEE_TYPE_NAME","EMPLOYEE_SUB_TYPE_NAME","HQ","HQ_NAME","Company","COMPANY_NAME","Name","EMPLOYEE_NAME","Email","EMPLOYEE_EMAIL","EMPLOYEE_ALT_EMAIL","EMPLOYEE_CONTACT","EMPLOYEE_PHONE_CODE","EMPLOYEE_ALT_CONTACT","EMPLOYEE_ALT_PHONE_CODE","Designation","EMPLOYEE_DESIGNATION","Qualification","EMPLOYEE_QUALIFICATION","Region","EMPLOYEE_REGION","Gender","EMPLOYEE_GENDER","ReportingManager","Password","EMPLOYEE_PASSWORD","ManagerType","EMPLOYEE_PREV_EXPERIENCE","Salary","EMPLOYEE_SALARY","EMPLOYEE_DOR","TotalExp","catch","error","console","log","React","useEffect","useHistory","id","style","marginTop","col","boxShadow","height","md","size","color","onClick","cnt","csvData","Array","push","dob","dob_","jod","jod_","reldate","reldate_","EMPLOYEE_DOB","EMPLOYEE_DOJ","fileName","buffer","join","blob","Blob","type","link","createElement","undefined","download","setAttribute","window","URL","createObjectURL","body","appendChild","click","removeChild","navigator","msSaveBlob","float","fields","hover","striped","bordered","sorter","tableFilter","itemsPerPageSelect","columnFilterSlot","itemsPerPage","pagination","fixedHeader","scopedSlots","Profile","i","profile","EMPLOYEE_PROFILE","Fragment","href","target","src","fluid","width","Address","pkid","EMPLOYEE_PKID","Country","COUNTRY_NAME","State","STATE_NAME","District","DISTRICT_NAME","Taluk","TALUK_NAME","show","onClose","closeButton","fontWeight","fontFamily","textAlign","borderBottom","paddingBottom","EMPLOYEE_ADDRESS1","EMPLOYEE_ADDRESS2","EMPLOYEE_ADDRESS3","EMPLOYEE_ADDRESS_ZIP","EMPLOYEE_ALT_ADDRESS1","EMPLOYEE_ALT_ADDRESS2","EMPLOYEE_ALT_ADDRESS3","EMPLOYEE_ALT_ADDRESS_ZIP","EMPLOYEE_DOCS_FILE"],"mappings":"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","file":"static/js/81.d48bda67.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","export default function DateFilter({ date }) {\r\n  let idate = new Date(new Date(date).toISOString().split(\"T\")[0]);\r\n  let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n    idate.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n  return dateMDY;\r\n}\r\n","/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-29 13:04:12\r\n * @modify date 2021-12-07 12:25:56\r\n * @desc [description]\r\n */\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CDataTable,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CImg,\r\n  CLink,\r\n  CInput,\r\n  CLabel,\r\n} from \"@coreui/react\";\r\nimport { MyApiUrl, ViewImg } from \"src/services/service\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\nimport DateFilter from \"../masters/DateFilter\";\r\nimport \"../../style.css\";\r\n\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields2 = [\r\n//   { key: \"Action\" },\r\n  { key: \"Name\" },\r\n  { key: \"Gender\" },\r\n  { key: \"Designation\" },\r\n  { key: \"Qualification\" },\r\n  { key: \"Date Of Birth\" },\r\n  { key: \"Email\" },\r\n  { key: \"Alt Email\" },\r\n  { key: \"Contact Number\" },\r\n  { key: \"Alternate Number\" },\r\n  { key: \"HQ\" },\r\n  { key: \"Company\" },\r\n  { key: \"Region\" },\r\n  { key: \"Manager / Officer\" },\r\n  { key: \"Employee Type\" },\r\n  { key: \"Sub Type\" },\r\n  { key: \"Password\" },\r\n  { key: \"Salary\" },\r\n  { key: \"Joining Date\" },\r\n  { key: \"Previous Experience\" },\r\n  { key: \"Experience Till Now\" },\r\n  { key: \"Releaving Date\" },\r\n  { key: \"Profile\" },\r\n  { key: \"Reporting To\" },\r\n//   { key: \"Incentive\" },\r\n  { key: \"Address\" },\r\n  { key: \"Uploaded Docs\" },\r\n  { key: \"Covered Area\" },\r\n//   { key: \"Separation\" },\r\n];\r\n\r\nconst CoverdArea = [\r\n  { key: \"Country\" },\r\n  { key: \"State\" },\r\n  { key: \"District\" },\r\n  { key: \"Taluk\" },\r\n];\r\n\r\nconst EmployeeSeparation = () => {\r\n  const [ResponseData, setResponseData] = useState([]);\r\n  const [EmployeeCoveredArea, setEmployeeCoveredArea] = useState([]);\r\n  const [EmployeeUploadedDoc, setEmployeeUploadedDoc] = useState([]);\r\n  const [EmployeeAddress, setEmployeeAddress] = useState([]);\r\n\r\n  const [block5, setBlock5] = useState(false);\r\n  const [SeparationData, setSeparationData] = useState(\"\");\r\n  const [EmployeePKID, setEmployeePKID] = useState(\"\");\r\n  const [SeparationReason, setSeparationReason] = useState(\"\");\r\n\r\n  const [block2, setBlock2] = useState(false);\r\n  const [block3, setBlock3] = useState(false);\r\n  const [block4, setBlock4] = useState(false);\r\n\r\n  const GetAllEmployees = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"GetSeparationEmp\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const items = response.data.map((item) => {\r\n          return {\r\n            ...item,\r\n            \"Employee Type\": item.EMPLOYEE_TYPE_NAME,\r\n            \"Sub Type\": item.EMPLOYEE_SUB_TYPE_NAME,\r\n            HQ: item.HQ_NAME,\r\n            Company: item.COMPANY_NAME,\r\n            Name: item.EMPLOYEE_NAME,\r\n            Email: item.EMPLOYEE_EMAIL,\r\n            \"Alt Email\": item.EMPLOYEE_ALT_EMAIL,\r\n            \"Contact Number\": item.EMPLOYEE_CONTACT == null || item.EMPLOYEE_CONTACT == \"\" ? item.EMPLOYEE_CONTACT : (\"+ \" + item.EMPLOYEE_PHONE_CODE + \" \" + item.EMPLOYEE_CONTACT),\r\n            \"Alternate Number\": item.EMPLOYEE_ALT_CONTACT == null || item.EMPLOYEE_ALT_CONTACT == \"\" ? item.EMPLOYEE_ALT_CONTACT : (\"+ \" + item.EMPLOYEE_ALT_PHONE_CODE + \" \" + item.EMPLOYEE_ALT_CONTACT),\r\n            Designation: item.EMPLOYEE_DESIGNATION,\r\n            Qualification: item.EMPLOYEE_QUALIFICATION,\r\n            Region: item.EMPLOYEE_REGION,\r\n            Gender: item.EMPLOYEE_GENDER,\r\n            \"Reporting To\": item.ReportingManager,\r\n            Password: item.EMPLOYEE_PASSWORD,\r\n            \"Manager / Officer\": item.ManagerType,\r\n            \"Previous Experience\": item.EMPLOYEE_PREV_EXPERIENCE,\r\n            Salary: item.EMPLOYEE_SALARY,\r\n            \"Releaving Date\": item.EMPLOYEE_DOR,\r\n            \"Experience Till Now\": item.TotalExp,\r\n          };\r\n        });\r\n        setResponseData(items);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const ViewEmployeeAddress = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"GetEmployeeAddress/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setEmployeeAddress(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setBlock2(!block2);\r\n  };\r\n\r\n  const ViewEmployeeCoveredAreas = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"GetEmployeeCoveredAreas/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const items = response.data.map((item) => {\r\n          return {\r\n            ...item,\r\n            Country: item.COUNTRY_NAME,\r\n            State: item.STATE_NAME,\r\n            District: item.DISTRICT_NAME,\r\n            Taluk: item.TALUK_NAME,\r\n          };\r\n        });\r\n        setEmployeeCoveredArea(items);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setBlock3(!block3);\r\n  };\r\n\r\n  const ViewUploadedDocs = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"GetEmployeeOtherDocs/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setEmployeeUploadedDoc(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setBlock4(!block4);\r\n  };\r\n\r\n  const DeleteEmployee = (pkid) => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    var res = confirm(\"Are you sure you want to delete\");\r\n    if (res) {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      axios.put(MyApiUrl + \"deletemps/\" + pkid).then((response) => {\r\n        if (response.data === true) {\r\n          Swal.fire({\r\n            title: \"Employee Deleted Successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          GetAllEmployees();\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Failed To Delete Employee!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const ToExcel = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    var cnt = 0;\r\n    // eslint-disable-next-line no-array-constructor\r\n    var csvData = new Array();\r\n    csvData.push(\r\n      '\"Sl No\",\"Employee Name\",\"Gender\",\"Designation\",\"Qualification\",\"Date Of Birth\",\"Email\",\"Alternate Email\",\"Contact Number\",\"Alternate Number\",\"HQ\",\"Company\",\"Region\",\"Manager / Officer\",\"Employee Type\",\"Sub Type\",\"Password\",\"Salary\",\"Joining Date\",\"Previous Experience\",\"Experience Till Now\",\"Releaving Date\",\"Reporting To\"'\r\n    );\r\n    let Status = \"\";\r\n    ResponseData.map((item) => {\r\n      let dob = \"\";\r\n      let dob_ = \"\";\r\n\r\n      let jod = \"\";\r\n      let jod_ = \"\";\r\n\r\n      let reldate = \"\";\r\n      let reldate_ = \"\";\r\n\r\n      if (item.EMPLOYEE_DOB == null || item.EMPLOYEE_DOB === \"\") {\r\n        dob_ = \"-\";\r\n      } else {\r\n        dob = new Date(\r\n          new Date(item.EMPLOYEE_DOB).toISOString().split(\"T\")[0]\r\n        );\r\n        dob_ = `${dob.getDate().toString().padStart(2, \"0\")}-${(\r\n          dob.getMonth() + 1\r\n        )\r\n          .toString()\r\n          .padStart(2, \"0\")}-${dob.getFullYear()}`;\r\n      }\r\n\r\n      if (item.EMPLOYEE_DOJ == null || item.EMPLOYEE_DOJ === \"\") {\r\n        jod_ = \"-\";\r\n      } else {\r\n        jod = new Date(\r\n          new Date(item.EMPLOYEE_DOJ).toISOString().split(\"T\")[0]\r\n        );\r\n        jod_ = `${jod.getDate().toString().padStart(2, \"0\")}-${(\r\n          jod.getMonth() + 1\r\n        )\r\n          .toString()\r\n          .padStart(2, \"0\")}-${jod.getFullYear()}`;\r\n      }\r\n\r\n      if (item.EMPLOYEE_DOR == null || item.EMPLOYEE_DOR === \"\") {\r\n        reldate_ = \"-\";\r\n      } else {\r\n        reldate = new Date(\r\n          new Date(item.EMPLOYEE_DOR).toISOString().split(\"T\")[0]\r\n        );\r\n        reldate_ = `${reldate.getDate().toString().padStart(2, \"0\")}-${(\r\n          jod.getMonth() + 1\r\n        )\r\n          .toString()\r\n          .padStart(2, \"0\")}-${reldate.getFullYear()}`;\r\n      }\r\n\r\n      return (\r\n        cnt++,\r\n        csvData.push(\r\n          '\"' +\r\n          cnt +\r\n          '\",\"' +\r\n          item.EMPLOYEE_NAME +\r\n          '\",\"' +\r\n          item.EMPLOYEE_GENDER +\r\n          '\",\"' +\r\n          item.EMPLOYEE_DESIGNATION +\r\n          '\",\"' +\r\n          item.EMPLOYEE_QUALIFICATION +\r\n          '\",\"' +\r\n          dob_ +\r\n          '\",\"' +\r\n          item.EMPLOYEE_EMAIL +\r\n          '\",\"' +\r\n          item.EMPLOYEE_ALT_EMAIL +\r\n          '\",\"' +\r\n          item.EMPLOYEE_CONTACT +\r\n          '\",\"' +\r\n          item.EMPLOYEE_ALT_CONTACT +\r\n          '\",\"' +\r\n          item.HQ_NAME +\r\n          '\",\"' +\r\n          item.COMPANY_NAME +\r\n          '\",\"' +\r\n          item.EMPLOYEE_REGION +\r\n          '\",\"' +\r\n          item.ManagerType +\r\n          '\",\"' +\r\n          item.EMPLOYEE_TYPE_NAME +\r\n          '\",\"' +\r\n          item.EMPLOYEE_SUB_TYPE_NAME +\r\n          '\",\"' +\r\n          item.EMPLOYEE_PASSWORD +\r\n          '\",\"' +\r\n          item.EMPLOYEE_SALARY +\r\n          '\",\"' +\r\n          jod_ +\r\n          '\",\"' +\r\n          item.EMPLOYEE_PREV_EXPERIENCE +\r\n          '\",\"' +\r\n          item.TotalExp +\r\n          '\",\"' +\r\n          reldate_ +\r\n          '\",\"' +\r\n          item.ReportingManager +\r\n          '\"'\r\n        )\r\n      );\r\n    });\r\n\r\n    const fileName = \"All Employees.csv\";\r\n    const buffer = csvData.join(\"\\n\");\r\n    const blob = new Blob([buffer], {\r\n      type: \"text/csv;charset=utf8;\",\r\n    });\r\n\r\n    //IN IE\r\n    const link = document.createElement(\"a\");\r\n    if (link.download !== undefined) {\r\n      link.setAttribute(\"href\", window.URL.createObjectURL(blob));\r\n      link.setAttribute(\"download\", fileName);\r\n      link.style = \"visibility:hidden\";\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } else if (navigator.msSaveBlob) {\r\n      navigator.msSaveBlob(blob, fileName);\r\n    } else {\r\n    }\r\n    document.getElementById(\"divLoading\").className = \"hide\";\r\n  }\r\n\r\n  const EmployeeSeparation = (pkid) => {\r\n    setEmployeePKID(pkid);\r\n    setBlock5(!block5);\r\n  };\r\n\r\n  const ConfirmSeparation = () => {\r\n    setBlock5(!block5);\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    const obj = {\r\n      \"EmployeePKID\": EmployeePKID,\r\n      \"SeparationData\": SeparationData,\r\n      \"SeparationReason\": SeparationReason,\r\n    };\r\n    axios.post(MyApiUrl + \"EmployeeSeparation/\", obj).then((response) => {\r\n      if (response.data === true) {\r\n        Swal.fire({\r\n          title: \"Employee Separation Submitted!\",\r\n          icon: \"success\",\r\n          confirmButtonText: \"OK\",\r\n        });\r\n        GetAllEmployees();\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      } else {\r\n        Swal.fire({\r\n          title: \"Failed To Separation Request!\",\r\n          icon: \"info\",\r\n          confirmButtonText: \"OK\",\r\n        });\r\n        GetAllEmployees();\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      }\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    GetAllEmployees();\r\n  }, []);\r\n\r\n  let history = useHistory();\r\n  return (\r\n    <div id=\"city\">\r\n      <div id=\"divLoading\"> </div>\r\n      <h1 id=\"ccmaster\">Separation Employees</h1>\r\n      <CRow style={{ marginTop: \"1%\" }}>\r\n        <CCol col=\"12\">\r\n          <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\", height: \"450px\" }}>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard style={{ height: \"410px\" }}>\r\n                    <CCardHeader>\r\n                      <CRow>\r\n                        <CCol md=\"8\">\r\n                          All Separation Confirmed Employees\r\n                        </CCol>\r\n                        <CCol md=\"4\">\r\n                          <CButton\r\n                            size=\"sm\"\r\n                            color=\"primary\"\r\n                            onClick={ToExcel}\r\n                            style={{ float: \"right\" }}\r\n                          >\r\n                            Export To Excel\r\n                          </CButton>\r\n                        </CCol>\r\n                        {/* <CCol md=\"2\">\r\n                          <CButton\r\n                            size=\"sm\"\r\n                            color=\"success\"\r\n                            onClick={() => {\r\n                              history.push(\"/Employee\");\r\n                            }}\r\n                          >\r\n                            Add Employee\r\n                          </CButton>\r\n                        </CCol> */}\r\n                      </CRow>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={ResponseData}\r\n                        fields={fields2}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPageSelect={items}\r\n                        columnFilterSlot\r\n                        size=\"sm\"\r\n                        itemsPerPage={10}\r\n                        pagination\r\n                        fixedHeader={true}\r\n                        scopedSlots={{\r\n                          \"Joining Date\": (item) => (\r\n                            <td>{item.EMPLOYEE_DOJ === null ? \"-\" : <DateFilter date={item.EMPLOYEE_DOJ} />}</td>\r\n                          ),\r\n                          \"Date Of Birth\": (item) => (\r\n                            <td>{item.EMPLOYEE_DOB === null ? \"-\" : <DateFilter date={item.EMPLOYEE_DOB} />}</td>\r\n                          ),\r\n                        //   Incentive: (i) => (\r\n                        //     <td>\r\n                        //       <CRow>\r\n                        //         <CCol md=\"8\">\r\n                        //           <CButton\r\n                        //             color=\"primary\"\r\n                        //             size=\"sm\"\r\n                        //             id=\"AddEmp\"\r\n                        //             onClick={() =>\r\n                        //               history.push(\"/AddEmployeeIncentive\", {\r\n                        //                 data: i,\r\n                        //               })\r\n                        //             }\r\n                        //           >\r\n                        //             ADD\r\n                        //           </CButton>\r\n                        //         </CCol>\r\n                        //       </CRow>\r\n                        //     </td>\r\n                        //   ),\r\n                        //   Separation: (item) => (\r\n                        //     <td>\r\n                        //       <CButton\r\n                        //         color=\"primary\"\r\n                        //         size=\"sm\"\r\n                        //         id=\"AddEmp\"\r\n                        //         onClick={() => {\r\n                        //           EmployeeSeparation(item.EMPLOYEE_PKID);\r\n                        //         }}\r\n                        //       >\r\n                        //         Confirm Separation\r\n                        //       </CButton>\r\n                        //     </td>\r\n                        //   ),\r\n                          Profile: (i) => {\r\n                            let profile = \"\";\r\n                            if (\r\n                              i.EMPLOYEE_PROFILE === \"\" ||\r\n                              i.EMPLOYEE_PROFILE === null\r\n                            ) {\r\n                              profile = \"NoImage.png\";\r\n                            } else {\r\n                              profile = i.EMPLOYEE_PROFILE;\r\n                            }\r\n                            return (\r\n                              <React.Fragment>\r\n                                <td>\r\n                                  <CLink\r\n                                    href={ViewImg + \"/\" + profile}\r\n                                    target=\"_blank\"\r\n                                  >\r\n                                    <CImg\r\n                                      src={ViewImg + \"/\" + profile}\r\n                                      fluid\r\n                                      className=\"mb-2\"\r\n                                      style={{ width: \"30%\" }}\r\n                                    />\r\n                                  </CLink>\r\n                                </td>\r\n                              </React.Fragment>\r\n                            );\r\n                          },\r\n                          Address: (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewEmployeeAddress(i.EMPLOYEE_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          \"Uploaded Docs\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewUploadedDocs(i.EMPLOYEE_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          \"Covered Area\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewEmployeeCoveredAreas(i.EMPLOYEE_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                        //   Action: (item) => (\r\n                        //     <td>\r\n                        //       <CButton\r\n                        //         onClick={() =>\r\n                        //           history.push(\"/EditEmployee\", {\r\n                        //             data: item,\r\n                        //           })\r\n                        //         }\r\n                        //         size=\"sm\"\r\n                        //         id=\"war-btn\"\r\n                        //       >\r\n                        //         <EditIcon />\r\n                        //         {item.status}\r\n                        //       </CButton>\r\n                        //       <CButton\r\n                        //         onClick={() => {\r\n                        //           DeleteEmployee(item.EMPLOYEE_PKID);\r\n                        //         }}\r\n                        //         size=\"sm\"\r\n                        //         id=\"war-btn1\"\r\n                        //       >\r\n                        //         <DeleteSharpIcon />\r\n                        //         {item.status}\r\n                        //       </CButton>\r\n                        //     </td>\r\n                        //   ),\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CModal show={block2} onClose={() => setBlock2(!block2)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Employee Address</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {EmployeeAddress.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"6\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Permanent Address\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.EMPLOYEE_ADDRESS1}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.EMPLOYEE_ADDRESS2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.EMPLOYEE_ADDRESS3}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.EMPLOYEE_ADDRESS_ZIP}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n                <CCol md=\"6\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Correspondence Address\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.EMPLOYEE_ALT_ADDRESS1}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.EMPLOYEE_ALT_ADDRESS2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.EMPLOYEE_ALT_ADDRESS3}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.EMPLOYEE_ALT_ADDRESS_ZIP}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setBlock2(!block2)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block3} onClose={() => setBlock3(!block3)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Employee Covered Areas</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            <CCol md=\"12\">\r\n              <CDataTable\r\n                items={EmployeeCoveredArea}\r\n                fields={CoverdArea}\r\n                hover\r\n                striped\r\n                bordered\r\n                sorter\r\n                tableFilter={table}\r\n                itemsPerPageSelect={items}\r\n                columnFilterSlot\r\n                size=\"sm\"\r\n                itemsPerPage={10}\r\n                pagination\r\n              />\r\n            </CCol>\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setBlock3(!block3)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block4} onClose={() => setBlock4(!block4)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Other Uploaded Documents</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {EmployeeUploadedDoc.map((i) => (\r\n              <CCol md=\"3\">\r\n                <CImg\r\n                  src={ViewImg + \"/\" + i.EMPLOYEE_DOCS_FILE}\r\n                  fluid\r\n                  className=\"mb-2\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </CCol>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setBlock4(!block4)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      {/* <CModal show={block5} onClose={() => setBlock5(!block5)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Separation Details</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            <CCol md=\"12\">\r\n              <CLabel\r\n                htmlFor=\"exampleInputName2\"\r\n                className=\"pr-1\"\r\n              >\r\n                Separation Date\r\n              </CLabel>\r\n              <CInput\r\n                type=\"date\"\r\n                id=\"exampleInputName2\"\r\n                placeholder=\"Separation Date\"\r\n                value={SeparationData}\r\n                onChange={(event) => {\r\n                  setSeparationData(event.target.value);\r\n                }}\r\n              />\r\n            </CCol>\r\n            <CCol md=\"12\" style={{ marginTop: \"5%;\" }}>\r\n              <CLabel\r\n                htmlFor=\"exampleInputName1\"\r\n                className=\"pr-1\"\r\n                style={{ marginTop: \"5%;\" }}\r\n              >\r\n                Reason\r\n              </CLabel>\r\n              <CInput\r\n                type=\"text\"\r\n                id=\"exampleInputName1\"\r\n                placeholder=\"Reason\"\r\n                value={SeparationReason}\r\n                onChange={(event) => {\r\n                  setSeparationReason(event.target.value);\r\n                }}\r\n              />\r\n            </CCol>\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\" onClick={ConfirmSeparation}>\r\n            Confirm\r\n          </CButton>\r\n          <CButton color=\"secondary\" onClick={() => setBlock5(!block5)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeSeparation;\r\n"],"sourceRoot":""}