{"version":3,"sources":["services/service.js","../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/icons/DeleteSharp.js","views/CatalogueMaster/ProductCategory.js"],"names":["MyApiUrl","ViewImg","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","table","placeholder","label","items","values","fields","key","CustomerType","useState","typePkid","ResponseData","AddButton","UpdateButton","Kimo","setKimo","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","AddCustomerType","fire","icon","title","obj","CustTypeName","axios","post","then","response","data","confirmButtonText","fetchData","UpdateCustomerType","put","useCallback","method","url","headers","params","language_code","console","log","catch","error","Updatebtn","type","onClick","size","id","Addbtn","useEffect","xs","sm","md","lg","xl","className","action","encType","row","name","onChange","e","target","hover","striped","bordered","tableFilter","itemsPerPageSelect","sorter","itemsPerPage","pagination","scopedSlots","item","CUSTOMER_TYPE_NAME","Action","Emptype","CUSTOMER_TYPE_PKID","status"],"mappings":"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","file":"static/js/51.c60d493b.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 21h12V7H6v14zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteSharp');\n\nexports.default = _default;","/* eslint-disable react-hooks/exhaustive-deps */\r\n/**\r\n * @author KimoSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-25 18:21:31\r\n * @modify date 2021-12-07 12:26:04\r\n * @desc [description]\r\n */\r\n\r\n import React, { useState } from \"react\";\r\n import axios from \"axios\";\r\n import Swal from \"sweetalert2\";\r\n import {\r\n   CButton,\r\n   CCard,\r\n   CCardBody,\r\n   CCardHeader,\r\n   CCol,\r\n   CForm,\r\n   CFormGroup,\r\n   CInput,\r\n   CRow,\r\n   CDataTable,\r\n   CLabel,\r\n } from \"@coreui/react\";\r\n \r\n import {MyApiUrl} from \"src/services/service\";\r\n import EditIcon from \"@material-ui/icons/Edit\";\r\n import DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\n import \"../../style.css\";\r\n const table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\n const items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\n const fields = [{ key: \"Action\" }, { key: \"CustomerType\" }];\r\n \r\n const CustomerType = () => {\r\n   const [Kimo, setKimo] = useState({\r\n     typePkid: \"\",\r\n     CustomerType: \"\",\r\n     ResponseData: [],\r\n     AddButton: true,\r\n     UpdateButton: false,\r\n   });\r\n \r\n   const Toast = Swal.mixin({\r\n     toast: true,\r\n     position: \"top-end\",\r\n     showConfirmButton: false,\r\n     timer: 1500,\r\n     timerProgressBar: true,\r\n     didOpen: (toast) => {\r\n       toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n       toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n     },\r\n   });\r\n \r\n   const AddCustomerType = () => {\r\n     if (Kimo.CustomerType === \"\" || Kimo.CustomerType == null) {\r\n       Toast.fire({\r\n         icon: \"warning\",\r\n         title: \"Enter Customer-Type!\",\r\n       });\r\n     } else {\r\n       const obj = {\r\n         CustTypeName: Kimo.CustomerType,\r\n       };\r\n \r\n       axios.post(MyApiUrl + \"custtype\", obj).then((response) => {\r\n         if (response.data === \"Already Existed!\") {\r\n           Swal.fire({\r\n             title: \"Customer-Type Already Exist!\",\r\n             icon: \"info\",\r\n             confirmButtonText: \"OK\",\r\n           });\r\n           fetchData();\r\n           setKimo({\r\n             ...Kimo,\r\n             typePkid: \"\",\r\n             CustomerType: \"\",\r\n             AddButton: true,\r\n             UpdateButton: false,\r\n           });\r\n         } else if (response.data === true) {\r\n           Swal.fire({\r\n             title: \"Customer-Type Added Successfully!\",\r\n             icon: \"success\",\r\n             confirmButtonText: \"OK\",\r\n           });\r\n           fetchData();\r\n           setKimo({\r\n             ...Kimo,\r\n             typePkid: \"\",\r\n             CustomerType: \"\",\r\n             AddButton: true,\r\n             UpdateButton: false,\r\n           });\r\n         } else if (response.data === false) {\r\n           Swal.fire({\r\n             title: \"Customer-Type Failed To Add!\",\r\n             icon: \"error\",\r\n             confirmButtonText: \"OK\",\r\n           });\r\n         }\r\n       });\r\n     }\r\n   };\r\n \r\n   const UpdateCustomerType = () => {\r\n     if (Kimo.CustomerType === \"\" || Kimo.CustomerType == null) {\r\n       Toast.fire({\r\n         icon: \"warning\",\r\n         title: \"Enter Customer-Type!\",\r\n       });\r\n     } else {\r\n       const obj = {\r\n         CustTypeName: Kimo.CustomerType,\r\n       };\r\n       axios\r\n         .put(MyApiUrl + \"custtype/\" + Kimo.typePkid, obj)\r\n         .then((response) => {\r\n           if (response.data === false) {\r\n             Swal.fire({\r\n               title: \"Customer-Type Not Updated!\",\r\n               icon: \"warning\",\r\n               confirmButtonText: \"OK\",\r\n             });\r\n \r\n             fetchData();\r\n             setKimo({\r\n               ...Kimo,\r\n               typePkid: \"\",\r\n               CustomerType: \"\",\r\n               AddButton: true,\r\n               UpdateButton: false,\r\n             });\r\n           } else if (response.data === \"1\") {\r\n             Swal.fire({\r\n               title: \"Customer-Type Updated!\",\r\n               icon: \"success\",\r\n               confirmButtonText: \"OK\",\r\n             });\r\n \r\n             fetchData();\r\n             setKimo({\r\n               ...Kimo,\r\n               typePkid: \"\",\r\n               CustomerType: \"\",\r\n               AddButton: true,\r\n               UpdateButton: false,\r\n             });\r\n           } else {\r\n             Swal.fire({\r\n               title: \"Customer-Type Already Existed!\",\r\n               icon: \"info\",\r\n               confirmButtonText: \"OK\",\r\n             });\r\n           }\r\n         });\r\n     }\r\n   };\r\n \r\n   const EditCustomerType = (id, Emptype) => {\r\n     setKimo({\r\n       ...Kimo,\r\n       typePkid: id,\r\n       CustomerType: Emptype,\r\n       AddButton: false,\r\n       UpdateButton: true,\r\n     });\r\n   };\r\n \r\n   const DeleteCustomerType = (id) => {\r\n     console.log(\"id: \", id);\r\n     axios({\r\n       method: \"DELETE\",\r\n       url: MyApiUrl + \"custtype/\" + id + \"\",\r\n       headers: {\r\n         \"content-type\": \"application/json\",\r\n       },\r\n       params: {\r\n         language_code: \"en\",\r\n       },\r\n     })\r\n       .then((response) => {\r\n         if (response.data === true) {\r\n           Swal.fire({\r\n             title: \"Customer-Type Deleted!\",\r\n             icon: \"success\",\r\n             confirmButtonText: \"OK\",\r\n           });\r\n \r\n           fetchData();\r\n         } else {\r\n           Swal.fire({\r\n             title: \"Customer-Type Failed To Deleted!\",\r\n             icon: \"error\",\r\n             confirmButtonText: \"OK\",\r\n           });\r\n         }\r\n       })\r\n       .catch((error) => {\r\n         console.log(error);\r\n       });\r\n   };\r\n \r\n   const fetchData = React.useCallback(() => {\r\n     axios({\r\n       method: \"GET\",\r\n       url: MyApiUrl + \"custtype\",\r\n       headers: {\r\n         \"content-type\": \"application/json\",\r\n       },\r\n       params: {\r\n         language_code: \"en\",\r\n       },\r\n     })\r\n       .then((response) => {\r\n       console.log(response.data);\r\n         setKimo({\r\n           ...Kimo,\r\n           ResponseData: response.data,\r\n         });\r\n         console.log(response.data);\r\n       })\r\n       .catch((error) => {\r\n         console.log(error);\r\n       });\r\n   }, []);\r\n \r\n   const Updatebtn = () => (\r\n     <CButton type=\"button\" onClick={UpdateCustomerType} size=\"md\" id=\"Add-btn\">\r\n       Update\r\n     </CButton>\r\n   );\r\n \r\n   const Addbtn = () => (\r\n     <CButton type=\"button\" onClick={AddCustomerType} size=\"md\" id=\"Add-btn\">\r\n       Add\r\n     </CButton>\r\n   );\r\n \r\n   React.useEffect(() => {\r\n     fetchData();\r\n   }, []);\r\n \r\n   return (\r\n     <div>\r\n       <h1 id=\"ccmaster\">Customer-Type</h1>\r\n       <br />\r\n       <br />\r\n       <CRow>\r\n         <CCol xs=\"12\" sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\" className=\"mb-3 mb-xl-0\">\r\n           <div id=\"country-master\">\r\n             <CCard>\r\n               <CCardBody>\r\n                 <CRow>\r\n                   <CCol>\r\n                     <CCard>\r\n                       <CCardHeader>Add Customer-Type</CCardHeader>\r\n                       <CCardBody>\r\n                         <CForm\r\n                           action=\"\"\r\n                           method=\"post\"\r\n                           encType=\"multipart/form-data\"\r\n                           className=\"form-horizontal\"\r\n                         >\r\n                           <CFormGroup row>\r\n                             <CCol xs=\"12\" md=\"12\">\r\n                               <CLabel>Customer Type</CLabel>\r\n                               <CInput\r\n                                 id=\"text-input1\"\r\n                                 name=\"text-input\"\r\n                                 placeholder=\"Customer-Type\"\r\n                                 type=\"text\"\r\n                                 value={Kimo.CustomerType}\r\n                                 onChange={(e) => {\r\n                                   setKimo({\r\n                                     ...Kimo,\r\n                                     CustomerType: e.target.value,\r\n                                   });\r\n                                 }}\r\n                               />\r\n                             </CCol>\r\n                           </CFormGroup>\r\n \r\n                           {Kimo.UpdateButton && <Updatebtn />}\r\n                           {Kimo.AddButton && <Addbtn />}\r\n                         </CForm>\r\n                       </CCardBody>\r\n                     </CCard>\r\n                   </CCol>\r\n                 </CRow>\r\n               </CCardBody>\r\n             </CCard>\r\n           </div>\r\n         </CCol>\r\n \r\n         <CCol xs=\"12\" sm=\"12\" md=\"8\" lg=\"8\" xl=\"8\" className=\"mb-3 mb-xl-0\">\r\n           <div id=\"country-table\">\r\n             <CCard id=\"Loccard\">\r\n               <CCardBody>\r\n                 <CRow>\r\n                   <CCol>\r\n                     <CCard>\r\n                       <CCardHeader>Added Customer-Type</CCardHeader>\r\n                       <CCardBody>\r\n                         <CDataTable\r\n                           items={Kimo.ResponseData}\r\n                           fields={fields}\r\n                           hover\r\n                           striped\r\n                           bordered\r\n                           tableFilter={table}\r\n                           itemsPerPageSelect={items}\r\n                           sorter\r\n                           size=\"sm\"\r\n                           itemsPerPage={10}\r\n                           pagination\r\n                           scopedSlots={{\r\n                             CustomerType: (item) => (\r\n                               <td>{item.CUSTOMER_TYPE_NAME}</td>\r\n                             ),\r\n                             Action: (item) => (\r\n                               <td>\r\n                                 <CButton\r\n                                   onClick={() => {\r\n                                     EditCustomerType(\r\n                                       item.CUSTOMER_TYPE_PKID,\r\n                                       item.CUSTOMER_TYPE_NAME\r\n                                     );\r\n                                   }}\r\n                                   size=\"sm\"\r\n                                   id=\"war-btn\"\r\n                                 >\r\n                                   <EditIcon />\r\n                                   {item.status}\r\n                                 </CButton>\r\n                                 <CButton\r\n                                   size=\"sm\"\r\n                                   onClick={() => {\r\n                                     DeleteCustomerType(item.CUSTOMER_TYPE_PKID);\r\n                                   }}\r\n                                   id=\"war-btn\"\r\n                                 >\r\n                                   <DeleteSharpIcon />\r\n                                   {item.status}\r\n                                 </CButton>\r\n                               </td>\r\n                             ),\r\n                           }}\r\n                         />\r\n                       </CCardBody>\r\n                     </CCard>\r\n                   </CCol>\r\n                 </CRow>\r\n               </CCardBody>\r\n             </CCard>\r\n           </div>\r\n         </CCol>\r\n       </CRow>\r\n     </div>\r\n   );\r\n };\r\n \r\n export default CustomerType;\r\n "],"sourceRoot":""}