{"version":3,"sources":["services/service.js","views/masters/DateFilter.js","views/OrderManagement/NewOrders.js"],"names":["MyApiUrl","ViewImg","DateFilter","date","idate","Date","toISOString","split","getDate","toString","padStart","getMonth","getFullYear","table","placeholder","label","items","values","fields2","key","_style","width","NewOrders","useState","ResponseData","setResponseData","BillingAddress","setBillingAddress","ShippingAddress","setShippingAddress","OrderRemark","setOrderRemark","ManagerRemark","setManagerRemark","fromDate","setfromDate","Otype","setOtype","Omonth","setOmonth","toDate","settoDate","block","setblock","block1","setblock1","block2","setblock2","ManagerRemarkBloack","setManagerRemarkBloack","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","OderSupplyType","setOderSupplyType","GetAllPendingOrder","document","getElementById","className","axios","method","url","headers","then","response","console","log","data","map","item","index","HDays","ORDER_NUMBER","ORDER_BY","TypeName","ORDER_TYPE_NAME","SUPPLY_NAME","Company","COMPANY_NAME","CUSTOMER_NAME","Logistic","ORDER_LOGISTIC","ORDER_LOGISTIC_DESTINATION","ORDER_LOGISTIC_PAY_MODE","ORDER_DELIVERY_TYPE","ORDER_CASH_DISCOUNT","ORDER_ORDER_AMOUNT","GetOrderSupplyType","catch","error","params","language_code","Option","i","value","SUPPLY_TYPE_PKID","React","useEffect","history","useHistory","id","style","marginTop","col","boxShadow","md","htmlFor","custom","name","onChange","event","target","type","size","color","onClick","fire","icon","title","fields","hover","striped","bordered","sorter","tableFilter","itemsPerPageSelect","itemsPerPage","pagination","scopedSlots","ORDER_DATE","clock","slice","Status","push","ItemCount","pkid","ORDER_PKID","Remark","Attachment","profile","ORD_DOC","Fragment","href","src","fluid","Action","put","confirmButtonText","show","onClose","closeButton","fontWeight","fontFamily","textAlign","borderBottom","paddingBottom","CUSTOMER_ADDRESS_ADDRESS1","CUSTOMER_ADDRESS_ADDRESS2","CUSTOMER_ADDRESS_ADDRESS3","CUSTOMER_ADDRESS_ZIP_CODE","ORDER_REMARK","ORDER_MANAGER_REMARK"],"mappings":"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","file":"static/js/84.4e2710cc.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","export default function DateFilter({ date }) {\r\n  let idate = new Date(new Date(date).toISOString().split(\"T\")[0]);\r\n  let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n    idate.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n  return dateMDY;\r\n}\r\n","/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-25 17:00:15\r\n * @modify date 2021-12-06 15:32:46\r\n * @desc [description]\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CDataTable,\r\n  CButton,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModal,\r\n  CLabel,\r\n  CInput,\r\n  CSelect,\r\n  CLink,\r\n  CImg,\r\n} from \"@coreui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MyApiUrl, ViewImg } from \"src/services/service\";\r\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Swal from \"sweetalert2\";\r\nimport DateFilter from \"../masters/DateFilter\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields2 = [\r\n  { key: \"Action\" },\r\n  { key: \"Status\", _style: { width: \"60%\" } },\r\n  { key: \"Ordered Date\" },\r\n  { key: \"Ordered Time\" },\r\n  { key: \"Customer Name\" },\r\n  { key: \"Order Items\" },\r\n  { key: \"Company\" },\r\n  { key: \"Order Number\" },\r\n  { key: \"Order By\" },\r\n  { key: \"Ordered Person\" },\r\n  { key: \"Order Type\" },\r\n  { key: \"Supply Type\" },\r\n  { key: \"Day Till Now\" },\r\n  { key: \"Billing Address\" },\r\n  { key: \"Shipping Address\" },\r\n  { key: \"Logistic\" },\r\n  { key: \"Logistic Designation\" },\r\n  { key: \"Logistic Payment Mode\" },\r\n  { key: \"Delivery Type\" },\r\n  { key: \"Cash Discount\" },\r\n  { key: \"Grand Total\" },\r\n  { key: \"Attachment\" },\r\n  { key: \"Remark\" },\r\n  { key: \"Manager Remark\" },\r\n];\r\n\r\nconst NewOrders = () => {\r\n  const [ResponseData, setResponseData] = useState([]);\r\n  const [BillingAddress, setBillingAddress] = useState([]);\r\n  const [ShippingAddress, setShippingAddress] = useState([]);\r\n  const [OrderRemark, setOrderRemark] = useState([]);\r\n  const [ManagerRemark, setManagerRemark] = useState([]);\r\n  const [fromDate, setfromDate] = useState();\r\n  const [Otype, setOtype] = useState();\r\n  const [Omonth, setOmonth] = useState();\r\n  const [toDate, settoDate] = useState();\r\n  const [block, setblock] = useState(false);\r\n  const [block1, setblock1] = useState(false);\r\n  const [block2, setblock2] = useState(false);\r\n  const [ManagerRemarkBloack, setManagerRemarkBloack] = useState(false);\r\n\r\n  // Filters\r\n\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  const [OderSupplyType, setOderSupplyType] = useState([]);\r\n\r\n  const GetAllPendingOrder = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"GetAllOrderRequest\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(\"🚀 ~ file: NewOrders.js ~ line 91 ~ .then ~ response\", response)\r\n        const items = response.data.map((item, index) => {\r\n          return {\r\n            ...item,\r\n            \"Day Till Now\": item.HDays,\r\n            \"Order Number\": item.ORDER_NUMBER,\r\n            \"Order By\": item.ORDER_BY,\r\n            \"Ordered Person\": item.TypeName,\r\n            \"Order Type\": item.ORDER_TYPE_NAME,\r\n            \"Supply Type\": item.SUPPLY_NAME,\r\n            Company: item.COMPANY_NAME,\r\n            \"Customer Name\": item.CUSTOMER_NAME,\r\n            Logistic: item.ORDER_LOGISTIC,\r\n            \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n            \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n            \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n            \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n            \"Grand Total\": item.ORDER_ORDER_AMOUNT ? item.ORDER_ORDER_AMOUNT : \"-\",\r\n          };\r\n        });\r\n        setResponseData(items);\r\n        GetOrderSupplyType();\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const GetOrderSupplyType = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderSupplyType\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      params: {\r\n        language_code: \"en\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const Option = response.data.map((item, i) => (\r\n          <option key={i} value={item.SUPPLY_TYPE_PKID}>\r\n            {item.SUPPLY_NAME}\r\n          </option>\r\n        ));\r\n        setOderSupplyType(Option);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const AcceptOrder = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios.put(MyApiUrl + \"AcceptOrder/\" + pkid).then((response) => {\r\n      if (response.data === true) {\r\n        Swal.fire({\r\n          title: \"Order Successfully Confirmed!\",\r\n          icon: \"success\",\r\n          confirmButtonText: \"OK\",\r\n        });\r\n        GetAllPendingOrder();\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      } else {\r\n        Swal.fire({\r\n          title: \"Failed To Confirm!\",\r\n          icon: \"error\",\r\n          confirmButtonText: \"OK\",\r\n        });\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      }\r\n    });\r\n  };\r\n\r\n  const RejectOrderRequest = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios.put(MyApiUrl + \"RejectOrder/\" + pkid).then((response) => {\r\n      if (response.data === true) {\r\n        Swal.fire({\r\n          title: \"Order Request Denied!\",\r\n          icon: \"success\",\r\n          confirmButtonText: \"OK\",\r\n        });\r\n        GetAllPendingOrder();\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      } else {\r\n        Swal.fire({\r\n          title: \"Failed To Deny!\",\r\n          icon: \"error\",\r\n          confirmButtonText: \"OK\",\r\n        });\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      }\r\n    });\r\n  };\r\n\r\n  const ViewBillingAddress = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderBillingAddress/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setBillingAddress(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock(!block);\r\n  };\r\n\r\n  const ViewShippingAddress = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderShippingAddress/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setShippingAddress(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock1(!block1);\r\n  };\r\n\r\n  const ViewOderRemark = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderRemark/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setOrderRemark(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock2(!block2);\r\n  };\r\n\r\n  const ViewSalesPersonRemark = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderRemarkByManager/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setManagerRemark(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setManagerRemarkBloack(!block2);\r\n  };\r\n\r\n  const FilterDates = () => {\r\n    if (fromDate === \"\" || fromDate == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Select From Date!\",\r\n      });\r\n    } else if (toDate === \"\" || toDate == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Select To Date!\",\r\n      });\r\n    } else {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      axios({\r\n        method: \"GET\",\r\n        url: MyApiUrl + \"GetPendingOrdersByDate/\" + fromDate + \"/\" + toDate,\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          const items = response.data.map((item, index) => {\r\n            return {\r\n              ...item,\r\n              \"Day Till Now\": item.HDays,\r\n              \"Order Number\": item.ORDER_NUMBER,\r\n              \"Order By\": item.ORDER_BY,\r\n              \"Ordered Person\": item.TypeName,\r\n              \"Order Type\": item.ORDER_TYPE_NAME,\r\n              \"Supply Type\": item.SUPPLY_NAME,\r\n              Company: item.COMPANY_NAME,\r\n              \"Customer Name\": item.CUSTOMER_NAME,\r\n              Logistic: item.ORDER_LOGISTIC,\r\n              \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n              \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n              \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n              \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n              \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n            };\r\n          });\r\n          setResponseData(items);\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const FilterReset = () => {\r\n    GetAllPendingOrder();\r\n    setfromDate(\"\");\r\n    settoDate(\"\");\r\n    setOtype(\"0\");\r\n    setOmonth(\"0\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    GetAllPendingOrder();\r\n  }, []);\r\n  let history = useHistory();\r\n  return (\r\n    <div id=\"city\">\r\n      <div id=\"divLoading\"> </div>\r\n      <h1 id=\"ccmaster\">View New Orders</h1>\r\n      <CRow style={{ marginTop: \"3%\" }}>\r\n        <CCol col=\"12\">\r\n          <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardBody>\r\n                      <CRow>\r\n                        <CCol md=\"2\">\r\n                          <CLabel htmlFor=\"nf-email\">Select Order Type</CLabel>\r\n                          <CSelect\r\n                            custom\r\n                            name=\"merchant\"\r\n                            value={Otype}\r\n                            onChange={(event) => {\r\n                              document.getElementById(\"divLoading\").className = \"show\";\r\n                              axios({\r\n                                method: \"GET\",\r\n                                url:\r\n                                  MyApiUrl +\r\n                                  \"/GetPendingOrdersBySupplayType/\" +\r\n                                  event.target.value,\r\n                                headers: {\r\n                                  \"content-type\": \"application/json\",\r\n                                },\r\n                              })\r\n                                .then((response) => {\r\n                                  const items = response.data.map((item, index) => {\r\n                                    return {\r\n                                      ...item,\r\n                                      \"Day Till Now\": item.HDays,\r\n                                      \"Order Number\": item.ORDER_NUMBER,\r\n                                      \"Order By\": item.ORDER_BY,\r\n                                      \"Ordered Person\": item.TypeName,\r\n                                      \"Order Type\": item.ORDER_TYPE_NAME,\r\n                                      \"Supply Type\": item.SUPPLY_NAME,\r\n                                      Company: item.COMPANY_NAME,\r\n                                      \"Customer Name\": item.CUSTOMER_NAME,\r\n                                      Logistic: item.ORDER_LOGISTIC,\r\n                                      \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n                                      \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n                                      \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n                                      \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n                                      \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n                                    };\r\n                                  });\r\n                                  setResponseData(items);\r\n                                  document.getElementById(\"divLoading\").className = \"hide\";\r\n                                })\r\n                                .catch((error) => {\r\n                                  console.log(error);\r\n                                });\r\n                            }}\r\n                            id=\"merchant\"\r\n                          >\r\n                            <option value=\"0\">All</option>\r\n                            {OderSupplyType}\r\n                          </CSelect>\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CLabel htmlFor=\"nf-email\">Select Month</CLabel>\r\n                          <CSelect\r\n                            custom\r\n                            name=\"Marchant\"\r\n                            id=\"Marchant\"\r\n                            value={Omonth}\r\n                            onChange={(event) => {\r\n                              document.getElementById(\"divLoading\").className = \"show\";\r\n                              axios({\r\n                                method: \"GET\",\r\n                                url:\r\n                                  MyApiUrl +\r\n                                  \"/GetPendingOrdersByMonth/\" +\r\n                                  event.target.value,\r\n                                headers: {\r\n                                  \"content-type\": \"application/json\",\r\n                                },\r\n                              })\r\n                                .then((response) => {\r\n                                  const items = response.data.map((item, index) => {\r\n                                    return {\r\n                                      ...item,\r\n                                      \"Day Till Now\": item.HDays,\r\n                                      \"Order Number\": item.ORDER_NUMBER,\r\n                                      \"Order By\": item.ORDER_BY,\r\n                                      \"Ordered Person\": item.TypeName,\r\n                                      \"Order Type\": item.ORDER_TYPE_NAME,\r\n                                      \"Supply Type\": item.SUPPLY_NAME,\r\n                                      Company: item.COMPANY_NAME,\r\n                                      \"Customer Name\": item.CUSTOMER_NAME,\r\n                                      Logistic: item.ORDER_LOGISTIC,\r\n                                      \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n                                      \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n                                      \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n                                      \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n                                      \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n                                    };\r\n                                  });\r\n                                  setResponseData(items);\r\n                                  document.getElementById(\"divLoading\").className = \"hide\";\r\n                                })\r\n                                .catch((error) => {\r\n                                  console.log(error);\r\n                                });\r\n                            }}\r\n                          >\r\n                            <option value=\"0\">All</option>\r\n                            <option value=\"1\">Jan</option>\r\n                            <option value=\"2\">Feb</option>\r\n                            <option value=\"3\">March</option>\r\n                            <option value=\"4\">April</option>\r\n                            <option value=\"5\">May</option>\r\n                            <option value=\"6\">Jun</option>\r\n                            <option value=\"7\">Jul</option>\r\n                            <option value=\"8\">Aug</option>\r\n                            <option value=\"9\">Sept</option>\r\n                            <option value=\"10\">Oct</option>\r\n                            <option value=\"11\">Nov</option>\r\n                            <option value=\"12\">Dec</option>\r\n                          </CSelect>\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CLabel>From:</CLabel>\r\n                          <CInput\r\n                            type=\"date\"\r\n                            onChange={(event) => {\r\n                              setfromDate(event.target.value);\r\n                            }}\r\n                            value={fromDate}\r\n                          />\r\n                        </CCol>\r\n\r\n                        <CCol md=\"2\">\r\n                          <CLabel>To:</CLabel>\r\n                          <CInput\r\n                            type=\"date\"\r\n                            onChange={(event) => {\r\n                              settoDate(event.target.value);\r\n                            }}\r\n                            value={toDate}\r\n                          />\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CButton\r\n                            size=\"sm\"\r\n                            color=\"info\"\r\n                            style={{ marginTop: \"28px\", width: \"100%\" }}\r\n                            onClick={FilterDates}\r\n                          >\r\n                            Filter\r\n                          </CButton>\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CButton\r\n                            size=\"sm\"\r\n                            color=\"danger\"\r\n                            style={{ marginTop: \"28px\", width: \"100%\" }}\r\n                            onClick={FilterReset}\r\n                          >\r\n                            Reset\r\n                          </CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                      <hr />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol col=\"12\">\r\n          <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>New Orders</CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={ResponseData}\r\n                        fields={fields2}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPageSelect={items}\r\n                        size=\"sm\"\r\n                        itemsPerPage={10}\r\n                        pagination\r\n                        scopedSlots={{\r\n                          \"Ordered Date\": (i) => (\r\n                            <td>{<DateFilter date={i.ORDER_DATE} />}</td>\r\n                          ),\r\n                          \"Ordered Time\": (i) => {\r\n                            return (\r\n                              <td>\r\n                                {new Date(i.clock)\r\n                                  .toISOString()\r\n                                  .split(\"T\")[1]\r\n                                  .slice(0, -1)}\r\n                              </td>\r\n                            );\r\n                          },\r\n                          Status: (i) => (\r\n                            <td>\r\n                              <span className=\"PendingOrder\">\r\n                                Pending / New\r\n                              </span>\r\n                            </td>\r\n                          ),\r\n                          \"Order Items\": (i) => (\r\n                            <td>\r\n                              <CButton\r\n                                onClick={() => {\r\n                                  history.push(\"/OrderItems\", {\r\n                                    data: i,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {i.ItemCount}\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          \"Billing Address\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewBillingAddress(i.ORDER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          \"Shipping Address\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewShippingAddress(i.ORDER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          Remark: (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewOderRemark(i.ORDER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          \"Manager Remark\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewSalesPersonRemark(i.ORDER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          Attachment: (i) => {\r\n                            let profile = \"\";\r\n                            if (\r\n                              i.ORD_DOC === \"\" ||\r\n                              i.ORD_DOC === null\r\n                            ) {\r\n                              profile = \"NoImage.png\";\r\n                            } else {\r\n                              profile = i.ORD_DOC;\r\n                            }\r\n                            return (\r\n                              <React.Fragment>\r\n                                <td>\r\n                                  <CLink\r\n                                    href={ViewImg + \"/\" + profile}\r\n                                    target=\"_blank\"\r\n                                  >\r\n                                    <CImg\r\n                                      src={ViewImg + \"/\" + profile}\r\n                                      fluid\r\n                                      className=\"mb-2\"\r\n                                      style={{ width: \"100%\" }}\r\n                                    />\r\n                                  </CLink>\r\n                                </td>\r\n                              </React.Fragment>\r\n                            );\r\n                          },\r\n                          Action: (item) => (\r\n                            <td>\r\n                              <CButton\r\n                                onClick={() => {\r\n                                  AcceptOrder(item.ORDER_PKID);\r\n                                }}\r\n                                size=\"sm\"\r\n                                color=\"success\"\r\n                              >\r\n                                Accept\r\n                              </CButton>&nbsp;&nbsp;\r\n                              <CButton\r\n                                color=\"primary\"\r\n                                size=\"sm\"\r\n                                onClick={() => {\r\n                                  history.push(\"/EditOrder\", {\r\n                                    data: item,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                EDIT\r\n                              </CButton>&nbsp;&nbsp;\r\n                              <CButton\r\n                                onClick={() => {\r\n                                  RejectOrderRequest(item.ORDER_PKID);\r\n                                }}\r\n                                size=\"sm\"\r\n                                color=\"danger\"\r\n                              >\r\n                                Deny\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CModal show={block} onClose={() => setblock(!block)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Customer Billing Address</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {BillingAddress.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Billing Address\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS1}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS3}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ZIP_CODE}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock(!block)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block1} onClose={() => setblock1(!block1)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Customer Shipping Address</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {ShippingAddress.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Shipping Address\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS1}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS3}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ZIP_CODE}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock1(!block1)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block2} onClose={() => setblock2(!block2)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Order Remark</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {OrderRemark.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Remark\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.ORDER_REMARK}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock2(!block2)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={ManagerRemarkBloack} onClose={() => setManagerRemarkBloack(!ManagerRemarkBloack)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Order Remark From Manager</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {ManagerRemark.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Remark\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.ORDER_MANAGER_REMARK}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setManagerRemarkBloack(!ManagerRemarkBloack)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewOrders;\r\n"],"sourceRoot":""}