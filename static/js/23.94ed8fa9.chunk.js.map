{"version":3,"sources":["services/service.js","views/masters/DateFilter.js","services/SweetAlerts.js","views/Distributor/Distributor_AllOrders.js"],"names":["MyApiUrl","ViewImg","DateFilter","date","idate","Date","toISOString","split","getDate","toString","padStart","getMonth","getFullYear","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","table","placeholder","label","items","values","fields2","key","_style","width","Distributor_AllOrders","useState","ResponseData","setResponseData","ResponseData2","setResponseData2","BillingAddress","setBillingAddress","ShippingAddress","setShippingAddress","OrderRemark","setOrderRemark","fromDate","setfromDate","Otype","setOtype","Omonth","setOmonth","toDate","settoDate","block","setblock","block1","setblock1","block2","setblock2","OderSupplyType","setOderSupplyType","GetAllPendingOrder","document","getElementById","className","axios","method","url","headers","then","response","data","map","item","index","hrs","HDays","ORDER_NUMBER","ORDER_BY","TypeName","SUPPLY_NAME","Company","COMPANY_NAME","CUSTOMER_NAME","Logistic","ORDER_LOGISTIC","ORDER_LOGISTIC_DESTINATION","ORDER_LOGISTIC_PAY_MODE","ORDER_DELIVERY_TYPE","ORDER_CASH_DISCOUNT","ORDER_ORDER_AMOUNT","GetOrderSupplyType","catch","error","console","log","params","language_code","Option","i","value","SUPPLY_TYPE_PKID","React","useEffect","history","useHistory","id","style","marginTop","col","boxShadow","md","htmlFor","custom","name","onChange","event","target","type","size","color","onClick","fire","icon","title","cnt","csvData","Array","push","Status","ORDER_STATUS","ORDER_DATE","dateMDY","OrderTime","clock","slice","ItemCount","PRODUCT_NAME","PRD_PACKAGE_UNIT","UNIT_OF_MEASUREMENT_SHORT_KEY","ORDER_ITEM_QTY","PRD_PACKAGE_MRP","ORDER_ITEM_CUSTOMER_PRICE","ORDER_ITEM_TOTAL_AMOUNT","ORDER_ITEM_DISCOUNT","ORDER_ITEM_FREE_UNIT_SCHEME","ORDER_ITEM_ACTUAL_AMOUNT","fileName","buffer","join","blob","Blob","link","createElement","undefined","download","setAttribute","window","URL","createObjectURL","body","appendChild","click","removeChild","navigator","msSaveBlob","fields","hover","striped","bordered","sorter","tableFilter","itemsPerPageSelect","itemsPerPage","pagination","scopedSlots","pkid","ORDER_PKID","Remark","show","onClose","closeButton","Fragment","fontWeight","fontFamily","textAlign","borderBottom","paddingBottom","CUSTOMER_ADDRESS_ADDRESS1","CUSTOMER_ADDRESS_ADDRESS2","CUSTOMER_ADDRESS_ADDRESS3","CUSTOMER_ADDRESS_ZIP_CODE","ORDER_REMARK"],"mappings":"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","file":"static/js/23.94ed8fa9.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","export default function DateFilter({ date }) {\r\n  let idate = new Date(new Date(date).toISOString().split(\"T\")[0]);\r\n  let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n    idate.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n  return dateMDY;\r\n}\r\n","import Swal from \"sweetalert2\";\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  export{\r\n    Toast\r\n  }","/* eslint-disable react-hooks/exhaustive-deps */\r\n/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-25 17:00:15\r\n * @modify date 2021-12-06 15:32:46\r\n * @desc [description]\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CDataTable,\r\n  CButton,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModal,\r\n  CLabel,\r\n  CInput,\r\n  CSelect,\r\n} from \"@coreui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MyApiUrl } from \"src/services/service\";\r\nimport { Toast } from \"src/services/SweetAlerts\";\r\nimport DateFilter from \"../masters/DateFilter\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields2 = [\r\n  { key: \"Status\", _style: { width: \"60%\" } },\r\n  { key: \"Order Date\" },\r\n  { key: \"Order Time\" },\r\n  { key: \"Time Till Now\" },\r\n  { key: \"Days Till Now\" },\r\n  { key: \"Order Number\" },\r\n  { key: \"Order By\" },\r\n  { key: \"Order Placed By\" },\r\n  { key: \"Order Items\" },\r\n  { key: \"Supply Type\" },\r\n  { key: \"Company\" },\r\n  { key: \"Customer Name\" },\r\n  { key: \"Billing Address\" },\r\n  { key: \"Shipping Address\" },\r\n  { key: \"Logistic\" },\r\n  { key: \"Logistic Designation\" },\r\n  { key: \"Logistic Payment Mode\" },\r\n  { key: \"Delivery Type\" },\r\n  { key: \"Cash Discount\" },\r\n  { key: \"Grand Total\" },\r\n  { key: \"Remark\" },\r\n];\r\n\r\nconst Distributor_AllOrders = () => {\r\n  const [ResponseData, setResponseData] = useState([]);\r\n  const [ResponseData2, setResponseData2] = useState([]);\r\n  const [BillingAddress, setBillingAddress] = useState([]);\r\n  const [ShippingAddress, setShippingAddress] = useState([]);\r\n  const [OrderRemark, setOrderRemark] = useState([]);\r\n  const [fromDate, setfromDate] = useState();\r\n  const [Otype, setOtype] = useState();\r\n  const [Omonth, setOmonth] = useState();\r\n  const [toDate, settoDate] = useState();\r\n  const [block, setblock] = useState(false);\r\n  const [block1, setblock1] = useState(false);\r\n  const [block2, setblock2] = useState(false);\r\n\r\n  // Filters\r\n\r\n  const [OderSupplyType, setOderSupplyType] = useState([]);\r\n\r\n  const GetAllPendingOrder = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getAllOrders\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const items = response.data.map((item, index) => {\r\n          return {\r\n            ...item,\r\n            \"Time Till Now\": item.hrs + \" hrs\",\r\n            \"Days Till Now\": item.HDays,\r\n            \"Order Number\": item.ORDER_NUMBER,\r\n            \"Order By\": item.ORDER_BY,\r\n            \"Order Placed By\": item.TypeName,\r\n            \"Supply Type\": item.SUPPLY_NAME,\r\n            Company: item.COMPANY_NAME,\r\n            \"Customer Name\": item.CUSTOMER_NAME,\r\n            Logistic: item.ORDER_LOGISTIC,\r\n            \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n            \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n            \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n            \"Cash Discount\": item.ORDER_CASH_DISCOUNT,\r\n            \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n          };\r\n        });\r\n        setResponseData(items);\r\n        GetOrderSupplyType();\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getAllOrdersImpoExpo\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setResponseData2(response.data);\r\n        GetOrderSupplyType();\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const GetOrderSupplyType = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderSupplyType\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      params: {\r\n        language_code: \"en\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const Option = response.data.map((item, i) => (\r\n          <option key={i} value={item.SUPPLY_TYPE_PKID}>\r\n            {item.SUPPLY_NAME}\r\n          </option>\r\n        ));\r\n        setOderSupplyType(Option);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const ViewBillingAddress = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderBillingAddress/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setBillingAddress(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock(!block);\r\n  };\r\n\r\n  const ViewShippingAddress = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderShippingAddress/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setShippingAddress(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock1(!block1);\r\n  };\r\n\r\n  const ViewOderRemark = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderRemark/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setOrderRemark(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock2(!block2);\r\n  };\r\n\r\n  const FilterDates = () => {\r\n    if (fromDate === \"\" || fromDate == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Select From Date!\",\r\n      });\r\n    } else if (toDate === \"\" || toDate == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Select To Date!\",\r\n      });\r\n    } else {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      axios({\r\n        method: \"GET\",\r\n        url: MyApiUrl + \"getAllOrdersByDate/\" + fromDate + \"/\" + toDate,\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          const items = response.data.map((item, index) => {\r\n            return {\r\n              ...item,\r\n              \"Time Till Now\": item.hrs + \" hrs\",\r\n              \"Days Till Now\": item.HDays,\r\n              \"Order Number\": item.ORDER_NUMBER,\r\n              \"Order By\": item.ORDER_BY,\r\n              \"Order Placed By\": item.TypeName,\r\n              \"Supply Type\": item.SUPPLY_NAME,\r\n              Company: item.COMPANY_NAME,\r\n              \"Customer Name\": item.CUSTOMER_NAME,\r\n              Logistic: item.ORDER_LOGISTIC,\r\n              \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n              \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n              \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n              \"Cash Discount\": item.ORDER_CASH_DISCOUNT,\r\n              \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n            };\r\n          });\r\n          setResponseData(items);\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n      axios({\r\n        method: \"GET\",\r\n        url: MyApiUrl + \"getAllOrdersImpoExpoByDate/\" + fromDate + \"/\" + toDate,\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          setResponseData2(response.data);\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const FilterReset = () => {\r\n    GetAllPendingOrder();\r\n    setfromDate(\"\");\r\n    settoDate(\"\");\r\n    setOtype(\"0\");\r\n    setOmonth(\"0\");\r\n  };\r\n\r\n  const ToExcel = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    var cnt = 0;\r\n    // eslint-disable-next-line no-array-constructor\r\n    var csvData = new Array();\r\n    csvData.push(\r\n      '\"Sl No\",\"Status\",\"Order Date\",\"Order Time\",\"Time Till Now\",\"Order Number\",\"Order By\",\"Order Placed By\",\"Order Items\",\"Supply Type\",\"Company\",\"Customer Name\",\"Logistic\",\"Logistic Designation\",\"Logistic Payment Mode\",\"Delivery Type\",\"Cash Discount\",\"Grand Total\",\"Product Name\",\"Unit\",\"Quantity\",\"MRP\",\"Customer Price\",\"Total Amount\",\"Discount\",\"Free Unit/Scheme\",\"Item Total Amount\"'\r\n    );\r\n    let Status = \"\";\r\n    ResponseData2.map((item) => {\r\n      if (item.ORDER_STATUS === \"0\" || item.ORDER_STATUS === 0) {\r\n        Status = \"Pending / New\";\r\n      } else if (item.ORDER_STATUS === \"1\" || item.ORDER_STATUS === 1) {\r\n        Status = \"Approved\";\r\n      } else if (item.ORDER_STATUS === \"2\" || item.ORDER_STATUS === 2) {\r\n        Status = \"Rejected\";\r\n      } else if (item.ORDER_STATUS === \"3\" || item.ORDER_STATUS === 3) {\r\n        Status = \"Scheduling Order\";\r\n      } else if (item.ORDER_STATUS === \"4\" || item.ORDER_STATUS === 4) {\r\n        Status = \"Ready For Dispatched\";\r\n      } else if (item.ORDER_STATUS === \"5\" || item.ORDER_STATUS === 5) {\r\n        Status = \"Invoice Confirmed\";\r\n      } else if (item.ORDER_STATUS === \"6\" || item.ORDER_STATUS === 6) {\r\n        Status = \"Dispatched\";\r\n      } else if (item.ORDER_STATUS === \"7\" || item.ORDER_STATUS === 7) {\r\n        Status = \"Invoice Uploaded\";\r\n      } else if (item.ORDER_STATUS === \"8\" || item.ORDER_STATUS === 8) {\r\n        Status = \"Delivery Confirmed\";\r\n      } else {\r\n        Status = \"Rejected\";\r\n      }\r\n      let idate = new Date(\r\n        new Date(item.ORDER_DATE).toISOString().split(\"T\")[0]\r\n      );\r\n      let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n        idate.getMonth() + 1\r\n      )\r\n        .toString()\r\n        .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n\r\n      let OrderTime = new Date(item.clock)\r\n        .toISOString()\r\n        .split(\"T\")[1]\r\n        .slice(0, -1);\r\n      return (\r\n        cnt++,\r\n        csvData.push(\r\n          '\"' +\r\n          cnt +\r\n          '\",\"' +\r\n          Status +\r\n          '\",\"' +\r\n          dateMDY +\r\n          '\",\"' +\r\n          OrderTime +\r\n          '\",\"' +\r\n          item.hrs +\r\n          ' hrs\",\"' +\r\n          item.ORDER_NUMBER +\r\n          '\",\"' +\r\n          item.ORDER_BY +\r\n          '\",\"' +\r\n          item.TypeName +\r\n          '\",\"' +\r\n          item.ItemCount +\r\n          '\",\"' +\r\n          item.SUPPLY_NAME +\r\n          '\",\"' +\r\n          item.COMPANY_NAME +\r\n          '\",\"' +\r\n          item.CUSTOMER_NAME +\r\n          '\",\"' +\r\n          item.ORDER_LOGISTIC +\r\n          '\",\"' +\r\n          item.ORDER_LOGISTIC_DESTINATION +\r\n          '\",\"' +\r\n          item.ORDER_LOGISTIC_PAY_MODE +\r\n          '\",\"' +\r\n          item.ORDER_DELIVERY_TYPE +\r\n          '\",\"' +\r\n          item.ORDER_CASH_DISCOUNT +\r\n          '\",\"' +\r\n          item.ORDER_ORDER_AMOUNT +\r\n          '\",\"' +\r\n          item.PRODUCT_NAME +\r\n          '\",\"' +\r\n          item.PRD_PACKAGE_UNIT +\r\n          \" \" +\r\n          item.UNIT_OF_MEASUREMENT_SHORT_KEY +\r\n          '\",\"' +\r\n          item.ORDER_ITEM_QTY +\r\n          \" \" +\r\n          item.UNIT_OF_MEASUREMENT_SHORT_KEY +\r\n          '\",\"' +\r\n          item.PRD_PACKAGE_MRP +\r\n          '\",\"' +\r\n          item.ORDER_ITEM_CUSTOMER_PRICE +\r\n          '\",\"' +\r\n          item.ORDER_ITEM_TOTAL_AMOUNT +\r\n          '\",\"' +\r\n          item.ORDER_ITEM_DISCOUNT +\r\n          '\",\"' +\r\n          item.ORDER_ITEM_FREE_UNIT_SCHEME +\r\n          '\",\"' +\r\n          item.ORDER_ITEM_ACTUAL_AMOUNT +\r\n          '\"'\r\n        )\r\n      );\r\n    });\r\n\r\n    const fileName = \"AllOrders.csv\";\r\n    const buffer = csvData.join(\"\\n\");\r\n    const blob = new Blob([buffer], {\r\n      type: \"text/csv;charset=utf8;\",\r\n    });\r\n\r\n    //IN IE\r\n    const link = document.createElement(\"a\");\r\n    if (link.download !== undefined) {\r\n      link.setAttribute(\"href\", window.URL.createObjectURL(blob));\r\n      link.setAttribute(\"download\", fileName);\r\n      link.style = \"visibility:hidden\";\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } else if (navigator.msSaveBlob) {\r\n      navigator.msSaveBlob(blob, fileName);\r\n    } else {\r\n    }\r\n    document.getElementById(\"divLoading\").className = \"hide\";\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    GetAllPendingOrder();\r\n  }, []);\r\n  let history = useHistory();\r\n  return (\r\n    <div id=\"city\">\r\n      <div id=\"divLoading\"> </div>\r\n      <h1 id=\"ccmaster\">All Orders</h1>\r\n      <CRow style={{ marginTop: \"3%\" }}>\r\n        <CCol col=\"12\">\r\n        <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardBody>\r\n                      <CRow>\r\n                        <CCol md=\"2\">\r\n                          <CLabel htmlFor=\"nf-email\">Select Order Type</CLabel>\r\n                          <CSelect\r\n                            custom\r\n                            name=\"merchant\"\r\n                            value={Otype}\r\n                            onChange={(event) => {\r\n                              document.getElementById(\"divLoading\").className = \"show\";\r\n                              axios({\r\n                                method: \"GET\",\r\n                                url:\r\n                                  MyApiUrl +\r\n                                  \"/getAllOrdersBySupplyType/\" +\r\n                                  event.target.value,\r\n                                headers: {\r\n                                  \"content-type\": \"application/json\",\r\n                                },\r\n                              })\r\n                                .then((response) => {\r\n                                  const items = response.data.map((item, index) => {\r\n                                    return {\r\n                                      ...item,\r\n                                      \"Time Till Now\": item.hrs + \" hrs\",\r\n                                      \"Days Till Now\": item.HDays,\r\n                                      \"Order Number\": item.ORDER_NUMBER,\r\n                                      \"Order By\": item.ORDER_BY,\r\n                                      \"Order Placed By\": item.TypeName,\r\n                                      \"Supply Type\": item.SUPPLY_NAME,\r\n                                      Company: item.COMPANY_NAME,\r\n                                      \"Customer Name\": item.CUSTOMER_NAME,\r\n                                      Logistic: item.ORDER_LOGISTIC,\r\n                                      \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n                                      \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n                                      \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n                                      \"Cash Discount\": item.ORDER_CASH_DISCOUNT,\r\n                                      \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n                                    };\r\n                                  });\r\n                                  setResponseData(items);\r\n                                  document.getElementById(\"divLoading\").className = \"hide\";\r\n                                })\r\n                                .catch((error) => {\r\n                                  console.log(error);\r\n                                });\r\n\r\n                              axios({\r\n                                method: \"GET\",\r\n                                url:\r\n                                  MyApiUrl +\r\n                                  \"/getAllOrdersImpoExpoBySupplyType/\" +\r\n                                  event.target.value,\r\n                                headers: {\r\n                                  \"content-type\": \"application/json\",\r\n                                },\r\n                              })\r\n                                .then((response) => {\r\n                                  console.log(response.data);\r\n                                  setResponseData2(response.data);\r\n                                  document.getElementById(\"divLoading\").className = \"hide\";\r\n                                })\r\n                                .catch((error) => {\r\n                                  console.log(error);\r\n                                });\r\n                            }}\r\n                            id=\"merchant\"\r\n                          >\r\n                            <option value=\"0\">All</option>\r\n                            {OderSupplyType}\r\n                          </CSelect>\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CLabel htmlFor=\"nf-email\">Select Month</CLabel>\r\n                          <CSelect\r\n                            custom\r\n                            name=\"Marchant\"\r\n                            id=\"Marchant\"\r\n                            value={Omonth}\r\n                            onChange={(event) => {\r\n                              document.getElementById(\"divLoading\").className = \"show\";\r\n                              axios({\r\n                                method: \"GET\",\r\n                                url:\r\n                                  MyApiUrl +\r\n                                  \"/getAllOrdersByMonth/\" +\r\n                                  event.target.value,\r\n                                headers: {\r\n                                  \"content-type\": \"application/json\",\r\n                                },\r\n                              })\r\n                                .then((response) => {\r\n                                  const items = response.data.map((item, index) => {\r\n                                    return {\r\n                                      ...item,\r\n                                      \"Time Till Now\": item.hrs + \" hrs\",\r\n                                      \"Days Till Now\": item.HDays,\r\n                                      \"Order Number\": item.ORDER_NUMBER,\r\n                                      \"Order By\": item.ORDER_BY,\r\n                                      \"Order Placed By\": item.TypeName,\r\n                                      \"Supply Type\": item.SUPPLY_NAME,\r\n                                      Company: item.COMPANY_NAME,\r\n                                      \"Customer Name\": item.CUSTOMER_NAME,\r\n                                      Logistic: item.ORDER_LOGISTIC,\r\n                                      \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n                                      \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n                                      \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n                                      \"Cash Discount\": item.ORDER_CASH_DISCOUNT,\r\n                                      \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n                                    };\r\n                                  });\r\n                                  setResponseData(items);\r\n                                  document.getElementById(\"divLoading\").className = \"hide\";\r\n                                })\r\n                                .catch((error) => {\r\n                                  console.log(error);\r\n                                });\r\n                              axios({\r\n                                method: \"GET\",\r\n                                url:\r\n                                  MyApiUrl +\r\n                                  \"/getAllOrdersImpoExpoByMonth/\" +\r\n                                  event.target.value,\r\n                                headers: {\r\n                                  \"content-type\": \"application/json\",\r\n                                },\r\n                              })\r\n                                .then((response) => {\r\n                                  setResponseData2(response.data);\r\n                                  document.getElementById(\"divLoading\").className = \"hide\";\r\n                                })\r\n                                .catch((error) => {\r\n                                  console.log(error);\r\n                                });\r\n                            }}\r\n                          >\r\n                            <option value=\"0\">All</option>\r\n                            <option value=\"1\">Jan</option>\r\n                            <option value=\"2\">Feb</option>\r\n                            <option value=\"3\">March</option>\r\n                            <option value=\"4\">April</option>\r\n                            <option value=\"5\">May</option>\r\n                            <option value=\"6\">Jun</option>\r\n                            <option value=\"7\">Jul</option>\r\n                            <option value=\"8\">Aug</option>\r\n                            <option value=\"9\">Sept</option>\r\n                            <option value=\"10\">Oct</option>\r\n                            <option value=\"11\">Nov</option>\r\n                            <option value=\"12\">Dec</option>\r\n                          </CSelect>\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CLabel>From:</CLabel>\r\n                          <CInput\r\n                            type=\"date\"\r\n                            onChange={(event) => {\r\n                              setfromDate(event.target.value);\r\n                            }}\r\n                            value={fromDate}\r\n                          />\r\n                        </CCol>\r\n\r\n                        <CCol md=\"2\">\r\n                          <CLabel>To:</CLabel>\r\n                          <CInput\r\n                            type=\"date\"\r\n                            onChange={(event) => {\r\n                              settoDate(event.target.value);\r\n                            }}\r\n                            value={toDate}\r\n                          />\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CButton\r\n                            size=\"sm\"\r\n                            color=\"info\"\r\n                            style={{ marginTop: \"28px\", width: \"100%\" }}\r\n                            onClick={FilterDates}\r\n                          >\r\n                            Filter\r\n                          </CButton>\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CButton\r\n                            size=\"sm\"\r\n                            color=\"danger\"\r\n                            style={{ marginTop: \"28px\", width: \"100%\" }}\r\n                            onClick={FilterReset}\r\n                          >\r\n                            Reset\r\n                          </CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                      <hr />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow style={{ marginTop: \"3%\" }}>\r\n        <CCol col=\"12\">\r\n        <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>\r\n                      <CRow>\r\n                        <CCol col=\"6\">All Orders</CCol>\r\n                        <CCol col=\"6\">\r\n                          <CButton\r\n                            onClick={ToExcel}\r\n                            color=\"primary\"\r\n                            style={{\r\n                              marginTop: \"0%\",\r\n                            }}\r\n                            size=\"sm\"\r\n                            id=\"AddEmp\"\r\n                          >\r\n                            Export To Excel\r\n                          </CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={ResponseData}\r\n                        fields={fields2}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPageSelect={items}\r\n                        size=\"sm\"\r\n                        itemsPerPage={10}\r\n                        pagination\r\n                        scopedSlots={{\r\n                          \"Order Date\": (i) => (\r\n                            <td>{<DateFilter date={i.ORDER_DATE} />}</td>\r\n                          ),\r\n                          \"Order Time\": (i) => {\r\n                            return (\r\n                              <td>\r\n                                {new Date(i.clock)\r\n                                  .toISOString()\r\n                                  .split(\"T\")[1]\r\n                                  .slice(0, -1)}\r\n                              </td>\r\n                            );\r\n                          },\r\n                          Status: (i) => {\r\n                            if (\r\n                              i.ORDER_STATUS === \"0\" ||\r\n                              i.ORDER_STATUS === 0\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"PendingOrder\">\r\n                                    Pending / New\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else if (\r\n                              i.ORDER_STATUS === \"1\" ||\r\n                              i.ORDER_STATUS === 1\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"ApprovedOrders\">\r\n                                    Approved\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else if (\r\n                              i.ORDER_STATUS === \"2\" ||\r\n                              i.ORDER_STATUS === 2\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"Rejected\">Rejected</span>\r\n                                </td>\r\n                              );\r\n                            } else if (\r\n                              i.ORDER_STATUS === \"3\" ||\r\n                              i.ORDER_STATUS === 3\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"ScheduledOrders\">\r\n                                    Scheduling Order\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else if (\r\n                              i.ORDER_STATUS === \"4\" ||\r\n                              i.ORDER_STATUS === 4\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"ReadyForDispatchOrders\">\r\n                                    Ready For Dispatched\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else if (\r\n                              i.ORDER_STATUS === \"5\" ||\r\n                              i.ORDER_STATUS === 5\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"InvoiceOrders\">\r\n                                    Invoice Confirmed\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else if (\r\n                              i.ORDER_STATUS === \"6\" ||\r\n                              i.ORDER_STATUS === 6\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"DispatchedOrders\">\r\n                                    Dispatched\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else if (\r\n                              i.ORDER_STATUS === \"7\" ||\r\n                              i.ORDER_STATUS === 7\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"InvoiceGenerated\">\r\n                                    Invoice Uploaded\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else if (\r\n                              i.ORDER_STATUS === \"8\" ||\r\n                              i.ORDER_STATUS === 8\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"ReadyForDelivery\">\r\n                                    Delivery Confirmed\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"PendingOrder\">\r\n                                    Pending / New\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            }\r\n                          },\r\n                          \"Order Items\": (i) => (\r\n                            <td>\r\n                              <CButton\r\n                                onClick={() => {\r\n                                  history.push(\"/OrderItems\", {\r\n                                    data: i,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {i.ItemCount}\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          \"Billing Address\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewBillingAddress(i.ORDER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          \"Shipping Address\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewShippingAddress(i.ORDER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          Remark: (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewOderRemark(i.ORDER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CModal show={block} onClose={() => setblock(!block)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Customer Billing Address</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {BillingAddress.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Billing Address\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS1}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS3}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ZIP_CODE}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock(!block)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block1} onClose={() => setblock1(!block1)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Customer Shipping Address</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {ShippingAddress.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Shipping Address\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS1}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS3}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ZIP_CODE}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock1(!block1)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block2} onClose={() => setblock2(!block2)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Order Remark</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {OrderRemark.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Remark\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.ORDER_REMARK}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock2(!block2)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Distributor_AllOrders;\r\n"],"sourceRoot":""}