{"version":3,"sources":["services/service.js","views/masters/DateFilter.js","services/SweetAlerts.js","views/Distributor/Distributor_Dashboard.js"],"names":["MyApiUrl","ViewImg","DateFilter","date","idate","Date","toISOString","split","getDate","toString","padStart","getMonth","getFullYear","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","table","placeholder","label","items","values","fields2","key","_style","width","Distributor_Dashboard","useState","ResponseData","setResponseData","BillingAddress","setBillingAddress","ShippingAddress","setShippingAddress","OrderRemark","setOrderRemark","block","setblock","block1","setblock1","block2","setblock2","block3","setblock3","OrderProcessRemark","DistributerID","localStorage","getItem","React","useEffect","document","getElementById","className","axios","method","url","headers","then","response","data","map","item","index","HDays","ORDER_NUMBER","ORDER_BY","TypeName","ORDER_TYPE_NAME","SUPPLY_NAME","Company","COMPANY_NAME","CUSTOMER_NAME","Logistic","ORDER_LOGISTIC","ORDER_LOGISTIC_DESTINATION","ORDER_LOGISTIC_PAY_MODE","ORDER_DELIVERY_TYPE","ORDER_CASH_DISCOUNT","ORDER_ORDER_AMOUNT","catch","error","console","log","history","useHistory","id","style","marginTop","col","boxShadow","fields","hover","striped","bordered","sorter","tableFilter","itemsPerPageSelect","size","itemsPerPage","pagination","scopedSlots","i","ORDER_DATE","clock","slice","Attachment","profile","ORD_DOC","Fragment","href","target","src","fluid","Status","ORDER_STATUS","onClick","push","ItemCount","md","color","pkid","ORDER_PKID","Remark","show","onClose","closeButton","fontWeight","fontFamily","textAlign","borderBottom","paddingBottom","CUSTOMER_ADDRESS_ADDRESS1","CUSTOMER_ADDRESS_ADDRESS2","CUSTOMER_ADDRESS_ADDRESS3","CUSTOMER_ADDRESS_ZIP_CODE","ORDER_REMARK","ORDER_REMARK_BY_PROCESSTEAM"],"mappings":"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","file":"static/js/24.b68a68ec.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","export default function DateFilter({ date }) {\r\n  let idate = new Date(new Date(date).toISOString().split(\"T\")[0]);\r\n  let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n    idate.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n  return dateMDY;\r\n}\r\n","import Swal from \"sweetalert2\";\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  export{\r\n    Toast\r\n  }","/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-25 17:00:15\r\n * @modify date 2021-12-06 15:32:46\r\n * @desc [description]\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CDataTable,\r\n  CButton,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModal,\r\n  CInput,\r\n  CLink,\r\n  CImg\r\n} from \"@coreui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MyApiUrl, ViewImg } from \"src/services/service\";\r\nimport { Toast } from \"src/services/SweetAlerts\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DateFilter from \"../masters/DateFilter\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields2 = [\r\n  { key: \"Status\", _style: { width: \"60%\" } },\r\n  { key: \"Order Date\" },\r\n  { key: \"Order Time\" },\r\n  { key: \"Customer Name\" },\r\n  { key: \"Order Items\" },\r\n  { key: \"Company\" },\r\n  { key: \"Order Number\" },\r\n  { key: \"Order By\" },\r\n  { key: \"Ordered Person\" },\r\n  { key: \"Order Type\" },\r\n  { key: \"Supply Type\" },\r\n  { key: \"Day Till Now\" },\r\n  { key: \"Billing Address\" },\r\n  { key: \"Shipping Address\" },\r\n  { key: \"Logistic\" },\r\n  { key: \"Logistic Designation\" },\r\n  { key: \"Logistic Payment Mode\" },\r\n  { key: \"Delivery Type\" },\r\n  { key: \"Cash Discount\" },\r\n  { key: \"Grand Total\" },\r\n  { key: \"Attachment\" },\r\n  { key: \"Remark\" },\r\n];\r\n\r\nconst Distributor_Dashboard = () => {\r\n  const [ResponseData, setResponseData] = useState([]);\r\n  const [BillingAddress, setBillingAddress] = useState([]);\r\n  const [ShippingAddress, setShippingAddress] = useState([]);\r\n  const [OrderRemark, setOrderRemark] = useState([]);\r\n  const [block, setblock] = useState(false);\r\n  const [block1, setblock1] = useState(false);\r\n  const [block2, setblock2] = useState(false);\r\n  const [block3, setblock3] = useState(false);\r\n  const [OrderProcessRemark, setOrderProcessRemark] = useState([]);\r\n  const [TentativeDate, setTentativeDate] = useState();\r\n\r\n  // Filters\r\n\r\n  const DistributerID = localStorage.getItem(\"DistributerID\");\r\n\r\n  const GetAllDistributorOrders = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getAllOrdersByDistributer/\" + DistributerID,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const items = response.data.map((item, index) => {\r\n          return {\r\n            ...item,\r\n            \"Day Till Now\": item.HDays,\r\n            \"Order Number\": item.ORDER_NUMBER,\r\n            \"Order By\": item.ORDER_BY,\r\n            \"Ordered Person\": item.TypeName,\r\n            \"Order Type\": item.ORDER_TYPE_NAME,\r\n            \"Supply Type\": item.SUPPLY_NAME,\r\n            Company: item.COMPANY_NAME,\r\n            \"Customer Name\": item.CUSTOMER_NAME,\r\n            Logistic: item.ORDER_LOGISTIC,\r\n            \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n            \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n            \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n            \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n            \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n          };\r\n        });\r\n        setResponseData(items);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const ViewBillingAddress = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderBillingAddress/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setBillingAddress(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock(!block);\r\n  };\r\n\r\n  const ViewShippingAddress = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderShippingAddress/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setShippingAddress(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock1(!block1);\r\n  };\r\n\r\n  const ViewOderRemark = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderRemark/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setOrderRemark(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock2(!block2);\r\n  };\r\n\r\n  const ViewOderProcessRemark = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderProcessRemark/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setOrderProcessRemark(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock3(!block3);\r\n  };\r\n  React.useEffect(() => {\r\n    GetAllDistributorOrders();\r\n  }, []);\r\n  let history = useHistory();\r\n  return (\r\n    <div id=\"city\">\r\n      <div id=\"divLoading\"> </div>\r\n      <h1 id=\"ccmaster\">My Orders</h1>\r\n      <CRow style={{ marginTop: \"3%\" }}>\r\n        <CCol col=\"12\">\r\n        <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>My Orders</CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={ResponseData}\r\n                        fields={fields2}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPageSelect={items}\r\n                        size=\"sm\"\r\n                        itemsPerPage={10}\r\n                        pagination\r\n                        scopedSlots={{\r\n                          \"Order Date\": (i) => (\r\n                            <td>{<DateFilter date={i.ORDER_DATE} />}</td>\r\n                          ),\r\n                          \"Order Time\": (i) => {\r\n                            return (\r\n                              <td>\r\n                                {new Date(i.clock)\r\n                                  .toISOString()\r\n                                  .split(\"T\")[1]\r\n                                  .slice(0, -1)}\r\n                              </td>\r\n                            );\r\n                          },\r\n                          Attachment: (i) => {\r\n                            let profile = \"\";\r\n                            if (\r\n                              i.ORD_DOC === \"\" ||\r\n                              i.ORD_DOC === null\r\n                            ) {\r\n                              profile = \"NoImage.png\";\r\n                            } else {\r\n                              profile = i.ORD_DOC;\r\n                            }\r\n                            return (\r\n                              <React.Fragment>\r\n                                <td>\r\n                                  <CLink\r\n                                    href={ViewImg + \"/\" + profile}\r\n                                    target=\"_blank\"\r\n                                  >\r\n                                    <CImg\r\n                                      src={ViewImg + \"/\" + profile}\r\n                                      fluid\r\n                                      className=\"mb-2\"\r\n                                      style={{ width: \"100%\" }}\r\n                                    />\r\n                                  </CLink>\r\n                                </td>\r\n                              </React.Fragment>\r\n                            );\r\n                          },\r\n                          Status: (i) => {\r\n                            if (\r\n                              i.ORDER_STATUS === \"0\" ||\r\n                              i.ORDER_STATUS === 0\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"PendingOrder\">\r\n                                    Pending / New\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else if (\r\n                              i.ORDER_STATUS === \"1\" ||\r\n                              i.ORDER_STATUS === 1\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"ApprovedOrders\">\r\n                                    Approved\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else if (\r\n                              i.ORDER_STATUS === \"2\" ||\r\n                              i.ORDER_STATUS === 2\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"Rejected\">Rejected</span>\r\n                                </td>\r\n                              );\r\n                            } else if (\r\n                              i.ORDER_STATUS === \"3\" ||\r\n                              i.ORDER_STATUS === 3\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"ScheduledOrders\">\r\n                                    Scheduling Order\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else if (\r\n                              i.ORDER_STATUS === \"4\" ||\r\n                              i.ORDER_STATUS === 4\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"ReadyForDispatchOrders\">\r\n                                    Ready For Dispatched\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else if (\r\n                              i.ORDER_STATUS === \"5\" ||\r\n                              i.ORDER_STATUS === 5\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"InvoiceOrders\">\r\n                                    Invoice Confirmed\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else if (\r\n                              i.ORDER_STATUS === \"6\" ||\r\n                              i.ORDER_STATUS === 6\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"DispatchedOrders\">\r\n                                    Dispatched\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else if (\r\n                              i.ORDER_STATUS === \"7\" ||\r\n                              i.ORDER_STATUS === 7\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"InvoiceGenerated\">\r\n                                    Invoice Uploaded\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else if (\r\n                              i.ORDER_STATUS === \"8\" ||\r\n                              i.ORDER_STATUS === 8\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"ReadyForDelivery\">\r\n                                    Delivery Confirmed\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"PendingOrder\">\r\n                                    Pending / New\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            }\r\n                          },\r\n                          \"Order Items\": (i) => (\r\n                            <td>\r\n                              <CButton\r\n                                onClick={() => {\r\n                                  history.push(\"/OrderItems\", {\r\n                                    data: i,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {i.ItemCount}\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          \"Billing Address\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewBillingAddress(i.ORDER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          \"Shipping Address\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewShippingAddress(i.ORDER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          Remark: (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewOderRemark(i.ORDER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CModal show={block} onClose={() => setblock(!block)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Customer Billing Address</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {BillingAddress.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Billing Address\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS1}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS3}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ZIP_CODE}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock(!block)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block1} onClose={() => setblock1(!block1)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Customer Shipping Address</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {ShippingAddress.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Shipping Address\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS1}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS3}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ZIP_CODE}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock1(!block1)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block2} onClose={() => setblock2(!block2)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Order Remark</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {OrderRemark.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.ORDER_REMARK}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock2(!block2)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block3} onClose={() => setblock3(!block3)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Process Remark</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {OrderProcessRemark.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.ORDER_REMARK_BY_PROCESSTEAM}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock3(!block3)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Distributor_Dashboard;\r\n"],"sourceRoot":""}