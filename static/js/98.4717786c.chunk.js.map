{"version":3,"sources":["services/service.js","views/masters/DateFilter.js","views/Reports/EmployeePlan.js"],"names":["MyApiUrl","ViewImg","DateFilter","date","idate","Date","toISOString","split","getDate","toString","padStart","getMonth","getFullYear","table","placeholder","label","items","values","fields2","key","EmployeePlan","useState","ResponseData","setResponseData","ResponseData2","setResponseData2","Fdate","setFdate","Tdate","setTdate","empName","setEmpName","CountryForState","setCountryForState","GetAllCust","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","React","useCallback","axios","method","url","headers","then","response","CountryOption","data","map","item","value","EMPLOYEE_PKID","EMPLOYEE_NAME","catch","error","console","log","useEffect","document","getElementById","className","index","Company","COMPANY_NAME","Name","EMPLOYEE_CONTACT","history","useHistory","id","style","marginTop","col","boxShadow","onClick","cnt","csvData","Array","push","Status","EMPLOYEE_TOUR_PLANNER_STATUS","EMPLOYEE_TOUR_PLANNER_FROM_DATE","dateMDY","idate2","EMPLOYEE_TOUR_PLANNER_TO_DATE","dateMDY2","idate3","EMPLOYEE_TOUR_PLANNER_PLACES_DATE","dateMDY3","idate4","EMPLOYEE_TOUR_PLANNER_CDATE","dateMDY4","EMPLOYEE_TOUR_PLANNER_PLACES_NAME","EMPLOYEE_TOUR_PLANNER_PLACES_REMARK","EMPLOYEE_TOUR_PLANNER_SUGGESTION","fileName","buffer","join","blob","Blob","type","link","createElement","undefined","download","setAttribute","window","URL","createObjectURL","body","appendChild","click","removeChild","navigator","msSaveBlob","color","size","custom","name","onChange","event","target","width","fields","hover","striped","bordered","sorter","tableFilter","itemsPerPageSelect","columnFilterSlot","itemsPerPage","pagination","scopedSlots","i","Places","Export","EMPLOYEE_TOUR_PLANNER_PKID","maindata","SingleExport"],"mappings":"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","file":"static/js/98.4717786c.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","export default function DateFilter({ date }) {\r\n  let idate = new Date(new Date(date).toISOString().split(\"T\")[0]);\r\n  let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n    idate.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n  return dateMDY;\r\n}\r\n","/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-29 13:04:12\r\n * @modify date 2021-12-07 12:25:56\r\n * @desc [description]\r\n */\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CLabel,\r\n  CInput,\r\n  CSelect,\r\n  CDataTable,\r\n} from \"@coreui/react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { MyApiUrl } from \"src/services/service\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DateFilter from \"../masters/DateFilter\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields2 = [\r\n  { key: \"Status\" },\r\n  { key: \"Company\" },\r\n  { key: \"Name\" },\r\n  { key: \"Contact Number\" },\r\n  { key: \"Submited Date\" },\r\n  { key: \"From Date\" },\r\n  { key: \"To Date\" },\r\n  { key: \"Places\" },\r\n  { key: \"Export\" },\r\n];\r\n\r\nconst EmployeePlan = () => {\r\n  const [ResponseData, setResponseData] = useState([]);\r\n  const [ResponseData2, setResponseData2] = useState([]);\r\n  const [Fdate, setFdate] = useState(\"-\");\r\n  const [Tdate, setTdate] = useState(\"-\");\r\n  const [empName, setEmpName] = useState(\"-\");\r\n  const [CountryForState, setCountryForState] = useState(\"\");\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n  const GetEmployeeTourPlan = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getAllEmployeePlanners\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const items = response.data.map((item, index) => {\r\n          return {\r\n            ...item,\r\n            Company: item.COMPANY_NAME,\r\n            Name: item.EMPLOYEE_NAME,\r\n            \"Contact Number\": item.EMPLOYEE_CONTACT,\r\n          };\r\n        });\r\n        setResponseData(items);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getAllEmployeePlannersWithPlaces\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setResponseData2(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n\r\n  const GetAllCust = React.useCallback(() => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getAllEmployeeNamesPlanners\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const CountryOption = response.data.map((item) => (\r\n          <option value={item.EMPLOYEE_PKID}>{item.EMPLOYEE_NAME}</option>\r\n        ));\r\n        setEmpName(CountryOption);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n\r\n  const CustmerName = (event) => {\r\n    setCountryForState(event.target.value);\r\n  };\r\n\r\n  const ToExcel = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    var cnt = 0;\r\n    // eslint-disable-next-line no-array-constructor\r\n    var csvData = new Array();\r\n    csvData.push(\r\n      '\"Sl No\",\"Status\",\"Company\",\"Employee Name\",\"Contact Number\",\"Submited Date\",\"From Date\",\"To Date\",\"Place Visiting Date\",\"Place Name\",\"Remark\",\"Admin Suggestion\"'\r\n    );\r\n    let Status = \"\";\r\n    ResponseData2.map((item) => {\r\n      if (\r\n        item.EMPLOYEE_TOUR_PLANNER_STATUS === \"0\" ||\r\n        item.EMPLOYEE_TOUR_PLANNER_STATUS === 0\r\n      ) {\r\n        Status = \"Active\";\r\n      } else if (\r\n        item.EMPLOYEE_TOUR_PLANNER_STATUS === \"1\" ||\r\n        item.EMPLOYEE_TOUR_PLANNER_STATUS === 1\r\n      ) {\r\n        Status = \"Completed\";\r\n      } else if (\r\n        item.EMPLOYEE_TOUR_PLANNER_STATUS === \"2\" ||\r\n        item.EMPLOYEE_TOUR_PLANNER_STATUS === 2\r\n      ) {\r\n        Status = \"Cancelled\";\r\n      }\r\n      let idate = new Date(\r\n        new Date(item.EMPLOYEE_TOUR_PLANNER_FROM_DATE)\r\n          .toISOString()\r\n          .split(\"T\")[0]\r\n      );\r\n      let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n        idate.getMonth() + 1\r\n      )\r\n        .toString()\r\n        .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n\r\n      let idate2 = new Date(\r\n        new Date(item.EMPLOYEE_TOUR_PLANNER_TO_DATE)\r\n          .toISOString()\r\n          .split(\"T\")[0]\r\n      );\r\n      let dateMDY2 = `${idate2.getDate().toString().padStart(2, \"0\")}-${(\r\n        idate2.getMonth() + 1\r\n      )\r\n        .toString()\r\n        .padStart(2, \"0\")}-${idate2.getFullYear()}`;\r\n\r\n      let idate3 = new Date(\r\n        new Date(item.EMPLOYEE_TOUR_PLANNER_PLACES_DATE)\r\n          .toISOString()\r\n          .split(\"T\")[0]\r\n      );\r\n      let dateMDY3 = `${idate3.getDate().toString().padStart(2, \"0\")}-${(\r\n        idate3.getMonth() + 1\r\n      )\r\n        .toString()\r\n        .padStart(2, \"0\")}-${idate3.getFullYear()}`;\r\n\r\n        let idate4 = new Date(\r\n          new Date(item.EMPLOYEE_TOUR_PLANNER_CDATE)\r\n            .toISOString()\r\n            .split(\"T\")[0]\r\n        );\r\n        let dateMDY4 = `${idate4.getDate().toString().padStart(2, \"0\")}-${(\r\n          idate.getMonth() + 1\r\n        )\r\n          .toString()\r\n          .padStart(2, \"0\")}-${idate4.getFullYear()}`;\r\n\r\n      return (\r\n        cnt++,\r\n        csvData.push(\r\n          '\"' +\r\n          cnt +\r\n          '\",\"' +\r\n          Status +\r\n          '\",\"' +\r\n          item.COMPANY_NAME +\r\n          '\",\"' +\r\n          item.EMPLOYEE_NAME +\r\n          '\",\"' +\r\n          item.EMPLOYEE_CONTACT +\r\n          '\",\"' +\r\n          dateMDY4 +\r\n          '\",\"' +\r\n          dateMDY +\r\n          '\",\"' +\r\n          dateMDY2 +\r\n          '\",\"' +\r\n          dateMDY3 +\r\n          '\",\"' +\r\n          item.EMPLOYEE_TOUR_PLANNER_PLACES_NAME +\r\n          '\",\"' +\r\n          item.EMPLOYEE_TOUR_PLANNER_PLACES_REMARK +\r\n          '\",\"' +\r\n          item.EMPLOYEE_TOUR_PLANNER_SUGGESTION +\r\n          '\"'\r\n        )\r\n      );\r\n    });\r\n\r\n    const fileName = \"Employee 15 Days Plan.csv\";\r\n    const buffer = csvData.join(\"\\n\");\r\n    const blob = new Blob([buffer], {\r\n      type: \"text/csv;charset=utf8;\",\r\n    });\r\n\r\n    //IN IE\r\n    const link = document.createElement(\"a\");\r\n    if (link.download !== undefined) {\r\n      link.setAttribute(\"href\", window.URL.createObjectURL(blob));\r\n      link.setAttribute(\"download\", fileName);\r\n      link.style = \"visibility:hidden\";\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } else if (navigator.msSaveBlob) {\r\n      navigator.msSaveBlob(blob, fileName);\r\n    } else {\r\n    }\r\n    document.getElementById(\"divLoading\").className = \"hide\";\r\n  };\r\n\r\n  const SingleExport = (data, maindata) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    var cnt = 0;\r\n    // eslint-disable-next-line no-array-constructor\r\n    var csvData = new Array();\r\n    csvData.push(\r\n      '\"Sl No\",\"Status\",\"Company\",\"Employee Name\",\"Contact Number\",\"From Date\",\"To Date\",\"Place Visiting Date\",\"Place Name\",\"Remark\",\"Admin Suggestion\"'\r\n    );\r\n    let Status = \"\";\r\n    data.map((item) => {\r\n      if (\r\n        maindata.EMPLOYEE_TOUR_PLANNER_STATUS === \"0\" ||\r\n        maindata.EMPLOYEE_TOUR_PLANNER_STATUS === 0\r\n      ) {\r\n        Status = \"Active\";\r\n      } else if (\r\n        maindata.EMPLOYEE_TOUR_PLANNER_STATUS === \"1\" ||\r\n        maindata.EMPLOYEE_TOUR_PLANNER_STATUS === 1\r\n      ) {\r\n        Status = \"Completed\";\r\n      } else if (\r\n        maindata.EMPLOYEE_TOUR_PLANNER_STATUS === \"2\" ||\r\n        maindata.EMPLOYEE_TOUR_PLANNER_STATUS === 2\r\n      ) {\r\n        Status = \"Cancelled\";\r\n      }\r\n      let idate = new Date(\r\n        new Date(maindata.EMPLOYEE_TOUR_PLANNER_FROM_DATE)\r\n          .toISOString()\r\n          .split(\"T\")[0]\r\n      );\r\n      let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n        idate.getMonth() + 1\r\n      )\r\n        .toString()\r\n        .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n\r\n      let idate2 = new Date(\r\n        new Date(maindata.EMPLOYEE_TOUR_PLANNER_TO_DATE)\r\n          .toISOString()\r\n          .split(\"T\")[0]\r\n      );\r\n      let dateMDY2 = `${idate2.getDate().toString().padStart(2, \"0\")}-${(\r\n        idate2.getMonth() + 1\r\n      )\r\n        .toString()\r\n        .padStart(2, \"0\")}-${idate2.getFullYear()}`;\r\n\r\n      let idate3 = new Date(\r\n        new Date(item.EMPLOYEE_TOUR_PLANNER_PLACES_DATE)\r\n          .toISOString()\r\n          .split(\"T\")[0]\r\n      );\r\n      let dateMDY3 = `${idate3.getDate().toString().padStart(2, \"0\")}-${(\r\n        idate3.getMonth() + 1\r\n      )\r\n        .toString()\r\n        .padStart(2, \"0\")}-${idate3.getFullYear()}`;\r\n      return (\r\n        cnt++,\r\n        csvData.push(\r\n          '\"' +\r\n          cnt +\r\n          '\",\"' +\r\n          Status +\r\n          '\",\"' +\r\n          maindata.COMPANY_NAME +\r\n          '\",\"' +\r\n          maindata.EMPLOYEE_NAME +\r\n          '\",\"' +\r\n          maindata.EMPLOYEE_CONTACT +\r\n          '\",\"' +\r\n          dateMDY +\r\n          '\",\"' +\r\n          dateMDY2 +\r\n          '\",\"' +\r\n          dateMDY3 +\r\n          '\",\"' +\r\n          item.EMPLOYEE_TOUR_PLANNER_PLACES_NAME +\r\n          '\",\"' +\r\n          item.EMPLOYEE_TOUR_PLANNER_PLACES_REMARK +\r\n          '\",\"' +\r\n          item.EMPLOYEE_TOUR_PLANNER_SUGGESTION +\r\n          '\"'\r\n        )\r\n      );\r\n    });\r\n\r\n    const fileName = \"Employee 15 Days Plan.csv\";\r\n    const buffer = csvData.join(\"\\n\");\r\n    const blob = new Blob([buffer], {\r\n      type: \"text/csv;charset=utf8;\",\r\n    });\r\n\r\n    //IN IE\r\n    const link = document.createElement(\"a\");\r\n    if (link.download !== undefined) {\r\n      link.setAttribute(\"href\", window.URL.createObjectURL(blob));\r\n      link.setAttribute(\"download\", fileName);\r\n      link.style = \"visibility:hidden\";\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } else if (navigator.msSaveBlob) {\r\n      navigator.msSaveBlob(blob, fileName);\r\n    } else {\r\n    }\r\n    document.getElementById(\"divLoading\").className = \"hide\";\r\n  }\r\n  const FilterDates = () => {\r\n\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getAllEmployeePlannersByDate/\" + Fdate + \"/\" + Tdate + \"/\" + CountryForState,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response, \"this is filter response\")\r\n        const items = response.data.map((item, index) => {\r\n          return {\r\n            ...item,\r\n            Company: item.COMPANY_NAME,\r\n            Name: item.EMPLOYEE_NAME,\r\n            \"Contact Number\": item.EMPLOYEE_CONTACT,\r\n          };\r\n        });\r\n        setResponseData(items);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getAllEmployeePlannersWithPlacesByFilter/\" + Fdate + \"/\" + Tdate + \"/\" + CountryForState,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setResponseData2(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    GetEmployeeTourPlan();\r\n    GetAllCust();\r\n  }, []);\r\n\r\n  let history = useHistory();\r\n  return (\r\n    <div id=\"city\">\r\n      <div id=\"divLoading\"> </div>\r\n      <h1 id=\"ccmaster\">Fortnight Tour Plan</h1>\r\n      <CRow style={{ marginTop: \"3%\" }}>\r\n        <CCol col=\"12\">\r\n          <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>\r\n                      <CRow>\r\n                        <CCol col=\"6\">Fortnight Tour Plan</CCol>\r\n                        <CCol col=\"6\">\r\n                          <CButton\r\n                            onClick={ToExcel}\r\n                            color=\"primary\"\r\n                            style={{\r\n                              marginTop: \"0%\",\r\n                            }}\r\n                            size=\"sm\"\r\n                            id=\"AddEmp\"\r\n                          >\r\n                            Export To Excel\r\n                          </CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                      <CRow>\r\n                        <CCol col=\"3\">\r\n                          <CLabel>Select Employee</CLabel>\r\n                          <CSelect\r\n                            custom\r\n                            name=\"Country\"\r\n                            id=\"Country\"\r\n                            onChange={CustmerName}\r\n                            value={CountryForState}\r\n                          >\r\n                            <option value=\"-1\">Select Employee</option>\r\n                            {empName}\r\n                          </CSelect>\r\n\r\n                        </CCol>\r\n                        <CCol col=\"3\">\r\n                          <CLabel>From:</CLabel>\r\n                          <CInput\r\n                            type=\"date\"\r\n                            onChange={(event) => {\r\n                              setFdate(event.target.value);\r\n                            }}\r\n                            value={Fdate}\r\n                          />\r\n                        </CCol>\r\n                        <CCol col=\"3\"><CLabel>To:</CLabel>\r\n                          <CInput\r\n                            type=\"date\"\r\n                            onChange={(event) => {\r\n                              setTdate(event.target.value);\r\n                            }}\r\n                            value={Tdate}\r\n                          /></CCol>\r\n                        <CCol col=\"3\">\r\n\r\n                          <CButton\r\n                            size=\"sm\"\r\n                            color=\"info\"\r\n                            style={{ marginTop: \"28px\", width: \"100%\" }}\r\n                            onClick={FilterDates}\r\n                          >\r\n                            Filter\r\n                          </CButton>\r\n\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={ResponseData}\r\n                        fields={fields2}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPageSelect={items}\r\n                        columnFilterSlot\r\n                        size=\"sm\"\r\n                        itemsPerPage={10}\r\n                        pagination\r\n                        scopedSlots={{\r\n                          \"Submited Date\": (i) => (\r\n                            <td>\r\n                              {\r\n                                <DateFilter\r\n                                  date={i.EMPLOYEE_TOUR_PLANNER_CDATE}\r\n                                />\r\n                              }\r\n                            </td>\r\n                          ),\r\n                          \"From Date\": (i) => (\r\n                            <td>\r\n                              {\r\n                                <DateFilter\r\n                                  date={i.EMPLOYEE_TOUR_PLANNER_FROM_DATE}\r\n                                />\r\n                              }\r\n                            </td>\r\n                          ),\r\n                          \"To Date\": (i) => (\r\n                            <td>\r\n                              {\r\n                                <DateFilter\r\n                                  date={i.EMPLOYEE_TOUR_PLANNER_TO_DATE}\r\n                                />\r\n                              }\r\n                            </td>\r\n                          ),\r\n                          Places: (i) => (\r\n                            <td>\r\n                              <CButton\r\n                                color=\"primary\"\r\n                                size=\"sm\"\r\n                                onClick={() => {\r\n                                  history.push(\"/TourPlaces\", {\r\n                                    data: i,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                View\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          Export: (i) => (\r\n                            <td>\r\n                              <CButton\r\n                                color=\"primary\"\r\n                                size=\"sm\"\r\n                                onClick={() => {\r\n                                  document.getElementById(\"divLoading\").className = \"show\";\r\n                                  axios({\r\n                                    method: \"GET\",\r\n                                    url: MyApiUrl + \"GetTourPlaces/\" + i.EMPLOYEE_TOUR_PLANNER_PKID,\r\n                                    headers: {\r\n                                      \"content-type\": \"application/json\",\r\n                                    },\r\n                                  })\r\n                                    .then((response) => {\r\n                                      SingleExport(response.data, i);\r\n                                      document.getElementById(\"divLoading\").className = \"hide\";\r\n                                    })\r\n                                    .catch((error) => {\r\n                                      console.log(error);\r\n                                    });\r\n                                }}\r\n                              >\r\n                                To Excel\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          Status: (item) => {\r\n                            if (\r\n                              item.EMPLOYEE_TOUR_PLANNER_STATUS === \"0\" ||\r\n                              item.EMPLOYEE_TOUR_PLANNER_STATUS === 0\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"DispatchedOrders\">\r\n                                    Active\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else if (\r\n                              item.EMPLOYEE_TOUR_PLANNER_STATUS === \"1\" ||\r\n                              item.EMPLOYEE_TOUR_PLANNER_STATUS === 1\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"ReadyForDelivery\">\r\n                                    Completed\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else if (\r\n                              item.EMPLOYEE_TOUR_PLANNER_STATUS === \"2\" ||\r\n                              item.EMPLOYEE_TOUR_PLANNER_STATUS === 2\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"Rejected\">Cancelled</span>\r\n                                </td>\r\n                              );\r\n                            }\r\n                          },\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeePlan;\r\n"],"sourceRoot":""}