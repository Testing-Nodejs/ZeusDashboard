{"version":3,"sources":["services/service.js","views/masters/DateFilter.js","views/EmployeeMaster/EmployeeForgotPassword.js"],"names":["MyApiUrl","ViewImg","DateFilter","date","idate","Date","toISOString","split","getDate","toString","padStart","getMonth","getFullYear","table","placeholder","label","items","values","fields2","key","EmployeeForgotPassword","useState","ResponseData","setResponseData","ViewEmployeeRequest","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","document","getElementById","className","axios","method","url","headers","then","response","data","map","item","index","FORGOT_PASSWORD_REQ_EMAIL","catch","error","console","log","React","useEffect","useHistory","id","style","marginTop","col","boxShadow","fields","hover","striped","bordered","sorter","tableFilter","itemsPerPageSelect","columnFilterSlot","size","itemsPerPage","pagination","scopedSlots","Action","onClick","email","obj","EMPLOYEE_EMAIL","post","fire","title","icon","confirmButtonText","AcceptRequest","color","status"],"mappings":"iHAAA,oEAWE,IAAMA,EAAW,yCAEXC,EAAU,sC,uDCbH,SAASC,EAAT,GAA+B,IAATC,EAAQ,EAARA,KAC/BC,EAAQ,IAAIC,KAAK,IAAIA,KAAKF,GAAMG,cAAcC,MAAM,KAAK,IAM7D,MALW,UAAMH,EAAMI,UAAUC,WAAWC,SAAS,EAAG,KAA7C,aACTN,EAAMO,WAAa,GAElBF,WACAC,SAAS,EAAG,KAJJ,YAIYN,EAAMQ,eAN/B,mC,mKCgCMC,EAAQ,CAAEC,YAAa,iBAAkBC,MAAO,aAChDC,EAAQ,CAAED,MAAO,QAASE,OAAQ,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,MACtDC,EAAU,CACZ,CAAEC,IAAK,SACP,CAAEA,IAAK,kBACP,CAAEA,IAAK,WAiIIC,UA9HgB,WAAO,IAAD,EACOC,mBAAS,IADhB,mBAC1BC,EAD0B,KACZC,EADY,KAe3BC,GAZQC,IAAKC,MAAM,CACrBC,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,KACPC,kBAAkB,EAClBC,QAAS,SAACL,GACNA,EAAMM,iBAAiB,aAAcR,IAAKS,WAC1CP,EAAMM,iBAAiB,aAAcR,IAAKU,gBAItB,WACxBC,SAASC,eAAe,cAAcC,UAAY,OAClDC,IAAM,CACFC,OAAQ,MACRC,IAAKzC,IAAW,2BAChB0C,QAAS,CACL,eAAgB,sBAGnBC,MAAK,SAACC,GACH,IAAM5B,EAAQ4B,EAASC,KAAKC,KAAI,SAACC,EAAMC,GACnC,OAAO,2BACAD,GADP,IAEI,QAASC,EAAQ,EACjB,iBAAkBD,EAAKE,+BAG/B1B,EAAgBP,GAChBoB,SAASC,eAAe,cAAcC,UAAY,UAErDY,OAAM,SAACC,GACJC,QAAQC,IAAIF,QA8BxBG,IAAMC,WAAU,WACZ/B,MACD,IAEWgC,cACd,OACI,sBAAKC,GAAG,OAAR,UACI,qBAAKA,GAAG,aAAR,eACA,oBAAIA,GAAG,WAAP,8CACA,cAAC,IAAD,CAAMC,MAAO,CAAEC,UAAW,MAA1B,SACI,cAAC,IAAD,CAAMC,IAAI,KAAV,SACI,cAAC,IAAD,CAAOF,MAAO,CAAEG,UAAW,2BAA3B,SACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,qCACA,cAAC,IAAD,UACI,cAAC,IAAD,CACI7C,MAAOM,EACPwC,OAAQ5C,EACR6C,OAAK,EACLC,SAAO,EACPC,UAAQ,EACRC,QAAM,EACNC,YAAatD,EACbuD,mBAAoBpD,EACpBqD,kBAAgB,EAChBC,KAAK,KACLC,aAAc,GACdC,YAAU,EACVC,YAAa,CACTC,OAAQ,SAAC3B,GAAD,OACJ,6BACI,eAAC,IAAD,CACI4B,QAAS,YA7D/C,SAACC,GACnBxC,SAASC,eAAe,cAAcC,UAAY,OAClD,IAAIuC,EAAM,CACNC,eAAgBF,GAEpBrC,IAAMwC,KAAK/E,IAAW,8BAA+B6E,GAAKlC,MAAK,SAACC,IACtC,IAAlBA,EAASC,MACTpB,IAAKuD,KAAK,CACNC,MAAO,2BACPC,KAAM,UACNC,kBAAmB,OAEvB3D,IACAY,SAASC,eAAe,cAAcC,UAAY,SAElDb,IAAKuD,KAAK,CACNC,MAAO,qCACPC,KAAM,QACNC,kBAAmB,OAEvB3D,IACAY,SAASC,eAAe,cAAcC,UAAY,WAyCE8C,CAAcrC,EAAKE,4BAEvBoC,MAAM,UACNf,KAAK,KALT,mBAQKvB,EAAKuC","file":"static/js/80.c7441e84.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","export default function DateFilter({ date }) {\r\n  let idate = new Date(new Date(date).toISOString().split(\"T\")[0]);\r\n  let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n    idate.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n  return dateMDY;\r\n}\r\n","/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-29 13:04:12\r\n * @modify date 2021-12-07 12:25:56\r\n * @desc [description]\r\n */\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CRow,\r\n    CDataTable,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CImg,\r\n    CLink,\r\n} from \"@coreui/react\";\r\nimport { MyApiUrl, ViewImg } from \"src/services/service\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DateFilter from \"../masters/DateFilter\";\r\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields2 = [\r\n    { key: \"SL No\" },\r\n    { key: \"Employee Email\" },\r\n    { key: \"Action\" },\r\n];\r\n\r\nconst EmployeeForgotPassword = () => {\r\n    const [ResponseData, setResponseData] = useState([]);\r\n\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: \"top-end\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n        timerProgressBar: true,\r\n        didOpen: (toast) => {\r\n            toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n            toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n        },\r\n    });\r\n\r\n    const ViewEmployeeRequest = () => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"GetForgotPasswordRequest\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                const items = response.data.map((item, index) => {\r\n                    return {\r\n                        ...item,\r\n                        \"SL No\": index + 1,\r\n                        \"Employee Email\": item.FORGOT_PASSWORD_REQ_EMAIL\r\n                    };\r\n                });\r\n                setResponseData(items);\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const AcceptRequest = (email) => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        var obj = {\r\n            EMPLOYEE_EMAIL: email\r\n        }\r\n        axios.post(MyApiUrl + \"AcceptForgotPasswordRequest\", obj).then((response) => {\r\n            if (response.data === true) {\r\n                Swal.fire({\r\n                    title: \"Employee Password Reset!\",\r\n                    icon: \"success\",\r\n                    confirmButtonText: \"OK\",\r\n                });\r\n                ViewEmployeeRequest();\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            } else {\r\n                Swal.fire({\r\n                    title: \"Failed To Reset Employee Password!\",\r\n                    icon: \"error\",\r\n                    confirmButtonText: \"OK\",\r\n                });\r\n                ViewEmployeeRequest();\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            }\r\n        });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        ViewEmployeeRequest();\r\n    }, []);\r\n\r\n    let history = useHistory();\r\n    return (\r\n        <div id=\"city\">\r\n            <div id=\"divLoading\"> </div>\r\n            <h1 id=\"ccmaster\">Employee Forgot Password Request</h1>\r\n            <CRow style={{ marginTop: \"3%\" }}>\r\n                <CCol col=\"12\">\r\n                    <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n                        <CCardBody>\r\n                            <CRow>\r\n                                <CCol>\r\n                                    <CCard>\r\n                                        <CCardHeader>Password Reset Request</CCardHeader>\r\n                                        <CCardBody>\r\n                                            <CDataTable\r\n                                                items={ResponseData}\r\n                                                fields={fields2}\r\n                                                hover\r\n                                                striped\r\n                                                bordered\r\n                                                sorter\r\n                                                tableFilter={table}\r\n                                                itemsPerPageSelect={items}\r\n                                                columnFilterSlot\r\n                                                size=\"sm\"\r\n                                                itemsPerPage={10}\r\n                                                pagination\r\n                                                scopedSlots={{\r\n                                                    Action: (item) => (\r\n                                                        <td>\r\n                                                            <CButton\r\n                                                                onClick={() => {\r\n                                                                    AcceptRequest(item.FORGOT_PASSWORD_REQ_EMAIL);\r\n                                                                }}\r\n                                                                color=\"primary\"\r\n                                                                size=\"sm\"\r\n                                                            >\r\n                                                                Accept\r\n                                                                {item.status}\r\n                                                            </CButton>\r\n                                                        </td>\r\n                                                    ),\r\n                                                }}\r\n                                            />\r\n                                        </CCardBody>\r\n                                    </CCard>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n            </CRow>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmployeeForgotPassword;\r\n"],"sourceRoot":""}