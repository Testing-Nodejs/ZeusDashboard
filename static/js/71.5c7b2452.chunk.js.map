{"version":3,"sources":["services/service.js","../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/icons/DeleteSharp.js","views/masters/LocationMaster.js"],"names":["MyApiUrl","ViewImg","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","table","placeholder","label","fields","key","fields1","fields2","fields3","LocationMaster","useState","countryPkid","setCountryPkid","AddButton","setAddButton","UpdateButton","setUpdateButton","country","setCountry","countryCode","setCountryCode","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","AddCountry","fire","icon","title","obj","CountryCode","CountryName","axios","post","then","response","console","log","data","confirmButtonText","fetchData","GetCountry","GetCountryForCity","GetCountryForArea","UpdateCountry","countryId","put","responseData","setResponseData","useCallback","method","url","headers","params","language_code","items","map","item","COUNTRY_CODE","Country","COUNTRY_NAME","catch","error","useEffect","GetState","GetCities","GetAreas","Updatebtn","type","onClick","size","id","Addbtn","StatePkid","setStatePkid","CountryData","setCountryData","StateData","setStateData","CountryForState","setCountryForState","StateForState","setStateForState","AddButtonForState","setAddButtonForState","UpdateButtonForState","setUpdateButtonForState","AddState","CountryId","StateName","UpdateState","stateId","CountryOption","COUNTRY_PKID","State","STATE_NAME","UpdatebtnForState","AddbtnForState","AddButtonForCity","setAddButtonForCity","UpdateButtonForCity","setUpdateButtonForCity","CountryDataForCity","setCountryDataForCity","StateDataForCity","setStateDataForCity","CountryForCity","setCountryForCity","StateForCity","setStateForCity","CityCode","setCityCode","City","setCity","CityPkid","setCitypkid","CityData","setCityData","GetStateForCity","Countrypkid","StateOption","STATE_PKID","GetStateForUpdateForCity","stateid","AddCity","StateId","CityName","UpdateCity","alert","CITY_NAME","CITY_CODE","UpdatebtnForCity","AddbtnForCity","AddButtonForArea","setAddButtonForArea","UpdateButtonForArea","setUpdateButtonForArea","CountryDataForArea","setCountryDataForArea","StateDataForArea","setStateDataForArea","CityDataForArea","setCityDataForArea","CountryForArea","setCountryForArea","StateForArea","setStateForArea","CityForArea","setCityForArea","area","setarea","zip","setzip","AreaData","setAreaData","areapkid","setareapkid","GetStateForArea","GetcitiesByStateIdForArea","cityOpn","CITY_PKID","GetStateForUpdateForArea","GetcitiesByStateIdUpdateForArea","AddArea","undefined","CityId","AreaName","AREA_ZIP_CODE","UpdateArea","AreaId","Area","AREA_NAME","UpdatebtnForArea","AddbtnForArea","xs","sm","md","lg","xl","className","action","encType","row","name","onChange","event","target","replace","hover","striped","bordered","tableFilter","sorter","itemsPerPage","pagination","scopedSlots","Action","EditContry","COUNTRY_ACTIVE","style","paddingBottom","paddingTop","custom","col","countryid","state","STATE_COUNTRY_FKID","status","cityCode","city","test","cityId","EditArea","AREA_PKID","AREA_COUNTRY_FKID","AREA_STATE_FKID","AREA_CITY_FKID"],"mappings":"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","file":"static/js/71.5c7b2452.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 21h12V7H6v14zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteSharp');\n\nexports.default = _default;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CSelect,\r\n  CLabel,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { MyApiUrl } from \"src/services/service\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields = [{ key: \"Action\" }, { key: \"Country Code\" }, { key: \"Country\" }];\r\n\r\nconst fields1 = [{ key: \"Action\" }, { key: \"Country\" }, { key: \"State\" }];\r\n\r\nconst fields2 = [\r\n  { key: \"Action\" },\r\n  { key: \"Country\" },\r\n  { key: \"State\" },\r\n  { key: \"City Code\" },\r\n  { key: \"City\" },\r\n];\r\n\r\nconst fields3 = [\r\n  { key: \"Action\" },\r\n  { key: \"Country\" },\r\n  { key: \"State\" },\r\n  { key: \"City\" },\r\n  { key: \"Area\" },\r\n  { key: \"Zip Code\" },\r\n];\r\n\r\nconst LocationMaster = () => {\r\n  const [countryPkid, setCountryPkid] = useState(\"\");\r\n  const [AddButton, setAddButton] = useState(true);\r\n  const [UpdateButton, setUpdateButton] = useState(false);\r\n\r\n  const [country, setCountry] = useState();\r\n  const [countryCode, setCountryCode] = useState();\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  const countryCodeChange = (event) => {\r\n    setCountryCode(event.target.value);\r\n  };\r\n\r\n  const AddCountry = () => {\r\n    if (countryCode === \"\" || countryCode == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter Country Code!\",\r\n      });\r\n    } else if (country === \"\" || country == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter Country Name!\",\r\n      });\r\n    } else {\r\n      const obj = {\r\n        CountryCode: countryCode,\r\n        CountryName: country,\r\n      };\r\n\r\n      axios.post(MyApiUrl + \"countries/\", obj).then((response) => {\r\n        console.log(response);\r\n        if (response.data === \"0\") {\r\n          Swal.fire({\r\n            title: \"Country Already Existed!\",\r\n            icon: \"info\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n        } else if (response.data === \"1\") {\r\n          Swal.fire({\r\n            title: \"Country Added Successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          fetchData();\r\n          GetCountry();\r\n          GetCountryForCity();\r\n          GetCountryForArea();\r\n          setCountry(\"\");\r\n          setCountryCode(\"\");\r\n          GetCountry();\r\n        } else if (response.data === \"2\") {\r\n          Swal.fire({\r\n            title: \"Country Failed To Add!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const UpdateCountry = () => {\r\n    if (country === \"\" || country == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter Country Name!\",\r\n      });\r\n    } else {\r\n      const obj = {\r\n        countryId: countryPkid,\r\n        CountryCode: countryCode,\r\n        CountryName: country,\r\n      };\r\n\r\n      axios.put(MyApiUrl + \"countries/\" + countryPkid, obj).then((response) => {\r\n        console.log();\r\n        if (response.data === true) {\r\n          Swal.fire({\r\n            title: \"Country Updated Successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          GetCountry();\r\n          fetchData();\r\n          setCountryPkid(\"\");\r\n          setCountry(\"\");\r\n          setCountryCode(\"\");\r\n          setAddButton(true);\r\n          setUpdateButton(false);\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Failed\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const EditContry = (id, country, countryCode) => {\r\n    setCountryPkid(id);\r\n    setCountry(country);\r\n    setCountryCode(countryCode);\r\n    setAddButton(false);\r\n    setUpdateButton(true);\r\n  };\r\n\r\n  const DeleteCountry = (id) => {\r\n    axios({\r\n      method: \"DELETE\",\r\n      url: MyApiUrl + \"countries/\" + id + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      params: {\r\n        language_code: \"en\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.data === true) {\r\n          Swal.fire({\r\n            title: \"Selected Country Deleted!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          fetchData();\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Failed To Delete Country!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  let [responseData, setResponseData] = React.useState([]);\r\n\r\n  const fetchData = React.useCallback(() => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"countries\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      params: {\r\n        language_code: \"en\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const items = response.data.map((item) => {\r\n          return {\r\n            ...item,\r\n            \"Country Code\": item.COUNTRY_CODE,\r\n            Country: item.COUNTRY_NAME,\r\n          };\r\n        });\r\n        setResponseData(items);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    fetchData();\r\n    GetCountry();\r\n    GetState();\r\n    GetCountryForCity();\r\n    GetCities();\r\n    GetCountryForArea();\r\n    GetAreas();\r\n  }, []);\r\n\r\n  const Updatebtn = () => (\r\n    <CButton type=\"button\" onClick={UpdateCountry} size=\"md\" id=\"Add-btn\">\r\n      Update\r\n    </CButton>\r\n  );\r\n\r\n  const Addbtn = () => (\r\n    <CButton type=\"button\" onClick={AddCountry} size=\"md\" id=\"Add-btn\">\r\n      Add\r\n    </CButton>\r\n  );\r\n\r\n  // State Master\r\n\r\n  const [StatePkid, setStatePkid] = useState();\r\n  const [CountryData, setCountryData] = useState();\r\n  const [StateData, setStateData] = useState([]);\r\n  const [CountryForState, setCountryForState] = useState(\"-1\");\r\n  const [StateForState, setStateForState] = useState();\r\n  const [AddButtonForState, setAddButtonForState] = useState(true);\r\n  const [UpdateButtonForState, setUpdateButtonForState] = useState(false);\r\n\r\n  const CountryChangeForState = (event) => {\r\n    setCountryForState(event.target.value);\r\n  };\r\n\r\n  const AddState = () => {\r\n    if (CountryForState === \"-1\") {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select Country!\",\r\n      });\r\n    } else if (StateForState === \"\" || StateForState == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter State Name!\",\r\n      });\r\n    } else {\r\n      const obj = {\r\n        CountryId: CountryForState,\r\n        StateName: StateForState,\r\n      };\r\n      axios.post(MyApiUrl + \"states\", obj).then((response) => {\r\n        if (response.data === \"Already Existed!\") {\r\n          Swal.fire({\r\n            title: \"State Already Exist!\",\r\n            icon: \"info\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n        } else if (response.data === true) {\r\n          Swal.fire({\r\n            title: \"State Added Successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          GetCountry();\r\n          GetState();\r\n          setStateForState(\"\");\r\n          setCountry(\"-1\");\r\n        } else if (response.data === false) {\r\n          Swal.fire({\r\n            title: \"Failed To Add!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const EditState = (id, countryid, state) => {\r\n    setStatePkid(id);\r\n    setCountryForState(countryid);\r\n    setStateForState(state);\r\n    setAddButtonForState(false);\r\n    setUpdateButtonForState(true);\r\n  };\r\n\r\n  const UpdateState = () => {\r\n    if (CountryForState === \"-1\") {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select Country!\",\r\n      });\r\n    } else if (StateForState === \"\" || StateForState == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter State Name!\",\r\n      });\r\n    } else {\r\n      const obj = {\r\n        CountryId: CountryForState,\r\n        StateName: StateForState,\r\n        stateId: StatePkid,\r\n      };\r\n      axios.put(MyApiUrl + \"states/\" + StatePkid, obj).then((response) => {\r\n        console.log(\"response.data :>> \", response.data);\r\n        if (response.data === false) {\r\n          Swal.fire({\r\n            title: \"Failed To Update!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n        } else if (response.data === true) {\r\n          Swal.fire({\r\n            title: \"State Details Updated!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          GetCountry();\r\n          GetState();\r\n          setStateForState(\"\");\r\n          setCountryForState(\"-1\");\r\n          setAddButtonForState(true);\r\n          setUpdateButtonForState(false);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const DeleteState = (id) => {\r\n    axios({\r\n      method: \"DELETE\",\r\n      url: MyApiUrl + \"states/\" + id + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.data === true) {\r\n          Swal.fire({\r\n            title: \"Selected State Deleted!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          GetState();\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Failed To Delete State!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const GetCountry = React.useCallback(() => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"countries\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const CountryOption = response.data.map((item) => (\r\n          <option value={item.COUNTRY_PKID}>{item.COUNTRY_NAME}</option>\r\n        ));\r\n        setCountryData(CountryOption);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const GetState = () => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"states\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const items = response.data.map((item) => {\r\n          return {\r\n            ...item,\r\n            Country: item.COUNTRY_NAME,\r\n            State: item.STATE_NAME,\r\n          };\r\n        });\r\n        setStateData(items);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const UpdatebtnForState = () => (\r\n    <CButton type=\"button\" onClick={UpdateState} size=\"md\" id=\"Add-btn\">\r\n      Update\r\n    </CButton>\r\n  );\r\n\r\n  const AddbtnForState = () => (\r\n    <CButton type=\"button\" onClick={AddState} size=\"md\" id=\"Add-btn\">\r\n      Add\r\n    </CButton>\r\n  );\r\n\r\n  //   City Master\r\n\r\n  const [AddButtonForCity, setAddButtonForCity] = useState(true);\r\n  const [UpdateButtonForCity, setUpdateButtonForCity] = useState(false);\r\n  const [CountryDataForCity, setCountryDataForCity] = useState();\r\n  const [StateDataForCity, setStateDataForCity] = useState();\r\n  const [CountryForCity, setCountryForCity] = useState();\r\n  const [StateForCity, setStateForCity] = useState();\r\n  const [CityCode, setCityCode] = useState();\r\n  const [City, setCity] = useState();\r\n  const [CityPkid, setCitypkid] = useState();\r\n  const [CityData, setCityData] = useState([]);\r\n\r\n  const GetCountryForCity = React.useCallback(() => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"countries\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      params: {\r\n        language_code: \"en\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const CountryOption = response.data.map((item) => (\r\n          <option value={item.COUNTRY_PKID}>{item.COUNTRY_NAME}</option>\r\n        ));\r\n        setCountryDataForCity(CountryOption);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const GetStateForCity = React.useCallback((Countrypkid) => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getStateByCountryId/\" + Countrypkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        const StateOption = response.data.map((item) => (\r\n          <option value={item.STATE_PKID}>{item.STATE_NAME}</option>\r\n        ));\r\n        setStateDataForCity(StateOption);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const GetStateForUpdateForCity = React.useCallback((Countrypkid, stateid) => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getStateByCountryId/\" + Countrypkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      params: {\r\n        language_code: \"en\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const StateOption = response.data.map((item) => (\r\n          <option value={item.STATE_PKID}>{item.STATE_NAME}</option>\r\n        ));\r\n        setStateDataForCity(StateOption);\r\n        setStateForCity(stateid);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const CountryChangeForCity = (event) => {\r\n    setCountryForCity(event.target.value);\r\n    GetStateForCity(event.target.value);\r\n  };\r\n\r\n  const StateCahangeForCity = (event) => {\r\n    setStateForCity(event.target.value);\r\n  };\r\n\r\n  const CityCodeChange = (event) => {\r\n    setCityCode(event.target.value);\r\n  };\r\n\r\n  const AddCity = () => {\r\n    if (CountryForCity === \"-1\" || CountryForCity == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select Country!\",\r\n      });\r\n    } else if (StateForCity === \"-1\" || StateForCity == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select State!\",\r\n      });\r\n    } else if (CityCode === \"\" || CityCode == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter City Code!\",\r\n      });\r\n    } else if (City === \"\" || City == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter City Name!\",\r\n      });\r\n    } else {\r\n      const obj = {\r\n        CountryId: CountryForCity,\r\n        StateId: StateForCity,\r\n        CityCode: CityCode,\r\n        CityName: City,\r\n      };\r\n      console.log(obj);\r\n      axios.post(MyApiUrl + \"cities/\", obj).then((response) => {\r\n        console.log(\"object :>> \", response.data);\r\n        if (response.data === true) {\r\n          Swal.fire({\r\n            title: \"City Added!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n        } else if (response.data === false) {\r\n          Swal.fire({\r\n            title: \"City Not Added!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          GetCountryForCity();\r\n          setCountryForCity(\"-1\");\r\n          setStateDataForCity(null);\r\n          setStateForCity(\"-1\");\r\n          setCity(\"\");\r\n          setCityCode(\"\");\r\n          GetCities();\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Already Existed!\",\r\n            icon: \"info\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const EditCity = (id, countryid, stateid, cityCode, city) => {\r\n    setCitypkid(id);\r\n    setCountryForCity(countryid);\r\n    GetStateForUpdateForCity(countryid, stateid);\r\n    setCityCode(cityCode);\r\n    setCity(city);\r\n    setAddButtonForCity(false);\r\n    setUpdateButtonForCity(true);\r\n  };\r\n\r\n  const UpdateCity = () => {\r\n    if (CountryForCity === \"\" || CountryForCity == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select Country!\",\r\n      });\r\n    } else if (StateForCity === \"-1\") {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select State!\",\r\n      });\r\n    } else if (CityCode === \"\" || CityCode == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter City Code!\",\r\n      });\r\n      alert(\"Please Enter City Code\");\r\n    } else if (City === \"\" || City == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter City Name!\",\r\n      });\r\n    } else {\r\n      const obj = {\r\n        CountryId: CountryForCity,\r\n        StateId: StateForCity,\r\n        CityCode: CityCode,\r\n        CityName: City,\r\n        CityPkid: CityPkid,\r\n      };\r\n\r\n      axios.put(MyApiUrl + \"cities/\" + CityPkid, obj).then((response) => {\r\n        if (response.data === true) {\r\n          Swal.fire({\r\n            title: \"City Details Updated!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          GetCities();\r\n          GetCountryForCity();\r\n          setCountryForCity(\"-1\");\r\n          setStateForCity(\"-1\");\r\n          setCity(\"\");\r\n          setCityCode(\"\");\r\n          setAddButtonForCity(true);\r\n          setUpdateButtonForCity(false);\r\n        } else if (response.data === false) {\r\n          Swal.fire({\r\n            title: \"City Details Not Updated!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          GetCities();\r\n          GetCountryForCity();\r\n          setCountryForCity(\"-1\");\r\n          setStateForCity(\"-1\");\r\n          setCity(\"\");\r\n          setCityCode(\"\");\r\n          setAddButtonForCity(true);\r\n          setUpdateButtonForCity(false);\r\n        } else {\r\n          Swal.fire({\r\n            title: \"City Already Existed!\",\r\n            icon: \"info\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          GetCities();\r\n          GetCountryForCity();\r\n          setCountryForCity(\"-1\");\r\n          setStateForCity(\"-1\");\r\n          setCity(\"\");\r\n          setCityCode(\"\");\r\n          setAddButtonForCity(true);\r\n          setUpdateButtonForCity(false);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const DeleteCity = (id) => {\r\n    axios({\r\n      method: \"DELETE\",\r\n      url: MyApiUrl + \"cities/\" + id + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.data === true) {\r\n          Swal.fire({\r\n            title: \"Selected City Deleted!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          GetCities();\r\n          GetCountryForCity();\r\n          setCountryForCity(\"-1\");\r\n          setStateForCity(\"-1\");\r\n          setCity(\"\");\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Failed To Delete City!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const GetCities = () => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"cities\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const items = response.data.map((item) => {\r\n          return {\r\n            ...item,\r\n            Country: item.COUNTRY_NAME,\r\n            State: item.STATE_NAME,\r\n            City: item.CITY_NAME,\r\n            \"City Code\": item.CITY_CODE,\r\n          };\r\n        });\r\n        setCityData(items);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const UpdatebtnForCity = () => (\r\n    <CButton type=\"button\" onClick={UpdateCity} size=\"md\" id=\"Add-btn\">\r\n      Update\r\n    </CButton>\r\n  );\r\n\r\n  const AddbtnForCity = () => (\r\n    <CButton type=\"button\" onClick={AddCity} size=\"md\" id=\"Add-btn\">\r\n      Add\r\n    </CButton>\r\n  );\r\n\r\n  //   Area Master\r\n\r\n  const [AddButtonForArea, setAddButtonForArea] = useState(true);\r\n  const [UpdateButtonForArea, setUpdateButtonForArea] = useState(false);\r\n\r\n  const [CountryDataForArea, setCountryDataForArea] = useState();\r\n  const [StateDataForArea, setStateDataForArea] = useState();\r\n  const [CityDataForArea, setCityDataForArea] = useState();\r\n\r\n  const [CountryForArea, setCountryForArea] = useState();\r\n  const [StateForArea, setStateForArea] = useState();\r\n  const [CityForArea, setCityForArea] = useState();\r\n  const [area, setarea] = useState();\r\n  const [zip, setzip] = useState();\r\n\r\n  const [AreaData, setAreaData] = useState([]);\r\n  const [areapkid, setareapkid] = useState();\r\n\r\n  const GetCountryForArea = React.useCallback(() => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"countries\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      params: {\r\n        language_code: \"en\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const CountryOption = response.data.map((item) => (\r\n          <option value={item.COUNTRY_PKID}>{item.COUNTRY_NAME}</option>\r\n        ));\r\n        setCountryDataForArea(CountryOption);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const GetStateForArea = React.useCallback((Countrypkid) => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getStateByCountryId/\" + Countrypkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const StateOption = response.data.map((item) => (\r\n          <option value={item.STATE_PKID}>{item.STATE_NAME}</option>\r\n        ));\r\n        setStateDataForArea(StateOption);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const GetcitiesByStateIdForArea = React.useCallback((stateid) => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"citiesByStateId/\" + stateid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const cityOpn = response.data.map((item) => (\r\n          <option value={item.CITY_PKID}>{item.CITY_NAME}</option>\r\n        ));\r\n        setCityDataForArea(cityOpn);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const GetStateForUpdateForArea = React.useCallback((Countrypkid, stateid) => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getStateByCountryId/\" + Countrypkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      params: {\r\n        language_code: \"en\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const StateOption = response.data.map((item) => (\r\n          <option value={item.STATE_PKID}>{item.STATE_NAME}</option>\r\n        ));\r\n        setStateDataForArea(StateOption);\r\n        setStateForArea(stateid);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const GetcitiesByStateIdUpdateForArea = React.useCallback((stateid) => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"citiesByStateId/\" + stateid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const cityOpn = response.data.map((item) => (\r\n          <option value={item.CITY_PKID}>{item.CITY_NAME}</option>\r\n        ));\r\n        setCityDataForArea(cityOpn);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const CountryChangeForArea = (event) => {\r\n    setCountryForArea(event.target.value);\r\n    GetStateForArea(event.target.value);\r\n  };\r\n\r\n  const StateCahangeForArea = (event) => {\r\n    GetcitiesByStateIdForArea(event.target.value);\r\n    setStateForArea(event.target.value);\r\n  };\r\n\r\n  const CityChangeForArea = (event) => {\r\n    setCityForArea(event.target.value);\r\n  };\r\n\r\n  const AddArea = () => {\r\n    if (CountryForArea === \"-1\" || CountryForArea === undefined) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select Country!\",\r\n      });\r\n    } else if (StateForArea === \"-1\" || StateForArea === undefined) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select State!\",\r\n      });\r\n    } else if (CityForArea === \"-1\" || CityForArea === undefined) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select City!\",\r\n      });\r\n    } else if (area === \"\" || area === null || area === undefined) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter Area Name!\",\r\n      });\r\n    } else if (zip === \"\" || zip === null || zip === undefined) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter Area Zip Code!\",\r\n      });\r\n    } else {\r\n      const obj = {\r\n        CountryId: CountryForArea,\r\n        StateId: StateForArea,\r\n        CityId: CityForArea,\r\n        AreaName: area,\r\n        AREA_ZIP_CODE: zip,\r\n      };\r\n      console.log(\"obj: \", obj);\r\n\r\n      axios.post(MyApiUrl + \"areas\", obj).then((response) => {\r\n        console.log(\"object :>> \", response.data);\r\n        if (response.data === true) {\r\n          Swal.fire({\r\n            title: \"Area Added!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          GetCountryForArea();\r\n          setStateDataForArea(null);\r\n          setCityDataForArea(null);\r\n          setCountryForArea(\"-1\");\r\n          setStateForArea(\"-1\");\r\n          setCityForArea(\"-1\");\r\n          setarea(\"\");\r\n          setzip(\"\");\r\n          GetAreas();\r\n        } else if (response.data === false) {\r\n          Swal.fire({\r\n            title: \"Area Not Added!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          GetCountryForArea();\r\n          setStateDataForArea(null);\r\n          setCityDataForArea(null);\r\n          setCountryForArea(\"-1\");\r\n          setStateForArea(\"-1\");\r\n          setCityForArea(\"-1\");\r\n          setarea(\"\");\r\n          setzip(\"\");\r\n          GetAreas();\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Already Existed!\",\r\n            icon: \"info\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const EditArea = (id, countryid, stateid, cityId, area, zip) => {\r\n    setCountryForArea(countryid);\r\n    GetStateForUpdateForArea(countryid, stateid);\r\n    GetcitiesByStateIdUpdateForArea(stateid);\r\n    setCityForArea(cityId);\r\n    setareapkid(id);\r\n    setarea(area);\r\n    setzip(zip);\r\n    setAddButtonForArea(false);\r\n    setUpdateButtonForArea(true);\r\n  };\r\n\r\n  const UpdateArea = () => {\r\n    if (CountryForArea === \"-1\" || CountryForArea === undefined) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select Country!\",\r\n      });\r\n    } else if (StateForArea === \"-1\" || StateForArea === undefined) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select State!\",\r\n      });\r\n    } else if (CityForArea === \"-1\" || CityForArea === undefined) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select City!\",\r\n      });\r\n    } else if (area === \"\" || area === null || area === undefined) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter Area Name!\",\r\n      });\r\n    } else if (zip === \"\" || zip === null || zip === undefined) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter Area Zip Code!\",\r\n      });\r\n    } else {\r\n      const obj = {\r\n        CountryId: CountryForArea,\r\n        StateId: StateForArea,\r\n        CityId: CityForArea,\r\n        AreaName: area,\r\n        AreaId: areapkid,\r\n        AREA_ZIP_CODE: zip,\r\n      };\r\n\r\n      axios.put(MyApiUrl + \"areas/\" + areapkid, obj).then((response) => {\r\n        if (response.data === true) {\r\n          Swal.fire({\r\n            title: \"Area Details Updated!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          GetCountryForArea();\r\n          setStateDataForArea(null);\r\n          setCityDataForArea(null);\r\n          setCountryForArea(\"-1\");\r\n          setStateForArea(\"-1\");\r\n          setCityForArea(\"-1\");\r\n          setarea(\"\");\r\n          setzip(\"\");\r\n          GetAreas();\r\n          setAddButtonForArea(true);\r\n          setUpdateButtonForArea(false);\r\n        } else if (response.data === false) {\r\n          Swal.fire({\r\n            title: \"Area Details Not Updated!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          GetCountryForArea();\r\n          setStateDataForArea(null);\r\n          setCityDataForArea(null);\r\n          setCountryForArea(\"-1\");\r\n          setStateForArea(\"-1\");\r\n          setCityForArea(\"-1\");\r\n          setarea(\"\");\r\n          setzip(\"\");\r\n          GetAreas();\r\n          setAddButtonForArea(true);\r\n          setUpdateButtonForArea(false);\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Area Already Existed!\",\r\n            icon: \"info\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          GetCountryForArea();\r\n          setStateDataForArea(null);\r\n          setCityDataForArea(null);\r\n          setCountryForArea(\"-1\");\r\n          setStateForArea(\"-1\");\r\n          setCityForArea(\"-1\");\r\n          setarea(\"\");\r\n          setzip(\"\");\r\n          GetAreas();\r\n          setAddButtonForArea(true);\r\n          setUpdateButtonForArea(false);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const DeleteArea = (id) => {\r\n    axios({\r\n      method: \"DELETE\",\r\n      url: MyApiUrl + \"areas/\" + id + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.data === true) {\r\n          Swal.fire({\r\n            title: \"Selected Area Deleted!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          GetAreas();\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Failed To Delete Area!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          alert(\"Failed To Delete Area\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const GetAreas = () => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"areas\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const items = response.data.map((item) => {\r\n          return {\r\n            ...item,\r\n            City: item.CITY_NAME,\r\n            Area: item.AREA_NAME,\r\n            Country: item.COUNTRY_NAME,\r\n            State: item.STATE_NAME,\r\n            \"Zip Code\": item.AREA_ZIP_CODE,\r\n          };\r\n        });\r\n        setAreaData(items);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const UpdatebtnForArea = () => (\r\n    <CButton type=\"button\" onClick={UpdateArea} size=\"md\" id=\"Add-btn\">\r\n      Update\r\n    </CButton>\r\n  );\r\n\r\n  const AddbtnForArea = () => (\r\n    <CButton type=\"button\" onClick={AddArea} size=\"md\" id=\"Add-btn\">\r\n      Add\r\n    </CButton>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1 id=\"ccmaster\">Country Master</h1>\r\n      <br />\r\n      <br />\r\n      <CRow>\r\n        <CCol xs=\"12\" sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\" className=\"mb-3 mb-xl-0\">\r\n          <div id=\"country-master\">\r\n            <CCard>\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol>\r\n                    <CCard>\r\n                      <CCardHeader>Add Country</CCardHeader>\r\n                      <CCardBody>\r\n                        <CForm\r\n                          action=\"\"\r\n                          method=\"post\"\r\n                          encType=\"multipart/form-data\"\r\n                          className=\"form-horizontal\"\r\n                        >\r\n                          <CFormGroup row>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n                              <CLabel>Country-Code</CLabel>\r\n                              <CInput\r\n                                id=\"text-input1\"\r\n                                name=\"text-input\"\r\n                                placeholder=\"Code\"\r\n                                type=\"text\"\r\n                                value={countryCode}\r\n                                onChange={countryCodeChange}\r\n                              />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n\r\n                          <CFormGroup row>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n                              <CLabel>Country</CLabel>\r\n                              <CInput\r\n                                id=\"text-input\"\r\n                                name=\"text-input\"\r\n                                placeholder=\"Country\"\r\n                                value={country}\r\n                                onChange={(event) => {\r\n                                  let value = event.target.value;\r\n                                  value = value.replace(/[^A-Z a-z]/gi, \"\");\r\n                                  setCountry(value);\r\n                                }}\r\n                              />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                          {UpdateButton && <Updatebtn />}\r\n                          {AddButton && <Addbtn />}\r\n                        </CForm>\r\n                      </CCardBody>\r\n                    </CCard>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n            </CCard>\r\n          </div>\r\n        </CCol>\r\n\r\n        <CCol xs=\"12\" sm=\"12\" md=\"8\" lg=\"8\" xl=\"8\" className=\"mb-3 mb-xl-0\">\r\n          <div id=\"country-table\">\r\n            <CCard id=\"Loccard\">\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol>\r\n                    <CCard>\r\n                      <CCardHeader>Added Country</CCardHeader>\r\n                      <CCardBody>\r\n                        <CDataTable\r\n                          items={responseData}\r\n                          fields={fields}\r\n                          hover\r\n                          striped\r\n                          bordered\r\n                          tableFilter={table}\r\n                          sorter\r\n                          size=\"sm\"\r\n                          itemsPerPage={4}\r\n                          pagination\r\n                          scopedSlots={{\r\n                            Action: (item) => (\r\n                              <td>\r\n                                <CButton\r\n                                  onClick={() => {\r\n                                    EditContry(\r\n                                      item.COUNTRY_PKID,\r\n                                      item.COUNTRY_NAME,\r\n                                      item.COUNTRY_CODE\r\n                                    );\r\n                                  }}\r\n                                  size=\"sm\"\r\n                                  id=\"war-btn\"\r\n                                >\r\n                                  <EditIcon />\r\n                                  {item.COUNTRY_ACTIVE}\r\n                                </CButton>\r\n                                <CButton\r\n                                  onClick={() => {\r\n                                    DeleteCountry(item.COUNTRY_PKID);\r\n                                  }}\r\n                                  size=\"sm\"\r\n                                  id=\"war-btn1\"\r\n                                >\r\n                                  <DeleteSharpIcon />\r\n                                  {item.COUNTRY_ACTIVE}\r\n                                </CButton>\r\n                              </td>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      </CCardBody>\r\n                    </CCard>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n            </CCard>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <h1 id=\"ccmaster\" style={{ paddingBottom: \"2%\", paddingTop: \"2%\" }}>\r\n        State Master\r\n      </h1>\r\n      <CRow>\r\n        <CCol sm=\"12\" md=\"12\" lg=\"4\" xl=\"4\" className=\"mb-3 mb-xl-0\">\r\n          <CCard>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Add State</CCardHeader>\r\n                    <CCardBody>\r\n                      <CForm\r\n                        action=\"\"\r\n                        method=\"post\"\r\n                        encType=\"multipart/form-data\"\r\n                        className=\"form-horizontal\"\r\n                      >\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"12\" md=\"12\">\r\n                            <CLabel>Select Country</CLabel>\r\n                            <CSelect\r\n                              custom\r\n                              name=\"Country\"\r\n                              id=\"Country\"\r\n                              onChange={CountryChangeForState}\r\n                              value={CountryForState}\r\n                            >\r\n                              <option value=\"-1\">Select Country</option>\r\n                              {CountryData}\r\n                            </CSelect>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"12\" md=\"12\">\r\n                            <CLabel>State</CLabel>\r\n                            <CInput\r\n                              id=\"text-input\"\r\n                              name=\"text-input\"\r\n                              placeholder=\"State\"\r\n                              value={StateForState}\r\n                              onChange={(event) => {\r\n                                let value = event.target.value;\r\n                                value = value.replace(/[^A-Z a-z]/gi, \"\");\r\n                                setStateForState(value);\r\n                              }}\r\n                            />\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                      </CForm>\r\n                      {UpdateButtonForState && <UpdatebtnForState />}\r\n                      {AddButtonForState && <AddbtnForState />}\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n\r\n        <CCol col=\"10\">\r\n          <CCard>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Added States</CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={StateData}\r\n                        fields={fields1}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        size=\"sm\"\r\n                        itemsPerPage={4}\r\n                        pagination\r\n                        scopedSlots={{\r\n                          Action: (item) => (\r\n                            <td>\r\n                              <CButton\r\n                                size=\"sm\"\r\n                                onClick={() => {\r\n                                  EditState(\r\n                                    item.STATE_PKID,\r\n                                    item.STATE_COUNTRY_FKID,\r\n                                    item.STATE_NAME\r\n                                  );\r\n                                }}\r\n                                id=\"war-btn\"\r\n                              >\r\n                                <EditIcon />\r\n                                {item.status}\r\n                              </CButton>\r\n                              <CButton\r\n                                size=\"sm\"\r\n                                onClick={() => {\r\n                                  DeleteState(item.STATE_PKID);\r\n                                }}\r\n                                id=\"war-btn1\"\r\n                              >\r\n                                <DeleteSharpIcon />\r\n                                {item.status}\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <h1 id=\"ccmaster\" style={{ paddingBottom: \"2%\", paddingTop: \"2%\" }}>\r\n        City Master\r\n      </h1>\r\n      <CRow>\r\n        <CCol sm=\"12\" md=\"12\" lg=\"4\" xl=\"4\" className=\"mb-3 mb-xl-0\">\r\n          <CCard id=\"city-master\">\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Add City</CCardHeader>\r\n                    <CCardBody>\r\n                      <CForm\r\n                        action=\"\"\r\n                        method=\"post\"\r\n                        encType=\"multipart/form-data\"\r\n                        className=\"form-horizontal\"\r\n                      >\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"12\" md=\"12\">\r\n                            <CLabel>Select Country</CLabel>\r\n                            <CSelect\r\n                              custom\r\n                              name=\"Country\"\r\n                              id=\"Country\"\r\n                              value={CountryForCity}\r\n                              onChange={CountryChangeForCity}\r\n                            >\r\n                              <option value=\"-1\">Select Country</option>\r\n                              {CountryDataForCity}\r\n                            </CSelect>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"12\" md=\"12\">\r\n                            <CLabel>Select State</CLabel>\r\n                            <CSelect\r\n                              custom\r\n                              name=\"Province\"\r\n                              id=\"Province\"\r\n                              value={StateForCity}\r\n                              onChange={StateCahangeForCity}\r\n                            >\r\n                              <option value=\"-1\">Select State</option>\r\n                              {StateDataForCity}\r\n                            </CSelect>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"12\" md=\"12\">\r\n                            <CLabel> City Code</CLabel>\r\n                            <CInput\r\n                              id=\"text-input1\"\r\n                              name=\"text-input\"\r\n                              placeholder=\"City Code\"\r\n                              value={CityCode}\r\n                              onChange={CityCodeChange}\r\n                            />\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"12\" md=\"12\">\r\n                            <CLabel> City</CLabel>\r\n                            <CInput\r\n                              id=\"text-input1\"\r\n                              name=\"text-input\"\r\n                              placeholder=\"City\"\r\n                              value={City}\r\n                              onChange={(event) => {\r\n                                let value = event.target.value;\r\n                                value = value.replace(/[^A-Z a-z]/gi, \"\");\r\n                                setCity(value);\r\n                              }}\r\n                            />\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        {UpdateButtonForCity && <UpdatebtnForCity />}\r\n                        {AddButtonForCity && <AddbtnForCity />}\r\n                      </CForm>\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol col=\"10\">\r\n          <CCard id=\"city-table\">\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Added Cities</CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={CityData}\r\n                        fields={fields2}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        size=\"sm\"\r\n                        itemsPerPage={10}\r\n                        pagination\r\n                        scopedSlots={{\r\n                          Action: (item) => (\r\n                            <td>\r\n                              <CButton\r\n                                size=\"sm\"\r\n                                onClick={() => {\r\n                                  EditCity(\r\n                                    item.CITY_PKID,\r\n                                    item.COUNTRY_PKID,\r\n                                    item.STATE_PKID,\r\n                                    item.CITY_CODE,\r\n                                    item.CITY_NAME\r\n                                  );\r\n                                }}\r\n                                id=\"war-btn\"\r\n                              >\r\n                                <EditIcon />\r\n                                {item.status}\r\n                              </CButton>\r\n                              <CButton\r\n                                size=\"sm\"\r\n                                onClick={() => {\r\n                                  DeleteCity(item.CITY_PKID);\r\n                                }}\r\n                                id=\"war-btn1\"\r\n                              >\r\n                                <DeleteSharpIcon />\r\n                                {item.status}\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <h1 id=\"ccmaster\" style={{ paddingBottom: \"2%\", paddingTop: \"2%\" }}>\r\n        Area Master\r\n      </h1>\r\n      <CRow>\r\n        <CCol sm=\"12\" md=\"12\" lg=\"4\" xl=\"4\" className=\"mb-3 mb-xl-0\">\r\n          <CCard id=\"city-master\">\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Add Area</CCardHeader>\r\n                    <CCardBody>\r\n                      <CForm\r\n                        action=\"\"\r\n                        method=\"post\"\r\n                        encType=\"multipart/form-data\"\r\n                        className=\"form-horizontal\"\r\n                      >\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"12\" md=\"12\">\r\n                            <CLabel>Select Country</CLabel>\r\n                            <CSelect\r\n                              custom\r\n                              name=\"Country\"\r\n                              id=\"Country\"\r\n                              value={CountryForArea}\r\n                              onChange={CountryChangeForArea}\r\n                            >\r\n                              <option value=\"-1\">Select Country</option>\r\n                              {CountryDataForArea}\r\n                            </CSelect>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"12\" md=\"12\">\r\n                            <CLabel>Select State</CLabel>\r\n                            <CSelect\r\n                              custom\r\n                              name=\"Province\"\r\n                              id=\"Province\"\r\n                              value={StateForArea}\r\n                              onChange={StateCahangeForArea}\r\n                            >\r\n                              <option value=\"-1\">Select State</option>\r\n                              {StateDataForArea}\r\n                            </CSelect>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"12\" md=\"12\">\r\n                            <CLabel>Select City</CLabel>\r\n                            <CSelect\r\n                              custom\r\n                              name=\"City\"\r\n                              id=\"City\"\r\n                              value={CityForArea}\r\n                              onChange={CityChangeForArea}\r\n                            >\r\n                              <option value=\"-1\">Select City</option>\r\n                              {CityDataForArea}\r\n                            </CSelect>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"12\" md=\"12\">\r\n                            <CLabel>Area</CLabel>\r\n                            <CInput\r\n                              id=\"text-input1\"\r\n                              name=\"text-input\"\r\n                              placeholder=\"Area\"\r\n                              value={area}\r\n                              onChange={(event) => {\r\n                                let value = event.target.value;\r\n                                value = value.replace(/[^A-Z a-z]/gi, \"\");\r\n                                setarea(value);\r\n                              }}\r\n                            />\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"12\" md=\"12\">\r\n                            <CLabel>Zip Code</CLabel>\r\n                            <CInput\r\n                              id=\"text-input1\"\r\n                              name=\"text-input\"\r\n                              placeholder=\"Zip Code\"\r\n                              value={zip}\r\n                              onChange={(event) => {\r\n                                const re = /^[0-9\\b]+$/;\r\n                                if (\r\n                                  event.target.value === \"\" ||\r\n                                  re.test(event.target.value)\r\n                                ) {\r\n                                  setzip(event.target.value);\r\n                                }\r\n                              }}\r\n                            />\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        {UpdateButtonForArea && <UpdatebtnForArea />}\r\n                        {AddButtonForArea && <AddbtnForArea />}\r\n                      </CForm>\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol col=\"10\">\r\n          <CCard id=\"city-table\">\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Added Areas</CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={AreaData}\r\n                        fields={fields3}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        size=\"sm\"\r\n                        itemsPerPage={10}\r\n                        pagination\r\n                        scopedSlots={{\r\n                          Action: (item) => (\r\n                            <td>\r\n                              <CButton\r\n                                size=\"sm\"\r\n                                onClick={() => {\r\n                                  EditArea(\r\n                                    item.AREA_PKID,\r\n                                    item.AREA_COUNTRY_FKID,\r\n                                    item.AREA_STATE_FKID,\r\n                                    item.AREA_CITY_FKID,\r\n                                    item.AREA_NAME,\r\n                                    item.AREA_ZIP_CODE\r\n                                  );\r\n                                }}\r\n                                id=\"war-btn\"\r\n                              >\r\n                                <EditIcon />\r\n                                {item.status}\r\n                              </CButton>\r\n                              <CButton\r\n                                size=\"sm\"\r\n                                onClick={() => {\r\n                                  DeleteArea(item.CITY_PKID);\r\n                                }}\r\n                                id=\"war-btn1\"\r\n                              >\r\n                                <DeleteSharpIcon />\r\n                                {item.status}\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationMaster;\r\n"],"sourceRoot":""}