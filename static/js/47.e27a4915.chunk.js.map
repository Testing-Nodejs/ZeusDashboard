{"version":3,"sources":["services/service.js","views/masters/DateFilter.js","services/SweetAlerts.js","views/dashboard/SalesReportCustomerOrders.js"],"names":["MyApiUrl","ViewImg","DateFilter","date","idate","Date","toISOString","split","getDate","toString","padStart","getMonth","getFullYear","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","SalesReportCustomerOrders","props","console","log","EmployeeType","location","state","data","CUSTOMER_TYPE_NAME","EmployeeSubType","CUSTOMER_SUBTYPE_NAME","EmployeeHQ","HQ_NAME","Company","COMPANY_NAME","EmployeeName","CUSTOMER_NAME","EmployeeEmail","CUSTOMER_EMAIL","ContactNumber","CUSTOMER_MOBILE","EmployeeID","CUSTOMER_PKID","useState","ResponseData","setResponseData","block","setblock","block1","setblock1","block2","setblock2","BillingAddress","setBillingAddress","ShippingAddress","setShippingAddress","OrderRemark","setOrderRemark","fromDate","setfromDate","toDate","settoDate","GetEmployeeOrders","axios","method","url","headers","then","response","catch","error","React","useEffect","history","useHistory","id","md","color","size","onClick","goBack","col","cnt","csvData","Array","push","Status","map","item","ORDER_DATE","dateMDY","OrderTime","clock","slice","hrs","ORDER_NUMBER","ORDER_BY","TypeName","ItemCount","SUPPLY_NAME","ORDER_LOGISTIC","ORDER_LOGISTIC_DESTINATION","ORDER_LOGISTIC_PAY_MODE","ORDER_DELIVERY_TYPE","ORDER_CASH_DISCOUNT","ORDER_ORDER_AMOUNT","fileName","buffer","join","blob","Blob","type","link","document","createElement","undefined","download","setAttribute","window","URL","createObjectURL","style","body","appendChild","click","removeChild","navigator","msSaveBlob","marginTop","width","borderRight","onChange","event","target","value","fire","icon","title","overflow","i","index","dangerouslySetInnerHTML","__html","float","ORDER_TYPE_NAME","HDays","pkid","ORDER_PKID","show","onClose","closeButton","Fragment","fontWeight","fontFamily","textAlign","borderBottom","paddingBottom","CUSTOMER_ADDRESS_ADDRESS1","CUSTOMER_ADDRESS_ADDRESS2","CUSTOMER_ADDRESS_ADDRESS3","CUSTOMER_ADDRESS_ZIP_CODE","ORDER_REMARK"],"mappings":"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","file":"static/js/47.e27a4915.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","export default function DateFilter({ date }) {\r\n  let idate = new Date(new Date(date).toISOString().split(\"T\")[0]);\r\n  let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n    idate.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n  return dateMDY;\r\n}\r\n","import Swal from \"sweetalert2\";\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  export{\r\n    Toast\r\n  }","/* eslint-disable react-hooks/exhaustive-deps */\r\n/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-25 17:00:15\r\n * @modify date 2021-12-06 15:32:46\r\n * @desc [description]\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModal,\r\n  CButton,\r\n  CLabel,\r\n  CInput,\r\n} from \"@coreui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MyApiUrl } from \"src/services/service\";\r\nimport DateFilter from \"../masters/DateFilter\";\r\nimport { Toast } from \"src/services/SweetAlerts\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\n\r\nconst SalesReportCustomerOrders = (props) => {\r\n  console.log(props);\r\n  const EmployeeType = props.location.state.data.CUSTOMER_TYPE_NAME;\r\n  const EmployeeSubType = props.location.state.data.CUSTOMER_SUBTYPE_NAME;\r\n  const EmployeeHQ = props.location.state.data.HQ_NAME;\r\n  const Company = props.location.state.data.COMPANY_NAME;\r\n  const EmployeeName = props.location.state.data.CUSTOMER_NAME;\r\n  const EmployeeEmail = props.location.state.data.CUSTOMER_EMAIL;\r\n  const ContactNumber = props.location.state.data.CUSTOMER_MOBILE;\r\n  const EmployeeID = props.location.state.data.CUSTOMER_PKID;\r\n\r\n  const [ResponseData, setResponseData] = useState([]);\r\n  const [block, setblock] = useState(false);\r\n  const [block1, setblock1] = useState(false);\r\n  const [block2, setblock2] = useState(false);\r\n  const [BillingAddress, setBillingAddress] = useState([]);\r\n  const [ShippingAddress, setShippingAddress] = useState([]);\r\n  const [OrderRemark, setOrderRemark] = useState([]);\r\n  const [fromDate, setfromDate] = useState();\r\n  const [toDate, settoDate] = useState();\r\n\r\n  const GetEmployeeOrders = () => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getOrdersDetailsFromByCust/\" + EmployeeID,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(\"🚀 ~ file: SalesReportCustomerOrders.js ~ line 59 ~ .then ~ response\", response)\r\n        setResponseData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const FilterDates = () => {\r\n    if (fromDate === \"\" || fromDate == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Select From Date!\",\r\n      });\r\n    } else if (toDate === \"\" || toDate == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Select To Date!\",\r\n      });\r\n    } else {\r\n      axios({\r\n        method: \"GET\",\r\n        url: MyApiUrl + \"getOrdersDetailsFromByCustByDate/\" + EmployeeID + \"/\" + fromDate + \"/\" + toDate,\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          setResponseData(response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const FilterReset = () => {\r\n    GetEmployeeOrders();\r\n    setfromDate(\"\");\r\n    settoDate(\"\");\r\n  };\r\n\r\n  const ViewBillingAddress = (pkid) => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderBillingAddress/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setBillingAddress(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock(!block);\r\n  };\r\n\r\n  const ViewShippingAddress = (pkid) => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderShippingAddress/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setShippingAddress(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock1(!block1);\r\n  };\r\n\r\n  const ViewOderRemark = (pkid) => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderRemark/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setOrderRemark(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock2(!block2);\r\n  };\r\n\r\n  const ToExcel = () => {\r\n    var cnt = 0;\r\n    // eslint-disable-next-line no-array-constructor\r\n    var csvData = new Array();\r\n    csvData.push(\r\n      '\"Sl No\",\"Customer Type\",\"Customer Sub Type\",\"HQ\",\"Company\",\"Customer Name\",\"Customer Email\",\"Contact Number\",\"Status\",\"Order Date\",\"Order Time\",\"Time Till Now\",\"Order Number\",\"Order By\",\"Order Placed By\",\"Order Items\",\"Supply Type\",\"Company\",\"Customer Name\",\"Logistic\",\"Logistic Designation\",\"Logistic Payment Mode\",\"Delivery Type\",\"Cash Discount\",\"Grand Total\"'\r\n    );\r\n    let Status = \"\";\r\n    ResponseData.map((item) => {\r\n      Status = \"Delivery Confirmed\";\r\n      let idate = new Date(\r\n        new Date(item.ORDER_DATE).toISOString().split(\"T\")[0]\r\n      );\r\n      let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n        idate.getMonth() + 1\r\n      )\r\n        .toString()\r\n        .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n\r\n      let OrderTime = new Date(item.clock)\r\n        .toISOString()\r\n        .split(\"T\")[1]\r\n        .slice(0, -1);\r\n      return (\r\n        cnt++,\r\n        csvData.push(\r\n          '\"' +\r\n          cnt +\r\n          '\",\"' +\r\n          EmployeeType +\r\n          '\",\"' +\r\n          EmployeeSubType +\r\n          '\",\"' +\r\n          EmployeeHQ +\r\n          '\",\"' +\r\n          Company +\r\n          '\",\"' +\r\n          EmployeeName +\r\n          '\",\"' +\r\n          EmployeeEmail +\r\n          '\",\"' +\r\n          ContactNumber +\r\n          '\",\"' +\r\n          Status +\r\n          '\",\"' +\r\n          dateMDY +\r\n          '\",\"' +\r\n          OrderTime +\r\n          '\",\"' +\r\n          item.hrs +\r\n          ' hrs\",\"' +\r\n          item.ORDER_NUMBER +\r\n          '\",\"' +\r\n          item.ORDER_BY +\r\n          '\",\"' +\r\n          item.TypeName +\r\n          '\",\"' +\r\n          item.ItemCount +\r\n          '\",\"' +\r\n          item.SUPPLY_NAME +\r\n          '\",\"' +\r\n          item.COMPANY_NAME +\r\n          '\",\"' +\r\n          item.CUSTOMER_NAME +\r\n          '\",\"' +\r\n          item.ORDER_LOGISTIC +\r\n          '\",\"' +\r\n          item.ORDER_LOGISTIC_DESTINATION +\r\n          '\",\"' +\r\n          item.ORDER_LOGISTIC_PAY_MODE +\r\n          '\",\"' +\r\n          item.ORDER_DELIVERY_TYPE +\r\n          '\",\"' +\r\n          item.ORDER_CASH_DISCOUNT +\r\n          '\",\"' +\r\n          item.ORDER_ORDER_AMOUNT +\r\n          '\"'\r\n        )\r\n      );\r\n    });\r\n\r\n    const fileName = \"Customer Orders List.csv\";\r\n    const buffer = csvData.join(\"\\n\");\r\n    const blob = new Blob([buffer], {\r\n      type: \"text/csv;charset=utf8;\",\r\n    });\r\n\r\n    //IN IE\r\n    const link = document.createElement(\"a\");\r\n    if (link.download !== undefined) {\r\n      link.setAttribute(\"href\", window.URL.createObjectURL(blob));\r\n      link.setAttribute(\"download\", fileName);\r\n      link.style = \"visibility:hidden\";\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } else if (navigator.msSaveBlob) {\r\n      navigator.msSaveBlob(blob, fileName);\r\n    } else {\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    GetEmployeeOrders();\r\n  }, []);\r\n  let history = useHistory();\r\n  return (\r\n    <div>\r\n      <h1 id=\"ccmaster\">Customer Sales</h1>\r\n      <br />\r\n      <CRow>\r\n        <CCol md=\"2\" />\r\n        <CCol md=\"12\">\r\n          <CCard>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol md=\"1\">\r\n                  <CButton\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() => history.goBack()}\r\n                  >\r\n                    Back\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n              <br />\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>\r\n                      <CRow>\r\n                        <CCol col=\"6\">Customer Details</CCol>\r\n                        <CCol col=\"6\">\r\n                          <CButton\r\n                            onClick={ToExcel}\r\n                            color=\"primary\"\r\n                            style={{\r\n                              marginTop: \"0%\",\r\n                            }}\r\n                            size=\"sm\"\r\n                            id=\"AddEmp\"\r\n                          >\r\n                            Export To Excel\r\n                          </CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                      <CRow>\r\n                        <CCol md=\"12\">\r\n                          <table id=\"customerDetails\" style={{ width: \"100%\" }}>\r\n                            <tr>\r\n                              <td style={{ borderRight: \"1px solid #7e0103\" }}>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Customer Type :</b>\r\n                                  </th>\r\n                                  <td>{EmployeeType}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Customer Sub Type :</b>\r\n                                  </th>\r\n                                  <td>{EmployeeSubType}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>HQ :</b>\r\n                                  </th>\r\n                                  <td>{EmployeeHQ}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Company :</b>\r\n                                  </th>\r\n                                  <td>{Company}</td>\r\n                                </tr>\r\n                              </td>\r\n                              <td style={{ borderRight: \"1px solid #7e0103\" }}>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Customer Name :</b>\r\n                                  </th>\r\n                                  <td>{EmployeeName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Email Address :</b>\r\n                                  </th>\r\n                                  <td>{EmployeeEmail}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Contact Number :</b>\r\n                                  </th>\r\n                                  <td>{ContactNumber}</td>\r\n                                </tr>\r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardBody>\r\n                  </CCard>\r\n                  <CCard>\r\n                    <CCardHeader>\r\n                      <CRow>\r\n                        <CCol col=\"4\">Order Details</CCol>\r\n                        <CCol md=\"2\">\r\n                          <CLabel>From:</CLabel>\r\n                          <CInput\r\n                            type=\"date\"\r\n                            onChange={(event) => {\r\n                              setfromDate(event.target.value);\r\n                            }}\r\n                            value={fromDate}\r\n                          />\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CLabel>To:</CLabel>\r\n                          <CInput\r\n                            type=\"date\"\r\n                            onChange={(event) => {\r\n                              settoDate(event.target.value);\r\n                            }}\r\n                            value={toDate}\r\n                          />\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CButton\r\n                            size=\"sm\"\r\n                            color=\"info\"\r\n                            style={{ marginTop: \"28px\", width: \"100%\" }}\r\n                            onClick={FilterDates}\r\n                          >\r\n                            Filter\r\n                          </CButton>\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CButton\r\n                            size=\"sm\"\r\n                            color=\"danger\"\r\n                            style={{ marginTop: \"28px\", width: \"100%\" }}\r\n                            onClick={FilterReset}\r\n                          >\r\n                            Reset\r\n                          </CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                      <CRow>\r\n                        <CCol md=\"12\">\r\n                          <div style={{ overflow: \"auto\" }}>\r\n                            <table id=\"Attendence\">\r\n                              <thead>\r\n                                <tr>\r\n                                  <th>Sl</th>\r\n                                  <th>Status</th>\r\n                                  <th>Order Date</th>\r\n                                  <th>Order Time</th>\r\n                                  <th>Customer Name</th>\r\n                                  <th>Order Items</th>\r\n                                  <th>Company</th>\r\n                                  <th>Order Number</th>\r\n                                  <th>Order By</th>\r\n                                  <th>Ordered Person</th>\r\n                                  <th>Order Type</th>\r\n                                  <th>Supply Type</th>\r\n                                  <th>Days Till Now</th>\r\n                                  <th>Billing Address</th>\r\n                                  <th>Shipping Address</th>\r\n                                  <th>Logistic</th>\r\n                                  <th>Logistic Designation</th>\r\n                                  <th>Logistic Payment Mode</th>\r\n                                  <th>Delivery Type</th>\r\n                                  <th>Cash Discount</th>\r\n                                  <th>Grand Total</th>\r\n                                  <th>Remark</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {ResponseData.map((i, index) => {\r\n                                  let cname = \"\";\r\n                                  cname =\r\n                                    '<td><span class=\"ReadyForDelivery\">Delivery Confirmed </span></td>';\r\n                                  return (\r\n                                    <tr>\r\n                                      <td>{index + 1}</td>\r\n                                      <td>\r\n                                        <div\r\n                                          dangerouslySetInnerHTML={{\r\n                                            __html: cname,\r\n                                          }}\r\n                                        />\r\n                                      </td>\r\n                                      <td>\r\n                                        {<DateFilter date={i.ORDER_DATE} />}\r\n                                      </td>\r\n                                      <td>\r\n                                        {new Date(i.clock)\r\n                                          .toISOString()\r\n                                          .split(\"T\")[1]\r\n                                          .slice(0, -1)}\r\n                                      </td>\r\n                                      <td>{i.CUSTOMER_NAME}</td>\r\n                                      <td>\r\n                                        <CButton\r\n                                          style={{ float: \"none\" }}\r\n                                          onClick={() => {\r\n                                            history.push(\"/OrderItems\", {\r\n                                              data: i,\r\n                                            });\r\n                                          }}\r\n                                        >\r\n                                          {i.ItemCount}\r\n                                        </CButton>\r\n                                      </td>\r\n                                      <td>{i.COMPANY_NAME}</td>\r\n                                      <td>{i.ORDER_NUMBER}</td>\r\n                                      <td>{i.ORDER_BY}</td>\r\n                                      <td>{i.TypeName}</td>\r\n                                      <td>{i.ORDER_TYPE_NAME}</td>\r\n                                      <td>{i.SUPPLY_NAME}</td>\r\n                                      <td>{i.HDays}</td>\r\n                                      <td>\r\n                                        <CButton\r\n                                          style={{ float: \"none\" }}\r\n                                          color=\"primary\"\r\n                                          size=\"sm\"\r\n                                          id=\"AddEmp\"\r\n                                          onClick={() => {\r\n                                            ViewBillingAddress(i.ORDER_PKID);\r\n                                          }}\r\n                                        >\r\n                                          View\r\n                                        </CButton>\r\n                                      </td>\r\n                                      <td>\r\n                                        <CButton\r\n                                          color=\"primary\"\r\n                                          size=\"sm\"\r\n                                          id=\"AddEmp\"\r\n                                          style={{ float: \"none\" }}\r\n                                          onClick={() => {\r\n                                            ViewShippingAddress(i.ORDER_PKID);\r\n                                          }}\r\n                                        >\r\n                                          View\r\n                                        </CButton>\r\n                                      </td>\r\n                                      <td>{i.ORDER_LOGISTIC}</td>\r\n                                      <td>{i.ORDER_LOGISTIC_DESTINATION}</td>\r\n                                      <td>{i.ORDER_LOGISTIC_PAY_MODE}</td>\r\n                                      <td>{i.ORDER_DELIVERY_TYPE}</td>\r\n                                      <td>{i.ORDER_CASH_DISCOUNT}</td>\r\n                                      <td>{i.ORDER_ORDER_AMOUNT}</td>\r\n                                      <td>\r\n                                        <CButton\r\n                                          color=\"primary\"\r\n                                          size=\"sm\"\r\n                                          id=\"AddEmp\"\r\n                                          style={{ float: \"none\" }}\r\n                                          onClick={() => {\r\n                                            ViewOderRemark(i.ORDER_PKID);\r\n                                          }}\r\n                                        >\r\n                                          View\r\n                                        </CButton>\r\n                                      </td>\r\n                                    </tr>\r\n                                  );\r\n                                })}\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol md=\"2\" />\r\n      </CRow>\r\n      <CModal show={block} onClose={() => setblock(!block)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Customer Billing Address</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {BillingAddress.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Billing Address\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS1}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS3}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ZIP_CODE}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock(!block)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block1} onClose={() => setblock1(!block1)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Customer Shipping Address</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {ShippingAddress.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Shipping Address\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS1}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS3}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ZIP_CODE}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock1(!block1)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block2} onClose={() => setblock2(!block2)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Order Remark</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {OrderRemark.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Remark\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.ORDER_REMARK}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock2(!block2)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesReportCustomerOrders;\r\n"],"sourceRoot":""}