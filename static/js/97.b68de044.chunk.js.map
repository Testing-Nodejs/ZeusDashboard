{"version":3,"sources":["services/service.js","views/masters/DateFilter.js","views/Reports/EmployeeOrders.js"],"names":["MyApiUrl","ViewImg","DateFilter","date","idate","Date","toISOString","split","getDate","toString","padStart","getMonth","getFullYear","EmployeeOrders","props","EmployeeType","location","state","data","propsData","EMPLOYEE_TYPE_NAME","EmployeeSubType","EMPLOYEE_SUB_TYPE_NAME","EmployeeHQ","HQ_NAME","Company","COMPANY_NAME","EmployeeName","EMPLOYEE_NAME","EmployeeEmail","EMPLOYEE_EMAIL","ContactNumber","EMPLOYEE_CONTACT","JoiningDate","EMPLOYEE_DOJ","EmployeeID","EMPLOYEE_PKID","AttendenceDate","i","MDate","idate3","AttendenceDate2","useState","ResponseData","setResponseData","block","setblock","block1","setblock1","block2","setblock2","BillingAddress","setBillingAddress","ShippingAddress","setShippingAddress","OrderRemark","setOrderRemark","React","useEffect","document","getElementById","className","axios","method","url","headers","then","response","catch","error","console","log","history","useHistory","id","md","color","size","onClick","goBack","col","cnt","csvData","Array","push","Status","map","item","ORDER_STATUS","ORDER_DATE","dateMDY","OrderTime","clock","slice","hrs","ORDER_NUMBER","ORDER_BY","TypeName","ItemCount","SUPPLY_NAME","CUSTOMER_NAME","ORDER_LOGISTIC","ORDER_LOGISTIC_DESTINATION","ORDER_LOGISTIC_PAY_MODE","ORDER_DELIVERY_TYPE","ORDER_CASH_DISCOUNT","ORDER_ORDER_AMOUNT","fileName","buffer","join","blob","Blob","type","link","createElement","undefined","download","setAttribute","window","URL","createObjectURL","style","body","appendChild","click","removeChild","navigator","msSaveBlob","marginTop","width","borderRight","overflow","index","cname","dangerouslySetInnerHTML","__html","HDays","float","pkid","ORDER_PKID","show","onClose","closeButton","Fragment","fontWeight","fontFamily","textAlign","borderBottom","paddingBottom","CUSTOMER_ADDRESS_ADDRESS1","CUSTOMER_ADDRESS_ADDRESS2","CUSTOMER_ADDRESS_ADDRESS3","CUSTOMER_ADDRESS_ZIP_CODE","ORDER_REMARK"],"mappings":"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","file":"static/js/97.b68de044.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","export default function DateFilter({ date }) {\r\n  let idate = new Date(new Date(date).toISOString().split(\"T\")[0]);\r\n  let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n    idate.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n  return dateMDY;\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-25 17:00:15\r\n * @modify date 2021-12-06 15:32:46\r\n * @desc [description]\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModal,\r\n  CButton,\r\n} from \"@coreui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MyApiUrl } from \"src/services/service\";\r\nimport DateFilter from \"../masters/DateFilter\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\n\r\nconst EmployeeOrders = (props) => {\r\n  const EmployeeType = props.location.state.data.propsData.EMPLOYEE_TYPE_NAME;\r\n  const EmployeeSubType =\r\n    props.location.state.data.propsData.EMPLOYEE_SUB_TYPE_NAME;\r\n  const EmployeeHQ = props.location.state.data.propsData.HQ_NAME;\r\n  const Company = props.location.state.data.propsData.COMPANY_NAME;\r\n  const EmployeeName = props.location.state.data.propsData.EMPLOYEE_NAME;\r\n  const EmployeeEmail = props.location.state.data.propsData.EMPLOYEE_EMAIL;\r\n  const ContactNumber = props.location.state.data.propsData.EMPLOYEE_CONTACT;\r\n  const JoiningDate = props.location.state.data.propsData.EMPLOYEE_DOJ;\r\n  const EmployeeID = props.location.state.data.propsData.EMPLOYEE_PKID;\r\n\r\n  const AttendenceDate = props.location.state.data.i.MDate;\r\n\r\n  let idate3 = new Date(\r\n    new Date(props.location.state.data.i.MDate).toISOString().split(\"T\")[0]\r\n  );\r\n  let AttendenceDate2 = `${idate3.getDate().toString().padStart(2, \"0\")}-${(\r\n    idate3.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${idate3.getFullYear()}`;\r\n\r\n  const [ResponseData, setResponseData] = useState([]);\r\n  const [block, setblock] = useState(false);\r\n  const [block1, setblock1] = useState(false);\r\n  const [block2, setblock2] = useState(false);\r\n  const [BillingAddress, setBillingAddress] = useState([]);\r\n  const [ShippingAddress, setShippingAddress] = useState([]);\r\n  const [OrderRemark, setOrderRemark] = useState([]);\r\n\r\n  const GetEmployeeOrders = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url:\r\n        MyApiUrl +\r\n        \"/getOrdersDetailsFromAttendenceDate/\" +\r\n        EmployeeID +\r\n        \"/\" +\r\n        AttendenceDate,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setResponseData(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const ViewBillingAddress = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderBillingAddress/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setBillingAddress(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock(!block);\r\n  };\r\n\r\n  const ViewShippingAddress = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderShippingAddress/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setShippingAddress(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock1(!block1);\r\n  };\r\n\r\n  const ViewOderRemark = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderRemark/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setOrderRemark(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock2(!block2);\r\n  };\r\n\r\n  const ToExcel = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    var cnt = 0;\r\n    // eslint-disable-next-line no-array-constructor\r\n    var csvData = new Array();\r\n    csvData.push(\r\n      '\"Sl No\",\"Employee Type\",\"Employee Sub Type\",\"HQ\",\"Company\",\"Employee Name\",\"Employee Email\",\"Contact Number\",\"Status\",\"Order Date\",\"Order Time\",\"Time Till Now\",\"Order Number\",\"Order By\",\"Order Placed By\",\"Order Items\",\"Supply Type\",\"Company\",\"Customer Name\",\"Logistic\",\"Logistic Designation\",\"Logistic Payment Mode\",\"Delivery Type\",\"Cash Discount\",\"Grand Total\"'\r\n    );\r\n    let Status = \"\";\r\n    ResponseData.map((item) => {\r\n      if (item.ORDER_STATUS === \"0\" || item.ORDER_STATUS === 0) {\r\n        Status = \"Pending / New\";\r\n      } else if (item.ORDER_STATUS === \"1\" || item.ORDER_STATUS === 1) {\r\n        Status = \"Approved\";\r\n      } else if (item.ORDER_STATUS === \"2\" || item.ORDER_STATUS === 2) {\r\n        Status = \"Rejected\";\r\n      } else if (item.ORDER_STATUS === \"3\" || item.ORDER_STATUS === 3) {\r\n        Status = \"Scheduling Order\";\r\n      } else if (item.ORDER_STATUS === \"4\" || item.ORDER_STATUS === 4) {\r\n        Status = \"Ready For Dispatched\";\r\n      } else if (item.ORDER_STATUS === \"5\" || item.ORDER_STATUS === 5) {\r\n        Status = \"Invoice Confirmed\";\r\n      } else if (item.ORDER_STATUS === \"6\" || item.ORDER_STATUS === 6) {\r\n        Status = \"Dispatched\";\r\n      } else if (item.ORDER_STATUS === \"7\" || item.ORDER_STATUS === 7) {\r\n        Status = \"Invoice Uploaded\";\r\n      } else if (item.ORDER_STATUS === \"8\" || item.ORDER_STATUS === 8) {\r\n        Status = \"Delivery Confirmed\";\r\n      } else {\r\n        Status = \"Rejected\";\r\n      }\r\n      let idate = new Date(\r\n        new Date(item.ORDER_DATE).toISOString().split(\"T\")[0]\r\n      );\r\n      let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n        idate.getMonth() + 1\r\n      )\r\n        .toString()\r\n        .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n\r\n      let OrderTime = new Date(item.clock)\r\n        .toISOString()\r\n        .split(\"T\")[1]\r\n        .slice(0, -1);\r\n      return (\r\n        cnt++,\r\n        csvData.push(\r\n          '\"' +\r\n            cnt +\r\n            '\",\"' +\r\n            EmployeeType +\r\n            '\",\"' +\r\n            EmployeeSubType +\r\n            '\",\"' +\r\n            EmployeeHQ +\r\n            '\",\"' +\r\n            Company +\r\n            '\",\"' +\r\n            EmployeeName +\r\n            '\",\"' +\r\n            EmployeeEmail +\r\n            '\",\"' +\r\n            ContactNumber +\r\n            '\",\"' +\r\n            Status +\r\n            '\",\"' +\r\n            dateMDY +\r\n            '\",\"' +\r\n            OrderTime +\r\n            '\",\"' +\r\n            item.hrs +\r\n            ' hrs\",\"' +\r\n            item.ORDER_NUMBER +\r\n            '\",\"' +\r\n            item.ORDER_BY +\r\n            '\",\"' +\r\n            item.TypeName +\r\n            '\",\"' +\r\n            item.ItemCount +\r\n            '\",\"' +\r\n            item.SUPPLY_NAME +\r\n            '\",\"' +\r\n            item.COMPANY_NAME +\r\n            '\",\"' +\r\n            item.CUSTOMER_NAME +\r\n            '\",\"' +\r\n            item.ORDER_LOGISTIC +\r\n            '\",\"' +\r\n            item.ORDER_LOGISTIC_DESTINATION +\r\n            '\",\"' +\r\n            item.ORDER_LOGISTIC_PAY_MODE +\r\n            '\",\"' +\r\n            item.ORDER_DELIVERY_TYPE +\r\n            '\",\"' +\r\n            item.ORDER_CASH_DISCOUNT +\r\n            '\",\"' +\r\n            item.ORDER_ORDER_AMOUNT +\r\n            '\"'\r\n        )\r\n      );\r\n    });\r\n\r\n    const fileName = \"Employee Orders List (\" + AttendenceDate2 + \").csv\";\r\n    const buffer = csvData.join(\"\\n\");\r\n    const blob = new Blob([buffer], {\r\n      type: \"text/csv;charset=utf8;\",\r\n    });\r\n\r\n    //IN IE\r\n    const link = document.createElement(\"a\");\r\n    if (link.download !== undefined) {\r\n      link.setAttribute(\"href\", window.URL.createObjectURL(blob));\r\n      link.setAttribute(\"download\", fileName);\r\n      link.style = \"visibility:hidden\";\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } else if (navigator.msSaveBlob) {\r\n      navigator.msSaveBlob(blob, fileName);\r\n    } else {\r\n    }\r\n    document.getElementById(\"divLoading\").className = \"hide\";\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    GetEmployeeOrders();\r\n  }, []);\r\n  let history = useHistory();\r\n  return (\r\n    <div>\r\n      <div id=\"divLoading\"> </div>\r\n      <h1 id=\"ccmaster\">Employee Attendance</h1>\r\n      <br />\r\n      <CRow>\r\n        <CCol md=\"2\" />\r\n        <CCol md=\"12\">\r\n          <CCard>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol md=\"1\">\r\n                  <CButton\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() => history.goBack()}\r\n                  >\r\n                    Back\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n              <br />\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>\r\n                      <CRow>\r\n                        <CCol col=\"6\">Employee Details</CCol>\r\n                        <CCol col=\"6\">\r\n                          <CButton\r\n                            onClick={ToExcel}\r\n                            color=\"primary\"\r\n                            style={{\r\n                              marginTop: \"0%\",\r\n                            }}\r\n                            size=\"sm\"\r\n                            id=\"AddEmp\"\r\n                          >\r\n                            Export To Excel\r\n                          </CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                      <CRow>\r\n                        <CCol md=\"12\">\r\n                          <table id=\"customerDetails\" style={{ width: \"100%\" }}>\r\n                            <tr>\r\n                              <td style={{ borderRight: \"1px solid #7e0103\" }}>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Employee Type :</b>\r\n                                  </th>\r\n                                  <td>{EmployeeType}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Employee Sub Type :</b>\r\n                                  </th>\r\n                                  <td>{EmployeeSubType}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>HQ :</b>\r\n                                  </th>\r\n                                  <td>{EmployeeHQ}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Company :</b>\r\n                                  </th>\r\n                                  <td>{Company}</td>\r\n                                </tr>\r\n                              </td>\r\n                              <td style={{ borderRight: \"1px solid #7e0103\" }}>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Employee Name :</b>\r\n                                  </th>\r\n                                  <td>{EmployeeName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Email Address :</b>\r\n                                  </th>\r\n                                  <td>{EmployeeEmail}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Contact Number :</b>\r\n                                  </th>\r\n                                  <td>{ContactNumber}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Joining Date :</b>\r\n                                  </th>\r\n                                  <td>{JoiningDate}</td>\r\n                                </tr>\r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardBody>\r\n                  </CCard>\r\n                  <CCard>\r\n                    <CCardHeader>\r\n                      Order Details ( {<DateFilter date={AttendenceDate} />} )\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                      <CRow>\r\n                        <CCol md=\"12\">\r\n                          <div style={{ overflow: \"auto\" }}>\r\n                            <table id=\"Attendence\">\r\n                              <thead>\r\n                                <tr>\r\n                                  <th>Sl</th>\r\n                                  <th>Status</th>\r\n                                  <th>Order Date</th>\r\n                                  <th>Order Time</th>\r\n                                  <th>Time Till Now</th>\r\n                                  <th>Days Till Now</th>\r\n                                  <th>Order Number</th>\r\n                                  <th>Order By</th>\r\n                                  <th>Order Placed By</th>\r\n                                  <th>Order Items</th>\r\n                                  <th>Supply Type</th>\r\n                                  <th>Company</th>\r\n                                  <th>Customer Name</th>\r\n                                  <th>Billing Address</th>\r\n                                  <th>Shipping Address</th>\r\n                                  <th>Logistic</th>\r\n                                  <th>Logistic Designation</th>\r\n                                  <th>Logistic Payment Mode</th>\r\n                                  <th>Delivery Type</th>\r\n                                  <th>Cash Discount</th>\r\n                                  <th>Grand Total</th>\r\n                                  <th>Remark</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {ResponseData.map((i, index) => {\r\n                                  let cname = \"\";\r\n                                  if (\r\n                                    i.ORDER_STATUS === \"0\" ||\r\n                                    i.ORDER_STATUS === 0\r\n                                  ) {\r\n                                    cname =\r\n                                      '<td><span class=\"PendingOrder\">Pending / New</span></td>';\r\n                                  } else if (\r\n                                    i.ORDER_STATUS === \"1\" ||\r\n                                    i.ORDER_STATUS === 1\r\n                                  ) {\r\n                                    cname =\r\n                                      '<td><span class=\"ApprovedOrders\"> Approved</span></td>';\r\n                                  } else if (\r\n                                    i.ORDER_STATUS === \"2\" ||\r\n                                    i.ORDER_STATUS === 2\r\n                                  ) {\r\n                                    cname =\r\n                                      '<td><span class=\"Rejected\">Rejected</span></td>';\r\n                                  } else if (\r\n                                    i.ORDER_STATUS === \"3\" ||\r\n                                    i.ORDER_STATUS === 3\r\n                                  ) {\r\n                                    cname =\r\n                                      '<td><span class=\"ScheduledOrders\">Scheduling Order</span></td>';\r\n                                  } else if (\r\n                                    i.ORDER_STATUS === \"4\" ||\r\n                                    i.ORDER_STATUS === 4\r\n                                  ) {\r\n                                    cname =\r\n                                      '<td><span class=\"ReadyForDispatchOrders\">Ready For Dispatched</span></td>';\r\n                                  } else if (\r\n                                    i.ORDER_STATUS === \"5\" ||\r\n                                    i.ORDER_STATUS === 5\r\n                                  ) {\r\n                                    cname =\r\n                                      '<td><span class=\"InvoiceOrders\">Invoice Confirmed</span></td>';\r\n                                  } else if (\r\n                                    i.ORDER_STATUS === \"6\" ||\r\n                                    i.ORDER_STATUS === 6\r\n                                  ) {\r\n                                    cname =\r\n                                      '<td><span class=\"DispatchedOrders\">Dispatched</span></td>';\r\n                                  } else if (\r\n                                    i.ORDER_STATUS === \"7\" ||\r\n                                    i.ORDER_STATUS === 7\r\n                                  ) {\r\n                                    cname =\r\n                                      '<td><span class=\"InvoiceGenerated\">Invoice Uploaded</span></td>';\r\n                                  } else if (\r\n                                    i.ORDER_STATUS === \"8\" ||\r\n                                    i.ORDER_STATUS === 8\r\n                                  ) {\r\n                                    cname =\r\n                                      '<td><span class=\"ReadyForDelivery\">Delivery Confirmed </span></td>';\r\n                                  } else {\r\n                                    cname =\r\n                                      '<td><span class=\"PendingOrder\">Rejected</span></td>';\r\n                                  }\r\n                                  return (\r\n                                    <tr>\r\n                                      <td>{index + 1}</td>\r\n                                      <td>\r\n                                        <div\r\n                                          dangerouslySetInnerHTML={{\r\n                                            __html: cname,\r\n                                          }}\r\n                                        />\r\n                                      </td>\r\n                                      <td>\r\n                                        {<DateFilter date={i.ORDER_DATE} />}\r\n                                      </td>\r\n                                      <td>\r\n                                        {new Date(i.clock)\r\n                                          .toISOString()\r\n                                          .split(\"T\")[1]\r\n                                          .slice(0, -1)}\r\n                                      </td>\r\n                                      <td>{i.hrs}hrs</td>\r\n                                      <td>{i.HDays}</td>\r\n                                      <td>{i.ORDER_NUMBER}</td>\r\n                                      <td>{i.ORDER_BY}</td>\r\n                                      <td>{i.TypeName}</td>\r\n                                      <td>\r\n                                        <CButton\r\n                                          style={{ float: \"none\" }}\r\n                                          onClick={() => {\r\n                                            history.push(\"/OrderItems\", {\r\n                                              data: i,\r\n                                            });\r\n                                          }}\r\n                                        >\r\n                                          {i.ItemCount}\r\n                                        </CButton>\r\n                                      </td>\r\n                                      <td>{i.SUPPLY_NAME}</td>\r\n                                      <td>{i.COMPANY_NAME}</td>\r\n                                      <td>{i.CUSTOMER_NAME}</td>\r\n                                      <td>\r\n                                        <CButton\r\n                                          style={{ float: \"none\" }}\r\n                                          color=\"primary\"\r\n                                          size=\"sm\"\r\n                                          id=\"AddEmp\"\r\n                                          onClick={() => {\r\n                                            ViewBillingAddress(i.ORDER_PKID);\r\n                                          }}\r\n                                        >\r\n                                          View\r\n                                        </CButton>\r\n                                      </td>\r\n                                      <td>\r\n                                        <CButton\r\n                                          color=\"primary\"\r\n                                          size=\"sm\"\r\n                                          id=\"AddEmp\"\r\n                                          style={{ float: \"none\" }}\r\n                                          onClick={() => {\r\n                                            ViewShippingAddress(i.ORDER_PKID);\r\n                                          }}\r\n                                        >\r\n                                          View\r\n                                        </CButton>\r\n                                      </td>\r\n                                      <td>{i.ORDER_LOGISTIC}</td>\r\n                                      <td>{i.ORDER_LOGISTIC_DESTINATION}</td>\r\n                                      <td>{i.ORDER_LOGISTIC_PAY_MODE}</td>\r\n                                      <td>{i.ORDER_DELIVERY_TYPE}</td>\r\n                                      <td>{i.ORDER_CASH_DISCOUNT}</td>\r\n                                      <td>{i.ORDER_ORDER_AMOUNT}</td>\r\n                                      <td>\r\n                                        <CButton\r\n                                          color=\"primary\"\r\n                                          size=\"sm\"\r\n                                          id=\"AddEmp\"\r\n                                          style={{ float: \"none\" }}\r\n                                          onClick={() => {\r\n                                            ViewOderRemark(i.ORDER_PKID);\r\n                                          }}\r\n                                        >\r\n                                          View\r\n                                        </CButton>\r\n                                      </td>\r\n                                    </tr>\r\n                                  );\r\n                                })}\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol md=\"2\" />\r\n      </CRow>\r\n      <CModal show={block} onClose={() => setblock(!block)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Customer Billing Address</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {BillingAddress.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Billing Address\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS1}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS3}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ZIP_CODE}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock(!block)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block1} onClose={() => setblock1(!block1)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Customer Shipping Address</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {ShippingAddress.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Shipping Address\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS1}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS3}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ZIP_CODE}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock1(!block1)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block2} onClose={() => setblock2(!block2)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Order Remark</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {OrderRemark.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Remark\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.ORDER_REMARK}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock2(!block2)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeOrders;\r\n"],"sourceRoot":""}