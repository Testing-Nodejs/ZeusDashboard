{"version":3,"sources":["services/service.js","views/Customer/CustomerViewProducts.js"],"names":["MyApiUrl","ViewImg","table","placeholder","label","items","values","fields2","key","fields","CustomerViewProducts","useHistory","useState","ResponseData","setResponseData","ProductPackages","setProductPackages","block","setblock","React","useEffect","document","getElementById","className","axios","method","url","headers","then","response","data","map","item","index","Company","COMPANY_NAME","Species","PRODUCT_SPECIES_NAME","PRODUCT_NAME","Code","PRODUCT_CODE","PRODUCT_BAR_CODE","catch","error","console","log","id","style","color","marginTop","col","boxShadow","hover","striped","bordered","sorter","tableFilter","itemsPerPageSelect","columnFilterSlot","size","itemsPerPage","pagination","scopedSlots","Packages","md","onClick","pkid","PRODUCT_PKID","PRD_PACKAGE_WHOLESALE_PRICE","PRD_PACKAGE_DEALER_PRICE","PRD_PACKAGE_MRP","Unit","PRD_PACKAGE_UNIT","UoM","UNIT_OF_MEASUREMENT_SHORT_KEY","i","profile","PRODUCT_IMAGE","Fragment","href","target","src","fluid","width","Catalogue","PRODUCT_CATALOGUE","show","onClose","closeButton"],"mappings":"kHAAA,oEAWE,IAAMA,EAAW,yCAEXC,EAAU,sC,gKCkBXC,EAAQ,CAAEC,YAAa,iBAAkBC,MAAO,aAChDC,EAAQ,CAAED,MAAO,QAASE,OAAQ,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,MACtDC,EAAU,CACd,CAAEC,IAAK,SACP,CAAEA,IAAK,WACP,CAAEA,IAAK,WACP,CAAEA,IAAK,gBACP,CAAEA,IAAK,QACP,CAAEA,IAAK,YACP,CAAEA,IAAK,iBACP,CAAEA,IAAK,YACP,CAAEA,IAAK,cAEHC,EAAS,CACb,CAAED,IAAK,SACP,CAAEA,IAAK,mBACP,CAAEA,IAAK,gBACP,CAAEA,IAAK,eACP,CAAEA,IAAK,QACP,CAAEA,IAAK,QA8MME,UA3Mc,WACbC,cAAd,IADiC,EAGOC,mBAAS,IAHhB,mBAG1BC,EAH0B,KAGZC,EAHY,OAIaF,mBAAS,IAJtB,mBAI1BG,EAJ0B,KAITC,EAJS,OAKPJ,oBAAS,GALF,mBAK1BK,EAL0B,KAKnBC,EALmB,KAsEjC,OAJAC,IAAMC,WAAU,WA1DfC,SAASC,eAAe,cAAcC,UAAY,OACjDC,IAAM,CACJC,OAAQ,MACRC,IAAK1B,IAAW,OAChB2B,QAAS,CACP,eAAgB,sBAGjBC,MAAK,SAACC,GACL,IAAMxB,EAAQwB,EAASC,KAAKC,KAAI,SAACC,EAAMC,GACrC,OAAO,2BACFD,GADL,IAEE,QAASC,EAAQ,EACjBC,QAASF,EAAKG,aACdC,QAASJ,EAAKK,qBACd,eAAgBL,EAAKM,aACrBC,KAAMP,EAAKQ,aACX,WAAYR,EAAKS,sBAGrB3B,EAAgBT,GAChBgB,SAASC,eAAe,cAAcC,UAAY,UAEnDmB,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAoCf,IAGD,sBAAKG,GAAG,OAAR,UACC,qBAAKA,GAAG,aAAR,eACC,oBAAIA,GAAG,WAAWC,MAAO,CAAEC,MAAO,QAAlC,2BAGA,cAAC,IAAD,CAAMD,MAAO,CAAEE,UAAW,MAA1B,SACE,cAAC,IAAD,CAAMC,IAAI,KAAV,SACA,cAAC,IAAD,CAAOH,MAAO,CAAEI,UAAW,2BAA3B,SACI,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,4BACA,cAAC,IAAD,UACE,cAAC,IAAD,CACE9C,MAAOQ,EACPJ,OAAQF,EACR6C,OAAK,EACLC,SAAO,EACPC,UAAQ,EACRC,QAAM,EACNC,YAAatD,EACbuD,mBAAoBpD,EACpBqD,kBAAgB,EAChBC,KAAK,KACLC,aAAc,GACdC,YAAU,EACVC,YAAa,CACXC,SAAU,SAAC/B,GAAD,OACR,6BACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMgC,GAAG,KAAT,SACE,cAAC,IAAD,CACEhB,MAAM,UACNW,KAAK,KACLM,QAAS,WAtEf,IAACC,IAuE2BlC,EAAKmC,aAtE5D9C,SAASC,eAAe,cAAcC,UAAY,OACjDC,IAAM,CACJC,OAAQ,MACRC,IAAK1B,IAAW,yCAA2CkE,EAC3DvC,QAAS,CACP,eAAgB,sBAGjBC,MAAK,SAACC,GACL,IAAMxB,EAAQwB,EAASC,KAAKC,KAAI,SAACC,EAAMC,GACrC,OAAO,2BACFD,GADL,IAEE,QAASC,EAAQ,EACjB,kBAAmBD,EAAKoC,4BACxB,eAAgBpC,EAAKqC,yBACrB,cAAerC,EAAKsC,gBACpBC,KAAMvC,EAAKwC,iBACXC,IAAKzC,EAAK0C,mCAGd1D,EAAmBX,GACnBgB,SAASC,eAAe,cAAcC,UAAY,UAEnDmB,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAEhBzB,GAAUD,IAwCoB,yBAaR,gBAAiB,SAAC0D,GAChB,IAAIC,EAAU,GASd,OAJEA,EAHoB,KAApBD,EAAEE,eACkB,OAApBF,EAAEE,cAEQ,cAEAF,EAAEE,cAGZ,cAAC,IAAMC,SAAP,UACE,6BACE,cAAC,IAAD,CACEC,KAAM9E,IAAU,IAAM2E,EACtBI,OAAO,SAFT,SAIE,cAAC,IAAD,CACEC,IAAKhF,IAAU,IAAM2E,EACrBM,OAAK,EACL3D,UAAU,OACVwB,MAAO,CAAEoC,MAAO,iBAO5BC,UAAW,SAACT,GAAD,OACT,cAAC,IAAMG,SAAP,UACE,6BACE,cAAC,IAAD,CACEC,KAAM9E,IAAU,IAAM0E,EAAEU,kBACxBL,OAAO,SAFT,SAIE,cAAC,IAAD,CACEhC,MAAM,UACNW,KAAK,KACLb,GAAG,SAHL,6CAqB5B,eAAC,IAAD,CAAQwC,KAAMrE,EAAOsE,QAAS,kBAAMrE,GAAUD,IAAQ+B,MAAM,OAA5D,UACE,cAAC,IAAD,CAAcwC,aAAW,EAAzB,SACE,cAAC,IAAD,iCAEF,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEnF,MAAOU,EACPN,OAAQA,EACR2C,OAAK,EACLC,SAAO,EACPC,UAAQ,EACRE,YAAatD,EACbuD,mBAAoBpD,EACpBkD,QAAM,EACNI,KAAK,KACLC,aAAc,EACdC,YAAU,QAIhB,cAAC,IAAD,UACE,cAAC,IAAD,CAASb,MAAM,YAAYiB,QAAS,kBAAM/C,GAAUD,IAApD","file":"static/js/121.cab50ebb.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-12-01 13:48:09\r\n * @modify date 2021-12-02 13:49:39\r\n * @desc [description]\r\n */\r\n\r\n import React, { useState } from \"react\";\r\n import axios from \"axios\";\r\n import {\r\n   CButton,\r\n   CCard,\r\n   CCardBody,\r\n   CCardHeader,\r\n   CCol,\r\n   CImg,\r\n   CLink,\r\n   CRow,\r\n   CDataTable,\r\n   CModal,\r\n   CModalHeader,\r\n   CModalBody,\r\n   CModalTitle,\r\n   CModalFooter,\r\n } from \"@coreui/react\";\r\n import { useHistory } from \"react-router-dom\";\r\n import { MyApiUrl, ViewImg } from \"src/services/service\";\r\n import EditIcon from \"@material-ui/icons/Edit\";\r\n import DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\n import \"../../style.css\";\r\n const table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\n const items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\n const fields2 = [\r\n   { key: \"Sl No\" },\r\n   { key: \"Company\" },\r\n   { key: \"Species\" },\r\n   { key: \"Product Name\" },\r\n   { key: \"Code\" },\r\n   { key: \"Bar Code\" },\r\n   { key: \"Product Image\" },\r\n   { key: \"Packages\" },\r\n   { key: \"Catalogue\" },\r\n ];\r\n const fields = [\r\n   { key: \"Sl No\" },\r\n   { key: \"Wholesale Price\" },\r\n   { key: \"Dealer Price\" },\r\n   { key: \"Product MRP\" },\r\n   { key: \"Unit\" },\r\n   { key: \"UoM\" },\r\n ];\r\n \r\n const CustomerViewProducts = () => {\r\n   let history = useHistory();\r\n \r\n   const [ResponseData, setResponseData] = useState([]);\r\n   const [ProductPackages, setProductPackages] = useState([]);\r\n   const [block, setblock] = useState(false);\r\n \r\n   const GetAllProducts = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n     axios({\r\n       method: \"GET\",\r\n       url: MyApiUrl + \"prod\",\r\n       headers: {\r\n         \"content-type\": \"application/json\",\r\n       },\r\n     })\r\n       .then((response) => {\r\n         const items = response.data.map((item, index) => {\r\n           return {\r\n             ...item,\r\n             \"Sl No\": index + 1,\r\n             Company: item.COMPANY_NAME,\r\n             Species: item.PRODUCT_SPECIES_NAME,\r\n             \"Product Name\": item.PRODUCT_NAME,\r\n             Code: item.PRODUCT_CODE,\r\n             \"Bar Code\": item.PRODUCT_BAR_CODE,\r\n           };\r\n         });\r\n         setResponseData(items);\r\n         document.getElementById(\"divLoading\").className = \"hide\";\r\n       })\r\n       .catch((error) => {\r\n         console.log(error);\r\n       });\r\n   };\r\n \r\n   const ViewProductPackages = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n     axios({\r\n       method: \"GET\",\r\n       url: MyApiUrl + \"getDistributerProductPackagesbyProdId/\" + pkid + \"\",\r\n       headers: {\r\n         \"content-type\": \"application/json\",\r\n       },\r\n     })\r\n       .then((response) => {\r\n         const items = response.data.map((item, index) => {\r\n           return {\r\n             ...item,\r\n             \"Sl No\": index + 1,\r\n             \"Wholesale Price\": item.PRD_PACKAGE_WHOLESALE_PRICE,\r\n             \"Dealer Price\": item.PRD_PACKAGE_DEALER_PRICE,\r\n             \"Product MRP\": item.PRD_PACKAGE_MRP,\r\n             Unit: item.PRD_PACKAGE_UNIT,\r\n             UoM: item.UNIT_OF_MEASUREMENT_SHORT_KEY,\r\n           };\r\n         });\r\n         setProductPackages(items);\r\n         document.getElementById(\"divLoading\").className = \"hide\";\r\n       })\r\n       .catch((error) => {\r\n         console.log(error);\r\n       });\r\n     setblock(!block);\r\n   };\r\n \r\n   React.useEffect(() => {\r\n     GetAllProducts();\r\n   }, []);\r\n \r\n   return (\r\n     <div id=\"city\">\r\n      <div id=\"divLoading\"> </div>\r\n       <h1 id=\"ccmaster\" style={{ color: \"#fff\" }}>\r\n         View Products\r\n       </h1>\r\n       <CRow style={{ marginTop: \"3%\" }}>\r\n         <CCol col=\"12\">\r\n         <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n             <CCardBody>\r\n               <CRow>\r\n                 <CCol>\r\n                   <CCard>\r\n                     <CCardHeader>View Products</CCardHeader>\r\n                     <CCardBody>\r\n                       <CDataTable\r\n                         items={ResponseData}\r\n                         fields={fields2}\r\n                         hover\r\n                         striped\r\n                         bordered\r\n                         sorter\r\n                         tableFilter={table}\r\n                         itemsPerPageSelect={items}\r\n                         columnFilterSlot\r\n                         size=\"sm\"\r\n                         itemsPerPage={10}\r\n                         pagination\r\n                         scopedSlots={{\r\n                           Packages: (item) => (\r\n                             <td>\r\n                               <CRow>\r\n                                 <CCol md=\"10\">\r\n                                   <CButton\r\n                                     color=\"primary\"\r\n                                     size=\"sm\"\r\n                                     onClick={() => {\r\n                                       ViewProductPackages(item.PRODUCT_PKID);\r\n                                     }}\r\n                                   >\r\n                                     View\r\n                                   </CButton>\r\n                                 </CCol>\r\n                               </CRow>\r\n                             </td>\r\n                           ),\r\n                           \"Product Image\": (i) => {\r\n                             let profile = \"\";\r\n                             if (\r\n                               i.PRODUCT_IMAGE === \"\" ||\r\n                               i.PRODUCT_IMAGE === null\r\n                             ) {\r\n                               profile = \"NoImage.png\";\r\n                             } else {\r\n                               profile = i.PRODUCT_IMAGE;\r\n                             }\r\n                             return (\r\n                               <React.Fragment>\r\n                                 <td>\r\n                                   <CLink\r\n                                     href={ViewImg + \"/\" + profile}\r\n                                     target=\"_blank\"\r\n                                   >\r\n                                     <CImg\r\n                                       src={ViewImg + \"/\" + profile}\r\n                                       fluid\r\n                                       className=\"mb-2\"\r\n                                       style={{ width: \"100%\" }}\r\n                                     />\r\n                                   </CLink>\r\n                                 </td>\r\n                               </React.Fragment>\r\n                             );\r\n                           },\r\n                           Catalogue: (i) => (\r\n                             <React.Fragment>\r\n                               <td>\r\n                                 <CLink\r\n                                   href={ViewImg + \"/\" + i.PRODUCT_CATALOGUE}\r\n                                   target=\"_blank\"\r\n                                 >\r\n                                   <CButton\r\n                                     color=\"primary\"\r\n                                     size=\"sm\"\r\n                                     id=\"AddEmp\"\r\n                                   >\r\n                                     View\r\n                                   </CButton>\r\n                                 </CLink>\r\n                               </td>\r\n                             </React.Fragment>\r\n                           ),\r\n                         }}\r\n                       />\r\n                     </CCardBody>\r\n                   </CCard>\r\n                 </CCol>\r\n               </CRow>\r\n             </CCardBody>\r\n           </CCard>\r\n         </CCol>\r\n       </CRow>\r\n       <CModal show={block} onClose={() => setblock(!block)} color=\"dark\">\r\n         <CModalHeader closeButton>\r\n           <CModalTitle>Product Packages</CModalTitle>\r\n         </CModalHeader>\r\n         <CModalBody>\r\n           <CRow>\r\n             <CDataTable\r\n               items={ProductPackages}\r\n               fields={fields}\r\n               hover\r\n               striped\r\n               bordered\r\n               tableFilter={table}\r\n               itemsPerPageSelect={items}\r\n               sorter\r\n               size=\"sm\"\r\n               itemsPerPage={4}\r\n               pagination\r\n             />\r\n           </CRow>\r\n         </CModalBody>\r\n         <CModalFooter>\r\n           <CButton color=\"secondary\" onClick={() => setblock(!block)}>\r\n             Close\r\n           </CButton>\r\n         </CModalFooter>\r\n       </CModal>\r\n     </div>\r\n   );\r\n };\r\n \r\n export default CustomerViewProducts;\r\n "],"sourceRoot":""}