{"version":3,"sources":["services/service.js","views/masters/DateFilter.js","views/Reports/EmployeeExpensesWithStatus.js"],"names":["MyApiUrl","ViewImg","DateFilter","date","idate","Date","toISOString","split","getDate","toString","padStart","getMonth","getFullYear","table","placeholder","label","items","values","fields2","key","EmployeeExpensesWithStatus","props","empid","location","state","data","EMPLOYEE_PKID","useState","ResponseData","setResponseData","React","useEffect","document","getElementById","className","axios","method","url","headers","then","response","map","item","index","Company","COMPANY_NAME","Name","EMPLOYEE_NAME","EMPLOYEE_CONTACT","EMPLOYEE_EXPENSES_TRAVEL_FROM","EMPLOYEE_EXPENSES_TRAVEL_TO","Distance","EMPLOYEE_EXPENSES_DISTANCE","Mode","EMPLOYEE_EXPENSES_MODE","EMPLOYEE_EXPENSES_DAILY_ALLOWANCE","EMPLOYEE_EXPENSES_TOTAL","catch","error","console","log","history","useHistory","id","style","marginTop","col","boxShadow","onClick","cnt","csvData","Array","push","Status","EMPLOYEE_EXPENSES_STATUS","EMPLOYEE_EXPENSES_DATE","dateMDY","fileName","buffer","join","blob","Blob","type","link","createElement","undefined","download","setAttribute","window","URL","createObjectURL","body","appendChild","click","removeChild","navigator","msSaveBlob","color","size","fields","hover","striped","bordered","sorter","tableFilter","itemsPerPageSelect","columnFilterSlot","itemsPerPage","pagination","scopedSlots","i","Documents"],"mappings":"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","file":"static/js/96.9bcb52cc.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","export default function DateFilter({ date }) {\r\n  let idate = new Date(new Date(date).toISOString().split(\"T\")[0]);\r\n  let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n    idate.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n  return dateMDY;\r\n}\r\n","/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-29 13:04:12\r\n * @modify date 2021-12-07 12:25:56\r\n * @desc [description]\r\n */\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CDataTable,\r\n} from \"@coreui/react\";\r\nimport { MyApiUrl } from \"src/services/service\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DateFilter from \"../masters/DateFilter\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields2 = [\r\n  { key: \"Status\" },\r\n  { key: \"Date\" },\r\n  { key: \"Company\" },\r\n  { key: \"Name\" },\r\n  { key: \"Contact Number\" },\r\n  { key: \"Travel From\" },\r\n  { key: \"Travel To\" },\r\n  { key: \"Distance\" },\r\n  { key: \"Mode\" },\r\n  { key: \"Daily Allowance\" },\r\n  { key: \"Total Amount\" },\r\n  { key: \"Documents\" },\r\n];\r\n\r\nconst EmployeeExpensesWithStatus = (props) => {\r\n  const empid = props.location.state.data.EMPLOYEE_PKID;\r\n  const [ResponseData, setResponseData] = useState([]);\r\n\r\n  const GetEmployeeExpensesRequest = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"AllEmpExpenses/\" + empid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const items = response.data.map((item, index) => {\r\n          return {\r\n            ...item,\r\n            Company: item.COMPANY_NAME,\r\n            Name: item.EMPLOYEE_NAME,\r\n            \"Contact Number\": item.EMPLOYEE_CONTACT,\r\n            \"Travel From\": item.EMPLOYEE_EXPENSES_TRAVEL_FROM,\r\n            \"Travel To\": item.EMPLOYEE_EXPENSES_TRAVEL_TO,\r\n            Distance: item.EMPLOYEE_EXPENSES_DISTANCE,\r\n            Mode: item.EMPLOYEE_EXPENSES_MODE,\r\n            \"Daily Allowance\": item.EMPLOYEE_EXPENSES_DAILY_ALLOWANCE,\r\n            \"Total Amount\": item.EMPLOYEE_EXPENSES_TOTAL,\r\n          };\r\n        });\r\n        setResponseData(items);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const ToExcel = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    var cnt = 0;\r\n    // eslint-disable-next-line no-array-constructor\r\n    var csvData = new Array();\r\n    csvData.push(\r\n      '\"Sl No\",\"Status\",\"Date\",\"Company\",\"Employee Name\",\"Contact Number\",\"Travel From\",\"Travel To\",\"Distance\",\"Mode\",\"Daily Allowance\",\"Total Amount\"'\r\n    );\r\n    let Status = \"\";\r\n    ResponseData.map((item) => {\r\n      if (\r\n        item.EMPLOYEE_EXPENSES_STATUS === \"0\" ||\r\n        item.EMPLOYEE_EXPENSES_STATUS === 0\r\n      ) {\r\n        Status = \"Pending\";\r\n      } else if (\r\n        item.EMPLOYEE_EXPENSES_STATUS === \"1\" ||\r\n        item.EMPLOYEE_EXPENSES_STATUS === 1\r\n      ) {\r\n        Status = \"Accepted\";\r\n      } else if (\r\n        item.EMPLOYEE_EXPENSES_STATUS === \"2\" ||\r\n        item.EMPLOYEE_EXPENSES_STATUS === 2\r\n      ) {\r\n        Status = \"Denied\";\r\n      }\r\n      let idate = new Date(\r\n        new Date(item.EMPLOYEE_EXPENSES_DATE).toISOString().split(\"T\")[0]\r\n      );\r\n      let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n        idate.getMonth() + 1\r\n      )\r\n        .toString()\r\n        .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n      return (\r\n        cnt++,\r\n        csvData.push(\r\n          '\"' +\r\n          cnt +\r\n          '\",\"' +\r\n          Status +\r\n          '\",\"' +\r\n          dateMDY +\r\n          '\",\"' +\r\n          item.COMPANY_NAME +\r\n          '\",\"' +\r\n          item.EMPLOYEE_NAME +\r\n          '\",\"' +\r\n          item.EMPLOYEE_CONTACT +\r\n          '\",\"' +\r\n          item.EMPLOYEE_EXPENSES_TRAVEL_FROM +\r\n          '\",\"' +\r\n          item.EMPLOYEE_EXPENSES_TRAVEL_TO +\r\n          '\",\"' +\r\n          item.EMPLOYEE_EXPENSES_DISTANCE +\r\n          '\",\"' +\r\n          item.EMPLOYEE_EXPENSES_MODE +\r\n          '\",\"' +\r\n          item.EMPLOYEE_EXPENSES_DAILY_ALLOWANCE +\r\n          '\",\"' +\r\n          item.EMPLOYEE_EXPENSES_TOTAL +\r\n          '\"'\r\n        )\r\n      );\r\n    });\r\n\r\n    const fileName = \"Employee Expenses.csv\";\r\n    const buffer = csvData.join(\"\\n\");\r\n    const blob = new Blob([buffer], {\r\n      type: \"text/csv;charset=utf8;\",\r\n    });\r\n\r\n    //IN IE\r\n    const link = document.createElement(\"a\");\r\n    if (link.download !== undefined) {\r\n      link.setAttribute(\"href\", window.URL.createObjectURL(blob));\r\n      link.setAttribute(\"download\", fileName);\r\n      link.style = \"visibility:hidden\";\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } else if (navigator.msSaveBlob) {\r\n      navigator.msSaveBlob(blob, fileName);\r\n    } else {\r\n    }\r\n    document.getElementById(\"divLoading\").className = \"hide\";\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    GetEmployeeExpensesRequest();\r\n  }, []);\r\n\r\n  let history = useHistory();\r\n  return (\r\n    <div id=\"city\">\r\n      <div id=\"divLoading\"> </div>\r\n      <h1 id=\"ccmaster\">Employee Expenses</h1>\r\n      <CRow style={{ marginTop: \"3%\" }}>\r\n        <CCol col=\"12\">\r\n          <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>\r\n                      <CRow>\r\n                        <CCol col=\"6\">Expenses Request</CCol>\r\n                        <CCol col=\"6\">\r\n                          <CButton\r\n                            onClick={ToExcel}\r\n                            color=\"primary\"\r\n                            style={{\r\n                              marginTop: \"0%\",\r\n                            }}\r\n                            size=\"sm\"\r\n                            id=\"AddEmp\"\r\n                          >\r\n                            Export To Excel\r\n                          </CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={ResponseData}\r\n                        fields={fields2}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPageSelect={items}\r\n                        columnFilterSlot\r\n                        size=\"sm\"\r\n                        itemsPerPage={10}\r\n                        pagination\r\n                        scopedSlots={{\r\n                          Date: (i) => (\r\n                            <td>\r\n                              {<DateFilter date={i.EMPLOYEE_EXPENSES_DATE} />}\r\n                            </td>\r\n                          ),\r\n\r\n                          Documents: (i) => (\r\n                            <td>\r\n                              <CButton\r\n                                color=\"primary\"\r\n                                size=\"sm\"\r\n                                onClick={() => {\r\n                                  history.push(\"/ExpensesDocuments\", {\r\n                                    data: i,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                View\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          Status: (item) => {\r\n                            if (\r\n                              item.EMPLOYEE_EXPENSES_STATUS === \"0\" ||\r\n                              item.EMPLOYEE_EXPENSES_STATUS === 0\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"PendingOrder\">Pending</span>\r\n                                </td>\r\n                              );\r\n                            } else if (\r\n                              item.EMPLOYEE_EXPENSES_STATUS === \"1\" ||\r\n                              item.EMPLOYEE_EXPENSES_STATUS === 1\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"ReadyForDelivery\">\r\n                                    Accepted\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else if (\r\n                              item.EMPLOYEE_EXPENSES_STATUS === \"2\" ||\r\n                              item.EMPLOYEE_EXPENSES_STATUS === 2\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"Rejected\">Denied</span>\r\n                                </td>\r\n                              );\r\n                            }\r\n                          },\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeExpensesWithStatus;\r\n"],"sourceRoot":""}