{"version":3,"sources":["services/service.js","views/masters/DateFilter.js","views/Reports/CurrentDayReport.js"],"names":["MyApiUrl","ViewImg","DateFilter","date","idate","Date","toISOString","split","getDate","toString","padStart","getMonth","getFullYear","CurrentDayReport","props","useState","ResponseData","setResponseData","fromDate","setfromDate","toDate","settoDate","kimo","setkimo","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","React","useEffect","document","getElementById","className","axios","method","url","headers","then","response","data","catch","error","console","log","GetAllAttendance","history","useHistory","id","style","marginTop","md","boxShadow","type","onChange","event","target","value","size","color","width","onClick","undefined","fire","icon","title","col","cnt","csvData","Array","push","Status","map","item","AttStatus","MDate","dateMDY","EMPLOYEE_TYPE_NAME","EMPLOYEE_SUB_TYPE_NAME","HQ_NAME","COMPANY_NAME","EMPLOYEE_NAME","EMPLOYEE_EMAIL","EMPLOYEE_CONTACT","WeekName","LoginTime","LoginLat","LoginLong","TotalOrders","VisitedCustomer","LogoutTime","LogoutLat","LogoutLong","fileName","buffer","join","blob","Blob","link","createElement","download","setAttribute","window","URL","createObjectURL","body","appendChild","click","removeChild","navigator","msSaveBlob","overflow","i","index","cname","dangerouslySetInnerHTML","__html","propsData","EMPLOYEE_DOJ","EMPLOYEE_PKID","EmpID"],"mappings":"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","file":"static/js/95.ab2c7020.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","export default function DateFilter({ date }) {\r\n  let idate = new Date(new Date(date).toISOString().split(\"T\")[0]);\r\n  let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n    idate.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n  return dateMDY;\r\n}\r\n","/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-25 17:00:15\r\n * @modify date 2021-12-06 15:32:46\r\n * @desc [description]\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CButton,\r\n  CInput,\r\n} from \"@coreui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MyApiUrl } from \"src/services/service\";\r\nimport DateFilter from \"../masters/DateFilter\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"../../style.css\";\r\n\r\nconst CurrentDayReport = (props) => {\r\n\r\n  const [ResponseData, setResponseData] = useState([]);\r\n  const [fromDate, setfromDate] = useState();\r\n  const [toDate, settoDate] = useState();\r\n  const [kimo, setkimo] = useState();\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  const GetAllAttendance = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"GetCurrentDayReport\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setResponseData(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    var months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    var date = new Date();\r\n    setkimo(months[date.getMonth()] + \" \" + date.getFullYear());\r\n  };\r\n\r\n  const FilterDates = () => {\r\n    if (fromDate === \"\" || fromDate === null || fromDate === undefined) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select From Date!\",\r\n      });\r\n    } else if (toDate === \"\" || toDate === null || toDate === undefined) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select To Date!\",\r\n      });\r\n    } else {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      setkimo(fromDate + \" TO \" + toDate);\r\n\r\n      axios({\r\n        method: \"GET\",\r\n        url: MyApiUrl + \"GetCurrentDayReportBydate/\" + fromDate + \"/\" + toDate,\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          setResponseData(response.data);\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const ToExcel = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    var cnt = 0;\r\n    // eslint-disable-next-line no-array-constructor\r\n    var csvData = new Array();\r\n    csvData.push(\r\n      '\"Sl No\",\"Employee Type\",\"Employee Sub Type\",\"HQ\",\"Company\",\"Employee Name\",\"Employee Email\",\"Contact Number\",\"Date\",\"Week Name\",\"Attendance\",\"Login Time\",\"Login Latitude\",\"Login Longitude\",\"Total Orders\",\"Visited Customers\",\"Logout Time\",\"Logout Latitude\",\"Logout Longitude\"'\r\n    );\r\n    let Status = \"\";\r\n    ResponseData.map((item) => {\r\n      if (item.AttStatus === \"0\") {\r\n        Status = \"Absent\";\r\n      } else if (item.AttStatus === \"1\") {\r\n        Status = \"Present\";\r\n      } else if (item.AttStatus === \"2\") {\r\n        Status = \"Leave\";\r\n      }\r\n      let idate = new Date(new Date(item.MDate).toISOString().split(\"T\")[0]);\r\n      let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n        idate.getMonth() + 1\r\n      )\r\n        .toString()\r\n        .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n      return (\r\n        cnt++,\r\n        csvData.push(\r\n          '\"' +\r\n            cnt +\r\n            '\",\"' +\r\n            item.EMPLOYEE_TYPE_NAME +\r\n            '\",\"' +\r\n            item.EMPLOYEE_SUB_TYPE_NAME +\r\n            '\",\"' +\r\n            item.HQ_NAME +\r\n            '\",\"' +\r\n            item.COMPANY_NAME +\r\n            '\",\"' +\r\n            item.EMPLOYEE_NAME +\r\n            '\",\"' +\r\n            item.EMPLOYEE_EMAIL +\r\n            '\",\"' +\r\n            item.EMPLOYEE_CONTACT +\r\n            '\",\"' +\r\n            dateMDY +\r\n            '\",\"' +\r\n            item.WeekName +\r\n            '\",\"' +\r\n            Status +\r\n            '\",\"' +\r\n            item.LoginTime +\r\n            '\",\"' +\r\n            item.LoginLat +\r\n            '\",\"' +\r\n            item.LoginLong +\r\n            '\",\"' +\r\n            item.TotalOrders +\r\n            '\",\"' +\r\n            item.VisitedCustomer +\r\n            '\",\"' +\r\n            item.LogoutTime +\r\n            '\",\"' +\r\n            item.LogoutLat +\r\n            '\",\"' +\r\n            item.LogoutLong +\r\n            '\"'\r\n        )\r\n      );\r\n    });\r\n\r\n    const fileName = \"Employee Attendance List ( \" + kimo + \" ).csv\";\r\n    const buffer = csvData.join(\"\\n\");\r\n    const blob = new Blob([buffer], {\r\n      type: \"text/csv;charset=utf8;\",\r\n    });\r\n\r\n    //IN IE\r\n    const link = document.createElement(\"a\");\r\n    if (link.download !== undefined) {\r\n      link.setAttribute(\"href\", window.URL.createObjectURL(blob));\r\n      link.setAttribute(\"download\", fileName);\r\n      link.style = \"visibility:hidden\";\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } else if (navigator.msSaveBlob) {\r\n      navigator.msSaveBlob(blob, fileName);\r\n    } else {\r\n    }\r\n    document.getElementById(\"divLoading\").className = \"hide\";\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    GetAllAttendance();\r\n  }, []);\r\n  let history = useHistory();\r\n  return (\r\n    <div>\r\n      <div id=\"divLoading\"> </div>\r\n      <h1 id=\"ccmaster\">Current Day Report</h1>\r\n      <CRow style={{ marginTop: \"3%\" }}>\r\n        <CCol md=\"2\" />\r\n        <CCol md=\"12\">\r\n        <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n            <CCardBody>\r\n              <br />\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>\r\n                      <CRow>\r\n                        <CCol md=\"4\">Report ( {kimo} )</CCol>\r\n                        <CCol md=\"2\">\r\n                          <CInput\r\n                            type=\"date\"\r\n                            onChange={(event) => {\r\n                              setfromDate(event.target.value);\r\n                            }}\r\n                            value={fromDate}\r\n                          />\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CInput\r\n                            type=\"date\"\r\n                            onChange={(event) => {\r\n                              settoDate(event.target.value);\r\n                            }}\r\n                            value={toDate}\r\n                          />\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CButton\r\n                            size=\"sm\"\r\n                            color=\"info\"\r\n                            style={{ width: \"100%\" }}\r\n                            onClick={FilterDates}\r\n                          >\r\n                            GET\r\n                          </CButton>\r\n                        </CCol>\r\n                        <CCol col=\"2\">\r\n                          <CButton\r\n                            onClick={ToExcel}\r\n                            color=\"primary\"\r\n                            style={{\r\n                              marginTop: \"0%\",\r\n                            }}\r\n                            size=\"sm\"\r\n                            id=\"AddEmp\"\r\n                          >\r\n                            Export To Excel\r\n                          </CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                      <CRow>\r\n                        <CCol md=\"12\">\r\n                          <div style={{ overflow: \"auto\" }}>\r\n                            <table id=\"Attendence\">\r\n                              <thead>\r\n                                <tr>\r\n                                  <th>Sl</th>\r\n                                  <th>Date</th>\r\n                                  <th>Week Name</th>\r\n                                  <th>Employee Name</th>\r\n                                  <th>Attendance</th>\r\n                                  <th>Login Time</th>\r\n                                  <th>Login Lat</th>\r\n                                  <th>Login Long</th>\r\n                                  <th>Total Orders</th>\r\n                                  <th>Visited Customers</th>\r\n                                  <th>Logout Time</th>\r\n                                  <th>Logout Lat</th>\r\n                                  <th>Logout Long</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {ResponseData.map((i, index) => {\r\n                                  let cname = \"\";\r\n                                  if (i.AttStatus === \"0\") {\r\n                                    cname = '<p class=\"absent\">Absent</p>';\r\n                                  } else if (i.AttStatus === \"1\") {\r\n                                    cname = '<p class=\"present\">Present</p>';\r\n                                  } else if (i.AttStatus === \"2\") {\r\n                                    cname = '<p class=\"leave\">Leave</p>';\r\n                                  }\r\n                                  return (\r\n                                    <tr>\r\n                                      <td>{index + 1}</td>\r\n                                      <td>{<DateFilter date={i.MDate} />}</td>\r\n                                      <td>{i.WeekName}</td>\r\n                                      <td>{i.EMPLOYEE_NAME}</td>\r\n                                      <td>\r\n                                        <div\r\n                                          dangerouslySetInnerHTML={{\r\n                                            __html: cname,\r\n                                          }}\r\n                                        />\r\n                                      </td>\r\n                                      <td>{i.LoginTime}</td>\r\n                                      <td>{i.LoginLat}</td>\r\n                                      <td>{i.LoginLong}</td>\r\n                                      <td>\r\n                                        <CButton\r\n                                          onClick={() => {\r\n                                            let propsData = {\r\n                                              EMPLOYEE_TYPE_NAME:\r\n                                                i.EMPLOYEE_TYPE_NAME,\r\n                                              EMPLOYEE_SUB_TYPE_NAME:\r\n                                                i.EMPLOYEE_SUB_TYPE_NAME,\r\n                                              HQ_NAME: i.HQ_NAME,\r\n                                              COMPANY_NAME: i.COMPANY_NAME,\r\n                                              EMPLOYEE_NAME: i.EMPLOYEE_NAME,\r\n                                              EMPLOYEE_EMAIL: i.EMPLOYEE_EMAIL,\r\n                                              EMPLOYEE_CONTACT:\r\n                                                i.EMPLOYEE_CONTACT,\r\n                                              EMPLOYEE_DOJ: i.EMPLOYEE_DOJ,\r\n                                              EMPLOYEE_PKID: i.EmpID,\r\n                                            };\r\n                                            history.push(\"/EmployeeOrders\", {\r\n                                              data: { i, propsData },\r\n                                            });\r\n                                          }}\r\n                                        >\r\n                                          {i.TotalOrders}\r\n                                        </CButton>\r\n                                      </td>\r\n                                      <td>\r\n                                        <CButton\r\n                                          onClick={() => {\r\n                                            let propsData = {\r\n                                              EMPLOYEE_TYPE_NAME:\r\n                                                i.EMPLOYEE_TYPE_NAME,\r\n                                              EMPLOYEE_SUB_TYPE_NAME:\r\n                                                i.EMPLOYEE_SUB_TYPE_NAME,\r\n                                              HQ_NAME: i.HQ_NAME,\r\n                                              COMPANY_NAME: i.COMPANY_NAME,\r\n                                              EMPLOYEE_NAME: i.EMPLOYEE_NAME,\r\n                                              EMPLOYEE_EMAIL: i.EMPLOYEE_EMAIL,\r\n                                              EMPLOYEE_CONTACT:\r\n                                                i.EMPLOYEE_CONTACT,\r\n                                              EMPLOYEE_DOJ: i.EMPLOYEE_DOJ,\r\n                                              EMPLOYEE_PKID: i.EmpID,\r\n                                            };\r\n                                            history.push(\"/VisitedCustomers\", {\r\n                                              data: { i, propsData },\r\n                                            });\r\n                                          }}\r\n                                        >\r\n                                          {i.VisitedCustomer}\r\n                                        </CButton>\r\n                                      </td>\r\n                                      <td>{i.LogoutTime}</td>\r\n                                      <td>{i.LogoutLat}</td>\r\n                                      <td>{i.LogoutLong}</td>\r\n                                    </tr>\r\n                                  );\r\n                                })}\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol md=\"2\" />\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentDayReport;\r\n"],"sourceRoot":""}