{"version":3,"sources":["services/service.js","views/masters/DateFilter.js","views/ProcessApprovedTeam/BatchNoConfirmedOrders_p.js"],"names":["MyApiUrl","ViewImg","DateFilter","date","idate","Date","toISOString","split","getDate","toString","padStart","getMonth","getFullYear","table","placeholder","label","items","values","fields2","key","BatchNoConfirmedOrders_p","useState","ResponseData","setResponseData","BillingAddress","setBillingAddress","ShippingAddress","setShippingAddress","OrderRemark","setOrderRemark","fromDate","setfromDate","Otype","setOtype","Omonth","setOmonth","toDate","settoDate","block","setblock","block1","setblock1","block2","setblock2","block3","setblock3","block4","setblock4","OrderProcessRemark","setOrderProcessRemark","OrderPkid","setOrderPkid","InvoiceNo","setInvoiceNo","InvoiceDate","setInvoiceDate","ManagerRemark","setManagerRemark","ManagerRemarkBloack","setManagerRemarkBloack","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","OderSupplyType","setOderSupplyType","GetAllScheduledOrder","document","getElementById","className","axios","method","url","headers","then","response","data","map","item","index","HDays","ORDER_NUMBER","ORDER_BY","TypeName","ORDER_TYPE_NAME","SUPPLY_NAME","Company","COMPANY_NAME","CUSTOMER_NAME","Logistic","ORDER_LOGISTIC","ORDER_LOGISTIC_DESTINATION","ORDER_LOGISTIC_PAY_MODE","ORDER_DELIVERY_TYPE","ORDER_CASH_DISCOUNT","ORDER_ORDER_AMOUNT","ORDER_TENTATIVE_DATE","catch","error","console","log","React","useEffect","params","language_code","Option","i","value","SUPPLY_TYPE_PKID","history","useHistory","id","style","marginTop","col","boxShadow","md","htmlFor","custom","name","onChange","event","target","type","size","color","width","onClick","fire","icon","title","fields","hover","striped","bordered","sorter","tableFilter","itemsPerPageSelect","itemsPerPage","pagination","scopedSlots","Action","pkid","ORDER_PKID","ORDER_DATE","clock","slice","push","ItemCount","Remark","Attachment","profile","ORD_DOC","Fragment","href","src","fluid","show","onClose","closeButton","fontWeight","fontFamily","textAlign","borderBottom","paddingBottom","CUSTOMER_ADDRESS_ADDRESS1","CUSTOMER_ADDRESS_ADDRESS2","CUSTOMER_ADDRESS_ADDRESS3","CUSTOMER_ADDRESS_ZIP_CODE","ORDER_REMARK","ORDER_REMARK_BY_PROCESSTEAM","padding","xs","obj","ORDER_INVOICE_GENERATED_DATE","ORDER_INVOICE_NUMBER","put","confirmButtonText","ORDER_MANAGER_REMARK"],"mappings":"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","file":"static/js/90.93c1c873.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","export default function DateFilter({ date }) {\r\n  let idate = new Date(new Date(date).toISOString().split(\"T\")[0]);\r\n  let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n    idate.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n  return dateMDY;\r\n}\r\n","/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-25 17:00:15\r\n * @modify date 2021-12-06 15:32:46\r\n * @desc [description]\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CRow,\r\n    CDataTable,\r\n    CButton,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModal,\r\n    CInput,\r\n    CLabel,\r\n    CSelect,\r\n    CLink,\r\n    CImg,\r\n} from \"@coreui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MyApiUrl, ViewImg } from \"src/services/service\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Swal from \"sweetalert2\";\r\nimport DateFilter from \"../masters/DateFilter\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields2 = [\r\n    { key: \"Action\" },\r\n    { key: \"Tentative Dispatched Date\" },\r\n    { key: \"Ordered Date\" },\r\n    { key: \"Ordered Time\" },\r\n    { key: \"Customer Name\" },\r\n    { key: \"Order Items\" },\r\n    { key: \"Company\" },\r\n    { key: \"Order Number\" },\r\n    { key: \"Order By\" },\r\n    { key: \"Ordered Person\" },\r\n    { key: \"Order Type\" },\r\n    { key: \"Supply Type\" },\r\n    { key: \"Day Till Now\" },\r\n    { key: \"Billing Address\" },\r\n    { key: \"Shipping Address\" },\r\n    { key: \"Logistic\" },\r\n    { key: \"Logistic Designation\" },\r\n    { key: \"Logistic Payment Mode\" },\r\n    { key: \"Delivery Type\" },\r\n    { key: \"Cash Discount\" },\r\n    { key: \"Grand Total\" },\r\n    { key: \"Attachment\" },\r\n    { key: \"Remark\" },\r\n    { key: \"Process Remark\" },\r\n    { key: \"Manager Remark\" },\r\n];\r\n\r\nconst BatchNoConfirmedOrders_p = () => {\r\n    const [ResponseData, setResponseData] = useState([]);\r\n    const [BillingAddress, setBillingAddress] = useState([]);\r\n    const [ShippingAddress, setShippingAddress] = useState([]);\r\n    const [OrderRemark, setOrderRemark] = useState([]);\r\n    const [fromDate, setfromDate] = useState();\r\n    const [Otype, setOtype] = useState();\r\n    const [Omonth, setOmonth] = useState();\r\n    const [toDate, settoDate] = useState();\r\n    const [block, setblock] = useState(false);\r\n    const [block1, setblock1] = useState(false);\r\n    const [block2, setblock2] = useState(false);\r\n    const [block3, setblock3] = useState(false);\r\n    const [block4, setblock4] = useState(false);\r\n    const [OrderProcessRemark, setOrderProcessRemark] = useState([]);\r\n    const [OrderPkid, setOrderPkid] = useState();\r\n\r\n    const [InvoiceNo, setInvoiceNo] = useState();\r\n    const [InvoiceDate, setInvoiceDate] = useState();\r\n\r\n    const [ManagerRemark, setManagerRemark] = useState([]);\r\n    const [ManagerRemarkBloack, setManagerRemarkBloack] = useState(false);\r\n\r\n    // Filters\r\n\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: \"top-end\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n        timerProgressBar: true,\r\n        didOpen: (toast) => {\r\n            toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n            toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n        },\r\n    });\r\n\r\n    const [OderSupplyType, setOderSupplyType] = useState([]);\r\n\r\n    const ViewSalesPersonRemark = (pkid) => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"OrderRemarkByManager/\" + pkid + \"\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                setManagerRemark(response.data);\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        setManagerRemarkBloack(!block2);\r\n    };\r\n\r\n    const GetAllScheduledOrder = () => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"getAllBatchNumberOrders\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                const items = response.data.map((item, index) => {\r\n                    return {\r\n                        ...item,\r\n                        \"Day Till Now\": item.HDays,\r\n                        \"Order Number\": item.ORDER_NUMBER,\r\n                        \"Order By\": item.ORDER_BY,\r\n                        \"Ordered Person\": item.TypeName,\r\n                        \"Order Type\": item.ORDER_TYPE_NAME,\r\n                        \"Supply Type\": item.SUPPLY_NAME,\r\n                        Company: item.COMPANY_NAME,\r\n                        \"Customer Name\": item.CUSTOMER_NAME,\r\n                        Logistic: item.ORDER_LOGISTIC,\r\n                        \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n                        \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n                        \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n                        \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n                        \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n                        \"Tentative Dispatched Date\": item.ORDER_TENTATIVE_DATE,\r\n                    };\r\n                });\r\n                setResponseData(items);\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const GetOrderSupplyType = () => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"OrderSupplyType\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n            params: {\r\n                language_code: \"en\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                const Option = response.data.map((item, i) => (\r\n                    <option key={i} value={item.SUPPLY_TYPE_PKID}>\r\n                        {item.SUPPLY_NAME}\r\n                    </option>\r\n                ));\r\n                setOderSupplyType(Option);\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const ViewBillingAddress = (pkid) => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"OrderBillingAddress/\" + pkid + \"\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                setBillingAddress(response.data);\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        setblock(!block);\r\n    };\r\n\r\n    const ViewShippingAddress = (pkid) => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"OrderShippingAddress/\" + pkid + \"\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                setShippingAddress(response.data);\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        setblock1(!block1);\r\n    };\r\n\r\n    const ViewOderRemark = (pkid) => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"OrderRemark/\" + pkid + \"\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                setOrderRemark(response.data);\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        setblock2(!block2);\r\n    };\r\n\r\n    const ViewOderProcessRemark = (pkid) => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"OrderProcessRemark/\" + pkid + \"\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                setOrderProcessRemark(response.data);\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        setblock3(!block3);\r\n    };\r\n\r\n    const FilterDates = () => {\r\n        if (fromDate === \"\" || fromDate == null) {\r\n            Toast.fire({\r\n                icon: \"warning\",\r\n                title: \"Select From Date!\",\r\n            });\r\n        } else if (toDate === \"\" || toDate == null) {\r\n            Toast.fire({\r\n                icon: \"warning\",\r\n                title: \"Select To Date!\",\r\n            });\r\n        } else {\r\n            document.getElementById(\"divLoading\").className = \"show\";\r\n            axios({\r\n                method: \"GET\",\r\n                url: MyApiUrl + \"getAllBatchNumberOrdersByDate/\" + fromDate + \"/\" + toDate,\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    const items = response.data.map((item, index) => {\r\n                        return {\r\n                            ...item,\r\n                            \"Day Till Now\": item.HDays,\r\n                            \"Order Number\": item.ORDER_NUMBER,\r\n                            \"Order By\": item.ORDER_BY,\r\n                            \"Ordered Person\": item.TypeName,\r\n                            \"Order Type\": item.ORDER_TYPE_NAME,\r\n                            \"Supply Type\": item.SUPPLY_NAME,\r\n                            Company: item.COMPANY_NAME,\r\n                            \"Customer Name\": item.CUSTOMER_NAME,\r\n                            Logistic: item.ORDER_LOGISTIC,\r\n                            \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n                            \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n                            \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n                            \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n                            \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n                            \"Tentative Dispatched Date\": item.ORDER_TENTATIVE_DATE,\r\n                        };\r\n                    });\r\n                    setResponseData(items);\r\n                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const FilterReset = () => {\r\n        GetAllScheduledOrder();\r\n        setfromDate(\"\");\r\n        settoDate(\"\");\r\n        setOtype(\"0\");\r\n        setOmonth(\"0\");\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        GetAllScheduledOrder();\r\n        GetOrderSupplyType();\r\n    }, []);\r\n\r\n    const ApproveOrder = (pkid) => {\r\n        setblock4(!block4);\r\n        setOrderPkid(pkid);\r\n    };\r\n\r\n    const ConfirmOrder = () => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        var obj = {\r\n            ORDER_PKID: OrderPkid,\r\n            ORDER_INVOICE_GENERATED_DATE: InvoiceDate,\r\n            ORDER_INVOICE_NUMBER: InvoiceNo,\r\n        };\r\n        axios.put(MyApiUrl + \"ConfirmForInvoiceOrders/\" + OrderPkid + \"\", obj).then((response) => {\r\n            if (response.data === true) {\r\n                Swal.fire({\r\n                    title: \"Invoice Details Confirmed\",\r\n                    icon: \"success\",\r\n                    confirmButtonText: \"OK\",\r\n                });\r\n                setblock4(!block4);\r\n                GetAllScheduledOrder();\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            } else {\r\n                Swal.fire({\r\n                    title: \"Failed To Confirm\",\r\n                    icon: \"error\",\r\n                    confirmButtonText: \"OK\",\r\n                });\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            }\r\n        });\r\n    };\r\n\r\n    let history = useHistory();\r\n    return (\r\n        <div id=\"city\">\r\n            <div id=\"divLoading\"> </div>\r\n            <h1 id=\"ccmaster\">Btach Numbers Confirmed Orders</h1>\r\n            <CRow style={{ marginTop: \"3%\" }}>\r\n                <CCol col=\"12\">\r\n                <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n                        <CCardBody>\r\n                            <CRow>\r\n                                <CCol>\r\n                                    <CCard>\r\n                                        <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol md=\"2\">\r\n                                                    <CLabel htmlFor=\"nf-email\">Select Order Type</CLabel>\r\n                                                    <CSelect\r\n                                                        custom\r\n                                                        name=\"merchant\"\r\n                                                        value={Otype}\r\n                                                        onChange={(event) => {\r\n                                                            document.getElementById(\"divLoading\").className = \"show\";\r\n                                                            axios({\r\n                                                                method: \"GET\",\r\n                                                                url:\r\n                                                                    MyApiUrl +\r\n                                                                    \"/getAllBatchNumberOrdersBySupplyType/\" +\r\n                                                                    event.target.value,\r\n                                                                headers: {\r\n                                                                    \"content-type\": \"application/json\",\r\n                                                                },\r\n                                                            })\r\n                                                                .then((response) => {\r\n                                                                    const items = response.data.map((item, index) => {\r\n                                                                        return {\r\n                                                                            ...item,\r\n                                                                            \"Day Till Now\": item.HDays,\r\n                                                                            \"Order Number\": item.ORDER_NUMBER,\r\n                                                                            \"Order By\": item.ORDER_BY,\r\n                                                                            \"Ordered Person\": item.TypeName,\r\n                                                                            \"Order Type\": item.ORDER_TYPE_NAME,\r\n                                                                            \"Supply Type\": item.SUPPLY_NAME,\r\n                                                                            Company: item.COMPANY_NAME,\r\n                                                                            \"Customer Name\": item.CUSTOMER_NAME,\r\n                                                                            Logistic: item.ORDER_LOGISTIC,\r\n                                                                            \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n                                                                            \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n                                                                            \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n                                                                            \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n                                                                            \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n                                                                            \"Tentative Dispatched Date\": item.ORDER_TENTATIVE_DATE,\r\n                                                                        };\r\n                                                                    });\r\n                                                                    setResponseData(items);\r\n                                                                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                                                                })\r\n                                                                .catch((error) => {\r\n                                                                    console.log(error);\r\n                                                                });\r\n                                                        }}\r\n                                                        id=\"merchant\"\r\n                                                    >\r\n                                                        <option value=\"0\">All</option>\r\n                                                        {OderSupplyType}\r\n                                                    </CSelect>\r\n                                                </CCol>\r\n                                                <CCol md=\"2\">\r\n                                                    <CLabel htmlFor=\"nf-email\">Select Month</CLabel>\r\n                                                    <CSelect\r\n                                                        custom\r\n                                                        name=\"Marchant\"\r\n                                                        id=\"Marchant\"\r\n                                                        value={Omonth}\r\n                                                        onChange={(event) => {\r\n                                                            document.getElementById(\"divLoading\").className = \"show\";\r\n                                                            axios({\r\n                                                                method: \"GET\",\r\n                                                                url:\r\n                                                                    MyApiUrl +\r\n                                                                    \"/getAllBatchNumberOrdersByMonth/\" +\r\n                                                                    event.target.value,\r\n                                                                headers: {\r\n                                                                    \"content-type\": \"application/json\",\r\n                                                                },\r\n                                                            })\r\n                                                                .then((response) => {\r\n                                                                    const items = response.data.map((item, index) => {\r\n                                                                        return {\r\n                                                                            ...item,\r\n                                                                            \"Day Till Now\": item.HDays,\r\n                                                                            \"Order Number\": item.ORDER_NUMBER,\r\n                                                                            \"Order By\": item.ORDER_BY,\r\n                                                                            \"Ordered Person\": item.TypeName,\r\n                                                                            \"Order Type\": item.ORDER_TYPE_NAME,\r\n                                                                            \"Supply Type\": item.SUPPLY_NAME,\r\n                                                                            Company: item.COMPANY_NAME,\r\n                                                                            \"Customer Name\": item.CUSTOMER_NAME,\r\n                                                                            Logistic: item.ORDER_LOGISTIC,\r\n                                                                            \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n                                                                            \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n                                                                            \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n                                                                            \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n                                                                            \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n                                                                        };\r\n                                                                    });\r\n                                                                    setResponseData(items);\r\n                                                                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                                                                })\r\n                                                                .catch((error) => {\r\n                                                                    console.log(error);\r\n                                                                });\r\n                                                        }}\r\n                                                    >\r\n                                                        <option value=\"0\">All</option>\r\n                                                        <option value=\"1\">Jan</option>\r\n                                                        <option value=\"2\">Feb</option>\r\n                                                        <option value=\"3\">March</option>\r\n                                                        <option value=\"4\">April</option>\r\n                                                        <option value=\"5\">May</option>\r\n                                                        <option value=\"6\">Jun</option>\r\n                                                        <option value=\"7\">Jul</option>\r\n                                                        <option value=\"8\">Aug</option>\r\n                                                        <option value=\"9\">Sept</option>\r\n                                                        <option value=\"10\">Oct</option>\r\n                                                        <option value=\"11\">Nov</option>\r\n                                                        <option value=\"12\">Dec</option>\r\n                                                    </CSelect>\r\n                                                </CCol>\r\n                                                <CCol md=\"2\">\r\n                                                    <CLabel>From:</CLabel>\r\n                                                    <CInput\r\n                                                        type=\"date\"\r\n                                                        onChange={(event) => {\r\n                                                            setfromDate(event.target.value);\r\n                                                        }}\r\n                                                        value={fromDate}\r\n                                                    />\r\n                                                </CCol>\r\n\r\n                                                <CCol md=\"2\">\r\n                                                    <CLabel>To:</CLabel>\r\n                                                    <CInput\r\n                                                        type=\"date\"\r\n                                                        onChange={(event) => {\r\n                                                            settoDate(event.target.value);\r\n                                                        }}\r\n                                                        value={toDate}\r\n                                                    />\r\n                                                </CCol>\r\n                                                <CCol md=\"2\">\r\n                                                    <CButton\r\n                                                        size=\"sm\"\r\n                                                        color=\"info\"\r\n                                                        style={{ marginTop: \"28px\", width: \"100%\" }}\r\n                                                        onClick={FilterDates}\r\n                                                    >\r\n                                                        Filter\r\n                                                    </CButton>\r\n                                                </CCol>\r\n                                                <CCol md=\"2\">\r\n                                                    <CButton\r\n                                                        size=\"sm\"\r\n                                                        color=\"danger\"\r\n                                                        style={{ marginTop: \"28px\", width: \"100%\" }}\r\n                                                        onClick={FilterReset}\r\n                                                    >\r\n                                                        Reset\r\n                                                    </CButton>\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            <hr />\r\n                                        </CCardBody>\r\n                                    </CCard>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n            </CRow>\r\n            <CRow style={{ marginTop: \"3%\" }}>\r\n                <CCol col=\"12\">\r\n                <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n                        <CCardBody>\r\n                            <CRow>\r\n                                <CCol>\r\n                                    <CCard>\r\n                                        <CCardHeader>Batch Confirmed Orders</CCardHeader>\r\n                                        <CCardBody>\r\n                                            <CDataTable\r\n                                                items={ResponseData}\r\n                                                fields={fields2}\r\n                                                hover\r\n                                                striped\r\n                                                bordered\r\n                                                sorter\r\n                                                tableFilter={table}\r\n                                                itemsPerPageSelect={items}\r\n                                                size=\"sm\"\r\n                                                itemsPerPage={10}\r\n                                                pagination\r\n                                                scopedSlots={{\r\n                                                    Action: (item) => (\r\n                                                        <td>\r\n                                                            <CButton\r\n                                                                onClick={() => {\r\n                                                                    ApproveOrder(item.ORDER_PKID);\r\n                                                                }}\r\n                                                                size=\"sm\"\r\n                                                                color=\"success\"\r\n                                                            >\r\n                                                                Confirm Invoice\r\n                                                            </CButton>\r\n                                                        </td>\r\n                                                    ),\r\n                                                    \"Ordered Date\": (i) => (\r\n                                                        <td>{<DateFilter date={i.ORDER_DATE} />}</td>\r\n                                                    ),\r\n                                                    \"Tentative Dispatched Date\": (i) => (\r\n                                                        <td>{<DateFilter date={i.ORDER_TENTATIVE_DATE} />}</td>\r\n                                                    ),\r\n                                                    \"Ordered Time\": (i) => {\r\n                                                        return (\r\n                                                            <td>\r\n                                                                {new Date(i.clock)\r\n                                                                    .toISOString()\r\n                                                                    .split(\"T\")[1]\r\n                                                                    .slice(0, -1)}\r\n                                                            </td>\r\n                                                        );\r\n                                                    },\r\n                                                    \"Order Items\": (i) => (\r\n                                                        <td>\r\n                                                            <CButton\r\n                                                                onClick={() => {\r\n                                                                    history.push(\"/OrderItems\", {\r\n                                                                        data: i,\r\n                                                                    });\r\n                                                                }}\r\n                                                            >\r\n                                                                {i.ItemCount}\r\n                                                            </CButton>\r\n                                                        </td>\r\n                                                    ),\r\n                                                    \"Billing Address\": (i) => (\r\n                                                        <td>\r\n                                                            <CRow>\r\n                                                                <CCol md=\"8\">\r\n                                                                    <CButton\r\n                                                                        color=\"primary\"\r\n                                                                        size=\"sm\"\r\n                                                                        id=\"AddEmp\"\r\n                                                                        onClick={() => {\r\n                                                                            ViewBillingAddress(i.ORDER_PKID);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        View\r\n                                                                    </CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                        </td>\r\n                                                    ),\r\n                                                    \"Manager Remark\": (i) => (\r\n                                                        <td>\r\n                                                            <CRow>\r\n                                                                <CCol md=\"8\">\r\n                                                                    <CButton\r\n                                                                        color=\"primary\"\r\n                                                                        size=\"sm\"\r\n                                                                        id=\"AddEmp\"\r\n                                                                        onClick={() => {\r\n                                                                            ViewSalesPersonRemark(i.ORDER_PKID);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        View\r\n                                                                    </CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                        </td>\r\n                                                    ),\r\n                                                    \"Shipping Address\": (i) => (\r\n                                                        <td>\r\n                                                            <CRow>\r\n                                                                <CCol md=\"8\">\r\n                                                                    <CButton\r\n                                                                        color=\"primary\"\r\n                                                                        size=\"sm\"\r\n                                                                        id=\"AddEmp\"\r\n                                                                        onClick={() => {\r\n                                                                            ViewShippingAddress(i.ORDER_PKID);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        View\r\n                                                                    </CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                        </td>\r\n                                                    ),\r\n                                                    Remark: (i) => (\r\n                                                        <td>\r\n                                                            <CRow>\r\n                                                                <CCol md=\"8\">\r\n                                                                    <CButton\r\n                                                                        color=\"primary\"\r\n                                                                        size=\"sm\"\r\n                                                                        id=\"AddEmp\"\r\n                                                                        onClick={() => {\r\n                                                                            ViewOderRemark(i.ORDER_PKID);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        View\r\n                                                                    </CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                        </td>\r\n                                                    ),\r\n                                                    \"Process Remark\": (i) => (\r\n                                                        <td>\r\n                                                            <CRow>\r\n                                                                <CCol md=\"8\">\r\n                                                                    <CButton\r\n                                                                        color=\"primary\"\r\n                                                                        size=\"sm\"\r\n                                                                        id=\"AddEmp\"\r\n                                                                        onClick={() => {\r\n                                                                            ViewOderProcessRemark(i.ORDER_PKID);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        View\r\n                                                                    </CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                        </td>\r\n                                                    ),\r\n                                                    Attachment: (i) => {\r\n                                                        let profile = \"\";\r\n                                                        if (\r\n                                                            i.ORD_DOC === \"\" ||\r\n                                                            i.ORD_DOC === null\r\n                                                        ) {\r\n                                                            profile = \"NoImage.png\";\r\n                                                        } else {\r\n                                                            profile = i.ORD_DOC;\r\n                                                        }\r\n                                                        return (\r\n                                                            <React.Fragment>\r\n                                                                <td>\r\n                                                                    <CLink\r\n                                                                        href={ViewImg + \"/\" + profile}\r\n                                                                        target=\"_blank\"\r\n                                                                    >\r\n                                                                        <CImg\r\n                                                                            src={ViewImg + \"/\" + profile}\r\n                                                                            fluid\r\n                                                                            className=\"mb-2\"\r\n                                                                            style={{ width: \"100%\" }}\r\n                                                                        />\r\n                                                                    </CLink>\r\n                                                                </td>\r\n                                                            </React.Fragment>\r\n                                                        );\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                        </CCardBody>\r\n                                    </CCard>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n            </CRow>\r\n            <CModal show={block} onClose={() => setblock(!block)} color=\"dark\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Customer Billing Address</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CRow>\r\n                        {BillingAddress.map((i) => (\r\n                            <React.Fragment>\r\n                                <CCol md=\"12\">\r\n                                    <p\r\n                                        style={{\r\n                                            fontWeight: \"700\",\r\n                                            fontFamily: \"sans-serif\",\r\n                                            textAlign: \"center\",\r\n                                            borderBottom: \"1px solid #ebedef\",\r\n                                            paddingBottom: \"5%\",\r\n                                        }}\r\n                                    >\r\n                                        Billing Address\r\n                                    </p>\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ADDRESS1}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ADDRESS2}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ADDRESS3}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ZIP_CODE}</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </CCol>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </CRow>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"secondary\" onClick={() => setblock(!block)}>\r\n                        Close\r\n                    </CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n            <CModal show={block1} onClose={() => setblock1(!block1)} color=\"dark\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Customer Shipping Address</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CRow>\r\n                        {ShippingAddress.map((i) => (\r\n                            <React.Fragment>\r\n                                <CCol md=\"12\">\r\n                                    <p\r\n                                        style={{\r\n                                            fontWeight: \"700\",\r\n                                            fontFamily: \"sans-serif\",\r\n                                            textAlign: \"center\",\r\n                                            borderBottom: \"1px solid #ebedef\",\r\n                                            paddingBottom: \"5%\",\r\n                                        }}\r\n                                    >\r\n                                        Shipping Address\r\n                                    </p>\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ADDRESS1}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ADDRESS2}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ADDRESS3}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ZIP_CODE}</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </CCol>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </CRow>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"secondary\" onClick={() => setblock1(!block1)}>\r\n                        Close\r\n                    </CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n            <CModal show={block2} onClose={() => setblock2(!block2)} color=\"dark\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Order Remark</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CRow>\r\n                        {OrderRemark.map((i) => (\r\n                            <React.Fragment>\r\n                                <CCol md=\"12\">\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td>{i.ORDER_REMARK}</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </CCol>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </CRow>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"secondary\" onClick={() => setblock2(!block2)}>\r\n                        Close\r\n                    </CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n            <CModal show={block3} onClose={() => setblock3(!block3)} color=\"dark\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Process Remark</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CRow>\r\n                        {OrderProcessRemark.map((i) => (\r\n                            <React.Fragment>\r\n                                <CCol md=\"12\">\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td>{i.ORDER_REMARK_BY_PROCESSTEAM}</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </CCol>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </CRow>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"secondary\" onClick={() => setblock3(!block3)}>\r\n                        Close\r\n                    </CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n            <CModal show={block4} onClose={() => setblock4(!block4)} color=\"dark\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Invoice Details</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CRow style={{ padding: \"0% 5% 0% 5% !important\" }}>\r\n                        <CCol xs=\"12\" md=\"12\">\r\n                            <CLabel> Invoice Number</CLabel>\r\n                            <CInput\r\n                                id=\"text-input1\"\r\n                                name=\"text-input\"\r\n                                placeholder=\"Invoice Number\"\r\n                                value={InvoiceNo}\r\n                                onChange={(event) => {\r\n                                    setInvoiceNo(event.target.value);\r\n                                }}\r\n                            />\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"12\">\r\n                            <CLabel> Invoice Date</CLabel>\r\n                            <CInput\r\n                                id=\"text-input1\"\r\n                                name=\"text-input\"\r\n                                type=\"date\"\r\n                                placeholder=\"Invoice Date\"\r\n                                value={InvoiceDate}\r\n                                onChange={(event) => {\r\n                                    setInvoiceDate(event.target.value);\r\n                                }}\r\n                            />\r\n                        </CCol>\r\n                    </CRow>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"secondary\" onClick={() => setblock4(!block4)}>\r\n                        Close\r\n                    </CButton>\r\n                    <CButton color=\"secondary\" onClick={ConfirmOrder}>\r\n                        Submit\r\n                    </CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n            <CModal show={ManagerRemarkBloack} onClose={() => setManagerRemarkBloack(!ManagerRemarkBloack)} color=\"dark\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Order Remark From Manager</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CRow>\r\n                        {ManagerRemark.map((i) => (\r\n                            <React.Fragment>\r\n                                <CCol md=\"12\">\r\n                                    <p\r\n                                        style={{\r\n                                            fontWeight: \"700\",\r\n                                            fontFamily: \"sans-serif\",\r\n                                            textAlign: \"center\",\r\n                                            borderBottom: \"1px solid #ebedef\",\r\n                                            paddingBottom: \"5%\",\r\n                                        }}\r\n                                    >\r\n                                        Remark\r\n                                    </p>\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td>{i.ORDER_MANAGER_REMARK}</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </CCol>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </CRow>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"secondary\" onClick={() => setManagerRemarkBloack(!ManagerRemarkBloack)}>\r\n                        Close\r\n                    </CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BatchNoConfirmedOrders_p;\r\n"],"sourceRoot":""}