{"version":3,"sources":["services/service.js","views/masters/DateFilter.js","services/SweetAlerts.js","views/OrderManagement/ModifiedOrders.js"],"names":["MyApiUrl","ViewImg","DateFilter","date","idate","Date","toISOString","split","getDate","toString","padStart","getMonth","getFullYear","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","table","placeholder","label","items","values","fields2","key","ModifiedOrders","useState","ResponseData","setResponseData","BillingAddress","setBillingAddress","ShippingAddress","setShippingAddress","OrderRemark","setOrderRemark","fromDate","setfromDate","Otype","setOtype","Omonth","setOmonth","toDate","settoDate","block","setblock","block1","setblock1","block2","setblock2","OderSupplyType","setOderSupplyType","GetAllPendingOrder","document","getElementById","className","axios","method","url","headers","then","response","data","map","item","index","HDays","ORDER_NUMBER","ORDER_BY","TypeName","ORDER_TYPE_NAME","SUPPLY_NAME","Company","COMPANY_NAME","CUSTOMER_NAME","Logistic","ORDER_LOGISTIC","ORDER_LOGISTIC_DESTINATION","ORDER_LOGISTIC_PAY_MODE","ORDER_DELIVERY_TYPE","ORDER_CASH_DISCOUNT","ORDER_ORDER_AMOUNT","MODIFIED_PERSON_TYPE","GetOrderSupplyType","catch","error","console","log","params","language_code","Option","i","value","SUPPLY_TYPE_PKID","React","useEffect","history","useHistory","id","style","marginTop","col","boxShadow","md","htmlFor","custom","name","onChange","event","target","type","size","color","width","onClick","fire","icon","title","fields","hover","striped","bordered","sorter","tableFilter","itemsPerPageSelect","itemsPerPage","pagination","scopedSlots","ORDER_DATE","MODIFIED_EDITED_DATE","clock","slice","push","ItemCount","pkid","ORDER_PKID","Remark","Attachment","profile","ORD_DOC","Fragment","href","src","fluid","show","onClose","closeButton","fontWeight","fontFamily","textAlign","borderBottom","paddingBottom","CUSTOMER_ADDRESS_ADDRESS1","CUSTOMER_ADDRESS_ADDRESS2","CUSTOMER_ADDRESS_ADDRESS3","CUSTOMER_ADDRESS_ZIP_CODE","ORDER_REMARK"],"mappings":"iHAAA,oEAWE,IAAMA,EAAW,yCAEXC,EAAU,sC,uDCbH,SAASC,EAAT,GAA+B,IAATC,EAAQ,EAARA,KAC/BC,EAAQ,IAAIC,KAAK,IAAIA,KAAKF,GAAMG,cAAcC,MAAM,KAAK,IAM7D,MALW,UAAMH,EAAMI,UAAUC,WAAWC,SAAS,EAAG,KAA7C,aACTN,EAAMO,WAAa,GAElBF,WACAC,SAAS,EAAG,KAJJ,YAIYN,EAAMQ,eAN/B,mC,iCCAA,wDACMC,EAAQC,IAAKC,MAAM,CACrBC,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,KACPC,kBAAkB,EAClBC,QAAS,SAACL,GACRA,EAAMM,iBAAiB,aAAcR,IAAKS,WAC1CP,EAAMM,iBAAiB,aAAcR,IAAKU,iB,4JC2B1CC,EAAQ,CAAEC,YAAa,iBAAkBC,MAAO,aAChDC,EAAQ,CAAED,MAAO,QAASE,OAAQ,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,MACtDC,EAAU,CACZ,CAAEC,IAAK,iBACP,CAAEA,IAAK,eACP,CAAEA,IAAK,mBACP,CAAEA,IAAK,gBACP,CAAEA,IAAK,gBACP,CAAEA,IAAK,iBACP,CAAEA,IAAK,eACP,CAAEA,IAAK,WACP,CAAEA,IAAK,gBACP,CAAEA,IAAK,YACP,CAAEA,IAAK,kBACP,CAAEA,IAAK,cACP,CAAEA,IAAK,eACP,CAAEA,IAAK,gBACP,CAAEA,IAAK,mBACP,CAAEA,IAAK,oBACP,CAAEA,IAAK,YACP,CAAEA,IAAK,wBACP,CAAEA,IAAK,yBACP,CAAEA,IAAK,iBACP,CAAEA,IAAK,iBACP,CAAEA,IAAK,eACP,CAAEA,IAAK,cACP,CAAEA,IAAK,WAwpBIC,UArpBQ,WAAO,IAAD,EACeC,mBAAS,IADxB,mBAClBC,EADkB,KACJC,EADI,OAEmBF,mBAAS,IAF5B,mBAElBG,EAFkB,KAEFC,EAFE,OAGqBJ,mBAAS,IAH9B,mBAGlBK,EAHkB,KAGDC,EAHC,OAIaN,mBAAS,IAJtB,mBAIlBO,EAJkB,KAILC,EAJK,OAKOR,qBALP,mBAKlBS,EALkB,KAKRC,EALQ,OAMCV,qBAND,mBAMlBW,EANkB,KAMXC,EANW,OAOGZ,qBAPH,mBAOlBa,EAPkB,KAOVC,EAPU,OAQGd,qBARH,mBAQlBe,EARkB,KAQVC,EARU,OASChB,oBAAS,GATV,mBASlBiB,EATkB,KASXC,EATW,OAUGlB,oBAAS,GAVZ,mBAUlBmB,EAVkB,KAUVC,EAVU,QAWGpB,oBAAS,GAXZ,qBAWlBqB,GAXkB,MAWVC,GAXU,SAemBtB,mBAAS,IAf5B,qBAelBuB,GAfkB,MAeFC,GAfE,MAiBnBC,GAAqB,WACvBC,SAASC,eAAe,cAAcC,UAAY,OAClDC,IAAM,CACFC,OAAQ,MACRC,IAAKhE,IAAW,eAChBiE,QAAS,CACL,eAAgB,sBAGnBC,MAAK,SAACC,GACH,IAAMvC,EAAQuC,EAASC,KAAKC,KAAI,SAACC,EAAMC,GACnC,OAAO,2BACAD,GADP,IAEI,eAAgBA,EAAKE,MACrB,eAAgBF,EAAKG,aACrB,WAAYH,EAAKI,SACjB,iBAAkBJ,EAAKK,SACvB,aAAcL,EAAKM,gBACnB,cAAeN,EAAKO,YACpBC,QAASR,EAAKS,aACd,gBAAiBT,EAAKU,cACtBC,SAAUX,EAAKY,eACf,uBAAwBZ,EAAKa,2BAC7B,wBAAyBb,EAAKc,wBAC9B,gBAAiBd,EAAKe,oBACtB,gBAAiBf,EAAKgB,oBAAsB,IAC5C,cAAehB,EAAKiB,mBACpB,cAAejB,EAAKkB,qBACpB,kBAAmBlB,EAAKK,cAGhCxC,EAAgBP,GAChB6D,KACA9B,SAASC,eAAe,cAAcC,UAAY,UAErD6B,OAAM,SAACC,GACJC,QAAQC,IAAIF,OAIlBF,GAAqB,WACvB9B,SAASC,eAAe,cAAcC,UAAY,OAClDC,IAAM,CACFC,OAAQ,MACRC,IAAKhE,IAAW,kBAChBiE,QAAS,CACL,eAAgB,oBAEpB6B,OAAQ,CACJC,cAAe,QAGlB7B,MAAK,SAACC,GACH,IAAM6B,EAAS7B,EAASC,KAAKC,KAAI,SAACC,EAAM2B,GAAP,OAC7B,wBAAgBC,MAAO5B,EAAK6B,iBAA5B,SACK7B,EAAKO,aADGoB,MAIjBxC,GAAkBuC,GAClBrC,SAASC,eAAe,cAAcC,UAAY,UAErD6B,OAAM,SAACC,GACJC,QAAQC,IAAIF,OAwHxBS,IAAMC,WAAU,WACZ3C,OACD,IACH,IAAI4C,GAAUC,cACd,OACI,sBAAKC,GAAG,OAAR,UACI,qBAAKA,GAAG,aAAR,eACA,oBAAIA,GAAG,WAAP,6BACA,cAAC,IAAD,CAAMC,MAAO,CAAEC,UAAW,MAA1B,SACI,cAAC,IAAD,CAAMC,IAAI,KAAV,SACI,cAAC,IAAD,CAAOF,MAAO,CAAEG,UAAW,2BAA3B,SACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAMC,GAAG,IAAT,UACI,cAAC,IAAD,CAAQC,QAAQ,WAAhB,+BACA,eAAC,IAAD,CACIC,QAAM,EACNC,KAAK,WACLd,MAAOtD,EACPqE,SAAU,SAACC,GACPvD,SAASC,eAAe,cAAcC,UAAY,OAClDC,IAAM,CACFC,OAAQ,MACRC,IACIhE,IACA,6BACAkH,EAAMC,OAAOjB,MACjBjC,QAAS,CACL,eAAgB,sBAGnBC,MAAK,SAACC,GACH,IAAMvC,EAAQuC,EAASC,KAAKC,KACxB,SAACC,EAAMC,GACH,OAAO,2BACAD,GADP,IAEI,eAAgBA,EAAKE,MACrB,eAAgBF,EAAKG,aACrB,WAAYH,EAAKI,SACjB,iBAAkBJ,EAAKK,SACvB,aAAcL,EAAKM,gBACnB,cAAeN,EAAKO,YACpBC,QAASR,EAAKS,aACd,gBAAiBT,EAAKU,cACtBC,SAAUX,EAAKY,eACf,uBAAwBZ,EAAKa,2BAC7B,wBAAyBb,EAAKc,wBAC9B,gBAAiBd,EAAKe,oBACtB,gBAAiBf,EAAKgB,oBAAsB,IAC5C,cAAehB,EAAKiB,mBACpB,cAAejB,EAAKkB,qBACpB,kBAAmBlB,EAAKK,cAIpCxC,EAAgBP,GAChB+B,SAASC,eAAe,cAAcC,UAAY,UAErD6B,OAAM,SAACC,GACJC,QAAQC,IAAIF,OAGxBa,GAAG,WA/CP,UAiDI,wBAAQN,MAAM,IAAd,iBACC1C,SAGT,eAAC,IAAD,CAAMqD,GAAG,IAAT,UACI,cAAC,IAAD,CAAQC,QAAQ,WAAhB,0BACA,eAAC,IAAD,CACIC,QAAM,EACNC,KAAK,WACLR,GAAG,WACHN,MAAOpD,EACPmE,SAAU,SAACC,GACPvD,SAASC,eAAe,cAAcC,UAAY,OAClDC,IAAM,CACFC,OAAQ,MACRC,IACIhE,IACA,wBACAkH,EAAMC,OAAOjB,MACjBjC,QAAS,CACL,eAAgB,sBAGnBC,MAAK,SAACC,GACH,IAAMvC,EAAQuC,EAASC,KAAKC,KACxB,SAACC,EAAMC,GACH,OAAO,2BACAD,GADP,IAEI,eAAgBA,EAAKE,MACrB,eAAgBF,EAAKG,aACrB,WAAYH,EAAKI,SACjB,iBAAkBJ,EAAKK,SACvB,aAAcL,EAAKM,gBACnB,cAAeN,EAAKO,YACpBC,QAASR,EAAKS,aACd,gBAAiBT,EAAKU,cACtBC,SAAUX,EAAKY,eACf,uBAAwBZ,EAAKa,2BAC7B,wBAAyBb,EAAKc,wBAC9B,gBAAiBd,EAAKe,oBACtB,gBAAiBf,EAAKgB,oBAAsB,IAC5C,cAAehB,EAAKiB,mBACpB,cAAejB,EAAKkB,qBACpB,kBAAmBlB,EAAKK,cAIpCxC,EAAgBP,GAChB+B,SAASC,eAAe,cAAcC,UAAY,UAErD6B,OAAM,SAACC,GACJC,QAAQC,IAAIF,OA7C5B,UAiDI,wBAAQO,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,mBACA,wBAAQA,MAAM,IAAd,mBACA,wBAAQA,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,kBACA,wBAAQA,MAAM,KAAd,iBACA,wBAAQA,MAAM,KAAd,iBACA,wBAAQA,MAAM,KAAd,uBAGR,eAAC,IAAD,CAAMW,GAAG,IAAT,UACI,cAAC,IAAD,oBACA,cAAC,IAAD,CACIO,KAAK,OACLH,SAAU,SAACC,GACPvE,EAAYuE,EAAMC,OAAOjB,QAE7BA,MAAOxD,OAIf,eAAC,IAAD,CAAMmE,GAAG,IAAT,UACI,cAAC,IAAD,kBACA,cAAC,IAAD,CACIO,KAAK,OACLH,SAAU,SAACC,GACPjE,EAAUiE,EAAMC,OAAOjB,QAE3BA,MAAOlD,OAGf,cAAC,IAAD,CAAM6D,GAAG,IAAT,SACI,cAAC,IAAD,CACIQ,KAAK,KACLC,MAAM,OACNb,MAAO,CAAEC,UAAW,OAAQa,MAAO,QACnCC,QA/NhC,WACC,KAAb9E,GAA+B,MAAZA,EACnB7B,IAAM4G,KAAK,CACPC,KAAM,UACNC,MAAO,sBAEO,KAAX3E,GAA2B,MAAVA,EACxBnC,IAAM4G,KAAK,CACPC,KAAM,UACNC,MAAO,qBAGXhE,SAASC,eAAe,cAAcC,UAAY,OAClDC,IAAM,CACFC,OAAQ,MACRC,IAAKhE,IAAW,sBAAwB0C,EAAW,IAAMM,EACzDiB,QAAS,CACL,eAAgB,sBAGnBC,MAAK,SAACC,GACH,IAAMvC,EAAQuC,EAASC,KAAKC,KAAI,SAACC,EAAMC,GACnC,OAAO,2BACAD,GADP,IAEI,eAAgBA,EAAKE,MACrB,eAAgBF,EAAKG,aACrB,WAAYH,EAAKI,SACjB,iBAAkBJ,EAAKK,SACvB,aAAcL,EAAKM,gBACnB,cAAeN,EAAKO,YACpBC,QAASR,EAAKS,aACd,gBAAiBT,EAAKU,cACtBC,SAAUX,EAAKY,eACf,uBAAwBZ,EAAKa,2BAC7B,wBAAyBb,EAAKc,wBAC9B,gBAAiBd,EAAKe,oBACtB,gBAAiBf,EAAKgB,oBAAsB,IAC5C,cAAehB,EAAKiB,mBACpB,cAAejB,EAAKkB,qBACpB,kBAAmBlB,EAAKK,cAGhCxC,EAAgBP,GAChB+B,SAASC,eAAe,cAAcC,UAAY,UAErD6B,OAAM,SAACC,GACJC,QAAQC,IAAIF,QA6KoB,sBASJ,cAAC,IAAD,CAAMkB,GAAG,IAAT,SACI,cAAC,IAAD,CACIQ,KAAK,KACLC,MAAM,SACNb,MAAO,CAAEC,UAAW,OAAQa,MAAO,QACnCC,QAtLhC,WAChB9D,KACAf,EAAY,IACZM,EAAU,IACVJ,EAAS,KACTE,EAAU,MA6KkC,wBAUR,wCAShC,cAAC,IAAD,UACI,cAAC,IAAD,CAAM4D,IAAI,KAAV,SACI,cAAC,IAAD,CAAOF,MAAO,CAAEG,UAAW,2BAA3B,SACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,iCACA,cAAC,IAAD,UACI,cAAC,IAAD,CACIhF,MAAOM,EACP0F,OAAQ9F,EACR+F,OAAK,EACLC,SAAO,EACPC,UAAQ,EACRC,QAAM,EACNC,YAAaxG,EACbyG,mBAAoBtG,EACpByF,KAAK,KACLc,aAAc,GACdC,YAAU,EACVC,YAAa,CACT,eAAgB,SAACpC,GAAD,OACZ,6BAAK,cAAC,IAAD,CAAY9F,KAAM8F,EAAEqC,gBAE7B,gBAAiB,SAACrC,GAAD,OACb,6BAAK,cAAC,IAAD,CAAY9F,KAAM8F,EAAEsC,0BAE7B,eAAgB,SAACtC,GACb,OACI,6BACK,IAAI5F,KAAK4F,EAAEuC,OACPlI,cACAC,MAAM,KAAK,GACXkI,MAAM,GAAI,MAI3B,cAAe,SAACxC,GAAD,OACX,6BACI,cAAC,IAAD,CACIuB,QAAS,WACLlB,GAAQoC,KAAK,cAAe,CACxBtE,KAAM6B,KAHlB,SAOKA,EAAE0C,eAIf,kBAAmB,SAAC1C,GAAD,OACf,6BACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAMY,GAAG,IAAT,SACI,cAAC,IAAD,CACIS,MAAM,UACND,KAAK,KACLb,GAAG,SACHgB,QAAS,WA5WlD,IAACoB,IA6W+D3C,EAAE4C,WA5WzFlF,SAASC,eAAe,cAAcC,UAAY,OAClDC,IAAM,CACFC,OAAQ,MACRC,IAAKhE,IAAW,uBAAyB4I,EACzC3E,QAAS,CACL,eAAgB,sBAGnBC,MAAK,SAACC,GACH9B,EAAkB8B,EAASC,MAC3BT,SAASC,eAAe,cAAcC,UAAY,UAErD6B,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAEpBxC,GAAUD,IAwVkD,yBAchB,mBAAoB,SAAC+C,GAAD,OAChB,6BACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAMY,GAAG,IAAT,SACI,cAAC,IAAD,CACIS,MAAM,UACND,KAAK,KACLb,GAAG,SACHgB,QAAS,WA3WjD,IAACoB,IA4W+D3C,EAAE4C,WA3W1FlF,SAASC,eAAe,cAAcC,UAAY,OAClDC,IAAM,CACFC,OAAQ,MACRC,IAAKhE,IAAW,wBAA0B4I,EAC1C3E,QAAS,CACL,eAAgB,sBAGnBC,MAAK,SAACC,GACH5B,EAAmB4B,EAASC,MAC5BT,SAASC,eAAe,cAAcC,UAAY,UAErD6B,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAEpBtC,GAAWD,IAuViD,yBAchB0F,OAAQ,SAAC7C,GAAD,OACJ,6BACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAMY,GAAG,IAAT,SACI,cAAC,IAAD,CACIS,MAAM,UACND,KAAK,KACLb,GAAG,SACHgB,QAAS,WA1WtD,IAACoB,IA2W+D3C,EAAE4C,WA1WrFlF,SAASC,eAAe,cAAcC,UAAY,OAClDC,IAAM,CACFC,OAAQ,MACRC,IAAKhE,IAAW,eAAiB4I,EACjC3E,QAAS,CACL,eAAgB,sBAGnBC,MAAK,SAACC,GACH1B,EAAe0B,EAASC,MACxBT,SAASC,eAAe,cAAcC,UAAY,UAErD6B,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAEpBpC,IAAWD,KAsViD,yBAchByF,WAAY,SAAC9C,GACT,IAAI+C,EAAU,GASd,OAJIA,EAHc,KAAd/C,EAAEgD,SACY,OAAdhD,EAAEgD,QAEQ,cAEAhD,EAAEgD,QAGZ,cAAC,IAAMC,SAAP,UACI,6BACI,cAAC,IAAD,CACIC,KAAMlJ,IAAU,IAAM+I,EACtB7B,OAAO,SAFX,SAII,cAAC,IAAD,CACIiC,IAAKnJ,IAAU,IAAM+I,EACrBK,OAAK,EACLxF,UAAU,OACV4C,MAAO,CAAEc,MAAO,qCAiBhF,eAAC,IAAD,CAAQ+B,KAAMpG,EAAOqG,QAAS,kBAAMpG,GAAUD,IAAQoE,MAAM,OAA5D,UACI,cAAC,IAAD,CAAckC,aAAW,EAAzB,SACI,cAAC,IAAD,yCAEJ,cAAC,IAAD,UACI,cAAC,IAAD,UACKpH,EAAeiC,KAAI,SAAC4B,GAAD,OAChB,cAAC,IAAMiD,SAAP,UACI,eAAC,IAAD,CAAMrC,GAAG,KAAT,UACI,mBACIJ,MAAO,CACHgD,WAAY,MACZC,WAAY,aACZC,UAAW,SACXC,aAAc,oBACdC,cAAe,MANvB,6BAWA,kCACI,6BACI,6BAAK5D,EAAE6D,8BAEX,6BACI,6BAAK7D,EAAE8D,8BAEX,6BACI,6BAAK9D,EAAE+D,8BAEX,6BACI,6BAAK/D,EAAEgE,6CAQnC,cAAC,IAAD,UACI,cAAC,IAAD,CAAS3C,MAAM,YAAYE,QAAS,kBAAMrE,GAAUD,IAApD,wBAKR,eAAC,IAAD,CAAQoG,KAAMlG,EAAQmG,QAAS,kBAAMlG,GAAWD,IAASkE,MAAM,OAA/D,UACI,cAAC,IAAD,CAAckC,aAAW,EAAzB,SACI,cAAC,IAAD,0CAEJ,cAAC,IAAD,UACI,cAAC,IAAD,UACKlH,EAAgB+B,KAAI,SAAC4B,GAAD,OACjB,cAAC,IAAMiD,SAAP,UACI,eAAC,IAAD,CAAMrC,GAAG,KAAT,UACI,mBACIJ,MAAO,CACHgD,WAAY,MACZC,WAAY,aACZC,UAAW,SACXC,aAAc,oBACdC,cAAe,MANvB,8BAWA,kCACI,6BACI,6BAAK5D,EAAE6D,8BAEX,6BACI,6BAAK7D,EAAE8D,8BAEX,6BACI,6BAAK9D,EAAE+D,8BAEX,6BACI,6BAAK/D,EAAEgE,6CAQnC,cAAC,IAAD,UACI,cAAC,IAAD,CAAS3C,MAAM,YAAYE,QAAS,kBAAMnE,GAAWD,IAArD,wBAKR,eAAC,IAAD,CAAQkG,KAAMhG,GAAQiG,QAAS,kBAAMhG,IAAWD,KAASgE,MAAM,OAA/D,UACI,cAAC,IAAD,CAAckC,aAAW,EAAzB,SACI,cAAC,IAAD,6BAEJ,cAAC,IAAD,UACI,cAAC,IAAD,UACKhH,EAAY6B,KAAI,SAAC4B,GAAD,OACb,cAAC,IAAMiD,SAAP,UACI,eAAC,IAAD,CAAMrC,GAAG,KAAT,UACI,mBACIJ,MAAO,CACHgD,WAAY,MACZC,WAAY,aACZC,UAAW,SACXC,aAAc,oBACdC,cAAe,MANvB,oBAWA,gCACI,6BACI,6BAAK5D,EAAEiE,+BAQnC,cAAC,IAAD,UACI,cAAC,IAAD,CAAS5C,MAAM,YAAYE,QAAS,kBAAMjE,IAAWD,KAArD","file":"static/js/31.7d512ecd.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","export default function DateFilter({ date }) {\r\n  let idate = new Date(new Date(date).toISOString().split(\"T\")[0]);\r\n  let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n    idate.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n  return dateMDY;\r\n}\r\n","import Swal from \"sweetalert2\";\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  export{\r\n    Toast\r\n  }","/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-25 17:00:15\r\n * @modify date 2021-12-06 15:32:46\r\n * @desc [description]\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CRow,\r\n    CDataTable,\r\n    CButton,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModal,\r\n    CLabel,\r\n    CInput,\r\n    CSelect,\r\n    CLink,\r\n    CImg,\r\n} from \"@coreui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MyApiUrl, ViewImg } from \"src/services/service\";\r\nimport { Toast } from \"src/services/SweetAlerts\";\r\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DateFilter from \"../masters/DateFilter\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields2 = [\r\n    { key: \"Modified Date\" },\r\n    { key: \"Modified By\" },\r\n    { key: \"Modified Person\" },\r\n    { key: \"Ordered Date\" },\r\n    { key: \"Ordered Time\" },\r\n    { key: \"Customer Name\" },\r\n    { key: \"Order Items\" },\r\n    { key: \"Company\" },\r\n    { key: \"Order Number\" },\r\n    { key: \"Order By\" },\r\n    { key: \"Ordered Person\" },\r\n    { key: \"Order Type\" },\r\n    { key: \"Supply Type\" },\r\n    { key: \"Day Till Now\" },\r\n    { key: \"Billing Address\" },\r\n    { key: \"Shipping Address\" },\r\n    { key: \"Logistic\" },\r\n    { key: \"Logistic Designation\" },\r\n    { key: \"Logistic Payment Mode\" },\r\n    { key: \"Delivery Type\" },\r\n    { key: \"Cash Discount\" },\r\n    { key: \"Grand Total\" },\r\n    { key: \"Attachment\" },\r\n    { key: \"Remark\" },\r\n];\r\n\r\nconst ModifiedOrders = () => {\r\n    const [ResponseData, setResponseData] = useState([]);\r\n    const [BillingAddress, setBillingAddress] = useState([]);\r\n    const [ShippingAddress, setShippingAddress] = useState([]);\r\n    const [OrderRemark, setOrderRemark] = useState([]);\r\n    const [fromDate, setfromDate] = useState();\r\n    const [Otype, setOtype] = useState();\r\n    const [Omonth, setOmonth] = useState();\r\n    const [toDate, settoDate] = useState();\r\n    const [block, setblock] = useState(false);\r\n    const [block1, setblock1] = useState(false);\r\n    const [block2, setblock2] = useState(false);\r\n\r\n    // Filters\r\n\r\n    const [OderSupplyType, setOderSupplyType] = useState([]);\r\n\r\n    const GetAllPendingOrder = () => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"getOrderLogs\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                const items = response.data.map((item, index) => {\r\n                    return {\r\n                        ...item,\r\n                        \"Day Till Now\": item.HDays,\r\n                        \"Order Number\": item.ORDER_NUMBER,\r\n                        \"Order By\": item.ORDER_BY,\r\n                        \"Ordered Person\": item.TypeName,\r\n                        \"Order Type\": item.ORDER_TYPE_NAME,\r\n                        \"Supply Type\": item.SUPPLY_NAME,\r\n                        Company: item.COMPANY_NAME,\r\n                        \"Customer Name\": item.CUSTOMER_NAME,\r\n                        Logistic: item.ORDER_LOGISTIC,\r\n                        \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n                        \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n                        \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n                        \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n                        \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n                        \"Modified By\": item.MODIFIED_PERSON_TYPE,\r\n                        \"Modified Person\": item.TypeName,\r\n                    };\r\n                });\r\n                setResponseData(items);\r\n                GetOrderSupplyType();\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const GetOrderSupplyType = () => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"OrderSupplyType\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n            params: {\r\n                language_code: \"en\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                const Option = response.data.map((item, i) => (\r\n                    <option key={i} value={item.SUPPLY_TYPE_PKID}>\r\n                        {item.SUPPLY_NAME}\r\n                    </option>\r\n                ));\r\n                setOderSupplyType(Option);\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const ViewBillingAddress = (pkid) => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"OrderBillingAddress/\" + pkid + \"\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                setBillingAddress(response.data);\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        setblock(!block);\r\n    };\r\n\r\n    const ViewShippingAddress = (pkid) => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"OrderShippingAddress/\" + pkid + \"\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                setShippingAddress(response.data);\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        setblock1(!block1);\r\n    };\r\n\r\n    const ViewOderRemark = (pkid) => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"OrderRemark/\" + pkid + \"\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                setOrderRemark(response.data);\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        setblock2(!block2);\r\n    };\r\n\r\n    const FilterDates = () => {\r\n        if (fromDate === \"\" || fromDate == null) {\r\n            Toast.fire({\r\n                icon: \"warning\",\r\n                title: \"Select From Date!\",\r\n            });\r\n        } else if (toDate === \"\" || toDate == null) {\r\n            Toast.fire({\r\n                icon: \"warning\",\r\n                title: \"Select To Date!\",\r\n            });\r\n        } else {\r\n            document.getElementById(\"divLoading\").className = \"show\";\r\n            axios({\r\n                method: \"GET\",\r\n                url: MyApiUrl + \"getOrderLogsByDate/\" + fromDate + \"/\" + toDate,\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    const items = response.data.map((item, index) => {\r\n                        return {\r\n                            ...item,\r\n                            \"Day Till Now\": item.HDays,\r\n                            \"Order Number\": item.ORDER_NUMBER,\r\n                            \"Order By\": item.ORDER_BY,\r\n                            \"Ordered Person\": item.TypeName,\r\n                            \"Order Type\": item.ORDER_TYPE_NAME,\r\n                            \"Supply Type\": item.SUPPLY_NAME,\r\n                            Company: item.COMPANY_NAME,\r\n                            \"Customer Name\": item.CUSTOMER_NAME,\r\n                            Logistic: item.ORDER_LOGISTIC,\r\n                            \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n                            \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n                            \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n                            \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n                            \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n                            \"Modified By\": item.MODIFIED_PERSON_TYPE,\r\n                            \"Modified Person\": item.TypeName,\r\n                        };\r\n                    });\r\n                    setResponseData(items);\r\n                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const FilterReset = () => {\r\n        GetAllPendingOrder();\r\n        setfromDate(\"\");\r\n        settoDate(\"\");\r\n        setOtype(\"0\");\r\n        setOmonth(\"0\");\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        GetAllPendingOrder();\r\n    }, []);\r\n    let history = useHistory();\r\n    return (\r\n        <div id=\"city\">\r\n            <div id=\"divLoading\"> </div>\r\n            <h1 id=\"ccmaster\">Modified Orders</h1>\r\n            <CRow style={{ marginTop: \"3%\" }}>\r\n                <CCol col=\"12\">\r\n                    <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n                        <CCardBody>\r\n                            <CRow>\r\n                                <CCol>\r\n                                    <CCard>\r\n                                        <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol md=\"2\">\r\n                                                    <CLabel htmlFor=\"nf-email\">Select Order Type</CLabel>\r\n                                                    <CSelect\r\n                                                        custom\r\n                                                        name=\"merchant\"\r\n                                                        value={Otype}\r\n                                                        onChange={(event) => {\r\n                                                            document.getElementById(\"divLoading\").className = \"show\";\r\n                                                            axios({\r\n                                                                method: \"GET\",\r\n                                                                url:\r\n                                                                    MyApiUrl +\r\n                                                                    \"/getOrderLogsBySupplyType/\" +\r\n                                                                    event.target.value,\r\n                                                                headers: {\r\n                                                                    \"content-type\": \"application/json\",\r\n                                                                },\r\n                                                            })\r\n                                                                .then((response) => {\r\n                                                                    const items = response.data.map(\r\n                                                                        (item, index) => {\r\n                                                                            return {\r\n                                                                                ...item,\r\n                                                                                \"Day Till Now\": item.HDays,\r\n                                                                                \"Order Number\": item.ORDER_NUMBER,\r\n                                                                                \"Order By\": item.ORDER_BY,\r\n                                                                                \"Ordered Person\": item.TypeName,\r\n                                                                                \"Order Type\": item.ORDER_TYPE_NAME,\r\n                                                                                \"Supply Type\": item.SUPPLY_NAME,\r\n                                                                                Company: item.COMPANY_NAME,\r\n                                                                                \"Customer Name\": item.CUSTOMER_NAME,\r\n                                                                                Logistic: item.ORDER_LOGISTIC,\r\n                                                                                \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n                                                                                \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n                                                                                \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n                                                                                \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n                                                                                \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n                                                                                \"Modified By\": item.MODIFIED_PERSON_TYPE,\r\n                                                                                \"Modified Person\": item.TypeName,\r\n                                                                            };\r\n                                                                        }\r\n                                                                    );\r\n                                                                    setResponseData(items);\r\n                                                                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                                                                })\r\n                                                                .catch((error) => {\r\n                                                                    console.log(error);\r\n                                                                });\r\n                                                        }}\r\n                                                        id=\"merchant\"\r\n                                                    >\r\n                                                        <option value=\"0\">All</option>\r\n                                                        {OderSupplyType}\r\n                                                    </CSelect>\r\n                                                </CCol>\r\n                                                <CCol md=\"2\">\r\n                                                    <CLabel htmlFor=\"nf-email\">Select Month</CLabel>\r\n                                                    <CSelect\r\n                                                        custom\r\n                                                        name=\"Marchant\"\r\n                                                        id=\"Marchant\"\r\n                                                        value={Omonth}\r\n                                                        onChange={(event) => {\r\n                                                            document.getElementById(\"divLoading\").className = \"show\";\r\n                                                            axios({\r\n                                                                method: \"GET\",\r\n                                                                url:\r\n                                                                    MyApiUrl +\r\n                                                                    \"/getOrderLogsByMonth/\" +\r\n                                                                    event.target.value,\r\n                                                                headers: {\r\n                                                                    \"content-type\": \"application/json\",\r\n                                                                },\r\n                                                            })\r\n                                                                .then((response) => {\r\n                                                                    const items = response.data.map(\r\n                                                                        (item, index) => {\r\n                                                                            return {\r\n                                                                                ...item,\r\n                                                                                \"Day Till Now\": item.HDays,\r\n                                                                                \"Order Number\": item.ORDER_NUMBER,\r\n                                                                                \"Order By\": item.ORDER_BY,\r\n                                                                                \"Ordered Person\": item.TypeName,\r\n                                                                                \"Order Type\": item.ORDER_TYPE_NAME,\r\n                                                                                \"Supply Type\": item.SUPPLY_NAME,\r\n                                                                                Company: item.COMPANY_NAME,\r\n                                                                                \"Customer Name\": item.CUSTOMER_NAME,\r\n                                                                                Logistic: item.ORDER_LOGISTIC,\r\n                                                                                \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n                                                                                \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n                                                                                \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n                                                                                \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n                                                                                \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n                                                                                \"Modified By\": item.MODIFIED_PERSON_TYPE,\r\n                                                                                \"Modified Person\": item.TypeName,\r\n                                                                            };\r\n                                                                        }\r\n                                                                    );\r\n                                                                    setResponseData(items);\r\n                                                                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                                                                })\r\n                                                                .catch((error) => {\r\n                                                                    console.log(error);\r\n                                                                });\r\n                                                        }}\r\n                                                    >\r\n                                                        <option value=\"0\">All</option>\r\n                                                        <option value=\"1\">Jan</option>\r\n                                                        <option value=\"2\">Feb</option>\r\n                                                        <option value=\"3\">March</option>\r\n                                                        <option value=\"4\">April</option>\r\n                                                        <option value=\"5\">May</option>\r\n                                                        <option value=\"6\">Jun</option>\r\n                                                        <option value=\"7\">Jul</option>\r\n                                                        <option value=\"8\">Aug</option>\r\n                                                        <option value=\"9\">Sept</option>\r\n                                                        <option value=\"10\">Oct</option>\r\n                                                        <option value=\"11\">Nov</option>\r\n                                                        <option value=\"12\">Dec</option>\r\n                                                    </CSelect>\r\n                                                </CCol>\r\n                                                <CCol md=\"2\">\r\n                                                    <CLabel>From:</CLabel>\r\n                                                    <CInput\r\n                                                        type=\"date\"\r\n                                                        onChange={(event) => {\r\n                                                            setfromDate(event.target.value);\r\n                                                        }}\r\n                                                        value={fromDate}\r\n                                                    />\r\n                                                </CCol>\r\n\r\n                                                <CCol md=\"2\">\r\n                                                    <CLabel>To:</CLabel>\r\n                                                    <CInput\r\n                                                        type=\"date\"\r\n                                                        onChange={(event) => {\r\n                                                            settoDate(event.target.value);\r\n                                                        }}\r\n                                                        value={toDate}\r\n                                                    />\r\n                                                </CCol>\r\n                                                <CCol md=\"2\">\r\n                                                    <CButton\r\n                                                        size=\"sm\"\r\n                                                        color=\"info\"\r\n                                                        style={{ marginTop: \"28px\", width: \"100%\" }}\r\n                                                        onClick={FilterDates}\r\n                                                    >\r\n                                                        Filter\r\n                                                    </CButton>\r\n                                                </CCol>\r\n                                                <CCol md=\"2\">\r\n                                                    <CButton\r\n                                                        size=\"sm\"\r\n                                                        color=\"danger\"\r\n                                                        style={{ marginTop: \"28px\", width: \"100%\" }}\r\n                                                        onClick={FilterReset}\r\n                                                    >\r\n                                                        Reset\r\n                                                    </CButton>\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            <hr />\r\n                                        </CCardBody>\r\n                                    </CCard>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n            </CRow>\r\n            <CRow>\r\n                <CCol col=\"12\">\r\n                    <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n                        <CCardBody>\r\n                            <CRow>\r\n                                <CCol>\r\n                                    <CCard>\r\n                                        <CCardHeader>All Modified Order</CCardHeader>\r\n                                        <CCardBody>\r\n                                            <CDataTable\r\n                                                items={ResponseData}\r\n                                                fields={fields2}\r\n                                                hover\r\n                                                striped\r\n                                                bordered\r\n                                                sorter\r\n                                                tableFilter={table}\r\n                                                itemsPerPageSelect={items}\r\n                                                size=\"sm\"\r\n                                                itemsPerPage={10}\r\n                                                pagination\r\n                                                scopedSlots={{\r\n                                                    \"Ordered Date\": (i) => (\r\n                                                        <td>{<DateFilter date={i.ORDER_DATE} />}</td>\r\n                                                    ),\r\n                                                    \"Modified Date\": (i) => (\r\n                                                        <td>{<DateFilter date={i.MODIFIED_EDITED_DATE} />}</td>\r\n                                                    ),\r\n                                                    \"Ordered Time\": (i) => {\r\n                                                        return (\r\n                                                            <td>\r\n                                                                {new Date(i.clock)\r\n                                                                    .toISOString()\r\n                                                                    .split(\"T\")[1]\r\n                                                                    .slice(0, -1)}\r\n                                                            </td>\r\n                                                        );\r\n                                                    },\r\n                                                    \"Order Items\": (i) => (\r\n                                                        <td>\r\n                                                            <CButton\r\n                                                                onClick={() => {\r\n                                                                    history.push(\"/OrderItems\", {\r\n                                                                        data: i,\r\n                                                                    });\r\n                                                                }}\r\n                                                            >\r\n                                                                {i.ItemCount}\r\n                                                            </CButton>\r\n                                                        </td>\r\n                                                    ),\r\n                                                    \"Billing Address\": (i) => (\r\n                                                        <td>\r\n                                                            <CRow>\r\n                                                                <CCol md=\"8\">\r\n                                                                    <CButton\r\n                                                                        color=\"primary\"\r\n                                                                        size=\"sm\"\r\n                                                                        id=\"AddEmp\"\r\n                                                                        onClick={() => {\r\n                                                                            ViewBillingAddress(i.ORDER_PKID);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        View\r\n                                                                    </CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                        </td>\r\n                                                    ),\r\n                                                    \"Shipping Address\": (i) => (\r\n                                                        <td>\r\n                                                            <CRow>\r\n                                                                <CCol md=\"8\">\r\n                                                                    <CButton\r\n                                                                        color=\"primary\"\r\n                                                                        size=\"sm\"\r\n                                                                        id=\"AddEmp\"\r\n                                                                        onClick={() => {\r\n                                                                            ViewShippingAddress(i.ORDER_PKID);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        View\r\n                                                                    </CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                        </td>\r\n                                                    ),\r\n                                                    Remark: (i) => (\r\n                                                        <td>\r\n                                                            <CRow>\r\n                                                                <CCol md=\"8\">\r\n                                                                    <CButton\r\n                                                                        color=\"primary\"\r\n                                                                        size=\"sm\"\r\n                                                                        id=\"AddEmp\"\r\n                                                                        onClick={() => {\r\n                                                                            ViewOderRemark(i.ORDER_PKID);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        View\r\n                                                                    </CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                        </td>\r\n                                                    ),\r\n                                                    Attachment: (i) => {\r\n                                                        let profile = \"\";\r\n                                                        if (\r\n                                                            i.ORD_DOC === \"\" ||\r\n                                                            i.ORD_DOC === null\r\n                                                        ) {\r\n                                                            profile = \"NoImage.png\";\r\n                                                        } else {\r\n                                                            profile = i.ORD_DOC;\r\n                                                        }\r\n                                                        return (\r\n                                                            <React.Fragment>\r\n                                                                <td>\r\n                                                                    <CLink\r\n                                                                        href={ViewImg + \"/\" + profile}\r\n                                                                        target=\"_blank\"\r\n                                                                    >\r\n                                                                        <CImg\r\n                                                                            src={ViewImg + \"/\" + profile}\r\n                                                                            fluid\r\n                                                                            className=\"mb-2\"\r\n                                                                            style={{ width: \"100%\" }}\r\n                                                                        />\r\n                                                                    </CLink>\r\n                                                                </td>\r\n                                                            </React.Fragment>\r\n                                                        );\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                        </CCardBody>\r\n                                    </CCard>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n            </CRow>\r\n            <CModal show={block} onClose={() => setblock(!block)} color=\"dark\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Customer Billing Address</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CRow>\r\n                        {BillingAddress.map((i) => (\r\n                            <React.Fragment>\r\n                                <CCol md=\"12\">\r\n                                    <p\r\n                                        style={{\r\n                                            fontWeight: \"700\",\r\n                                            fontFamily: \"sans-serif\",\r\n                                            textAlign: \"center\",\r\n                                            borderBottom: \"1px solid #ebedef\",\r\n                                            paddingBottom: \"5%\",\r\n                                        }}\r\n                                    >\r\n                                        Billing Address\r\n                                    </p>\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ADDRESS1}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ADDRESS2}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ADDRESS3}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ZIP_CODE}</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </CCol>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </CRow>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"secondary\" onClick={() => setblock(!block)}>\r\n                        Close\r\n                    </CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n            <CModal show={block1} onClose={() => setblock1(!block1)} color=\"dark\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Customer Shipping Address</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CRow>\r\n                        {ShippingAddress.map((i) => (\r\n                            <React.Fragment>\r\n                                <CCol md=\"12\">\r\n                                    <p\r\n                                        style={{\r\n                                            fontWeight: \"700\",\r\n                                            fontFamily: \"sans-serif\",\r\n                                            textAlign: \"center\",\r\n                                            borderBottom: \"1px solid #ebedef\",\r\n                                            paddingBottom: \"5%\",\r\n                                        }}\r\n                                    >\r\n                                        Shipping Address\r\n                                    </p>\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ADDRESS1}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ADDRESS2}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ADDRESS3}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ZIP_CODE}</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </CCol>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </CRow>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"secondary\" onClick={() => setblock1(!block1)}>\r\n                        Close\r\n                    </CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n            <CModal show={block2} onClose={() => setblock2(!block2)} color=\"dark\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Order Remark</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CRow>\r\n                        {OrderRemark.map((i) => (\r\n                            <React.Fragment>\r\n                                <CCol md=\"12\">\r\n                                    <p\r\n                                        style={{\r\n                                            fontWeight: \"700\",\r\n                                            fontFamily: \"sans-serif\",\r\n                                            textAlign: \"center\",\r\n                                            borderBottom: \"1px solid #ebedef\",\r\n                                            paddingBottom: \"5%\",\r\n                                        }}\r\n                                    >\r\n                                        Remark\r\n                                    </p>\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td>{i.ORDER_REMARK}</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </CCol>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </CRow>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"secondary\" onClick={() => setblock2(!block2)}>\r\n                        Close\r\n                    </CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModifiedOrders;\r\n"],"sourceRoot":""}