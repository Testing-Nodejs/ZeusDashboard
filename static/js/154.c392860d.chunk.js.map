{"version":3,"sources":["views/EmployeeMaster/EmployeeTarget.js"],"names":["table","placeholder","label","items","values","fields1","key","DistrictMaster","useState","TargetPKID","setTargetPKID","CompanyData","setCompanyData","EmployeeData","setEmployeeData","TargetData","setTargetData","SelectedCompany","setSelectedCompany","SelectedEmployee","setSelectedEmployee","Year","setYear","Month","setMonth","Amount","setAmount","AddButton","setAddButton","UpdateButton","setUpdateButton","Monthselection","setMonthselection","TargetEmpType","setTargetEmpType","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","AddTarget","fire","icon","title","document","getElementById","className","obj","axios","post","MyApiUrl","then","response","data","confirmButtonText","Reset","GetTarget","checked","UpdateTarget","put","GetCompany","method","url","headers","CountryOption","map","item","value","COMPANY_PKID","COMPANY_NAME","StateOption","EMPLOYEE_PKID","EMPLOYEE_NAME","catch","error","console","log","Company","Employee","TARGET_AMOUNT","TARGET_YEAR","EMPLOYEE_TYPE_NAME","EMPLOYEE_SUB_TYPE_NAME","TARGET_TYPE","TARGET_MONTH_START","React","useEffect","Updatebtn","type","onClick","size","id","Addbtn","ViewMonthOrYear","e","target","MonthSel","Fragment","row","xs","md","name","onChange","event","test","style","marginTop","sm","lg","xl","boxShadow","action","encType","custom","paddingBottom","col","fields","hover","striped","bordered","sorter","tableFilter","itemsPerPageSelect","itemsPerPage","pagination","scopedSlots","Action","CompanyID","EmployeeID","month","EditTarget","TARGET_PKID","TARGET_COMP_FKID","TARGET_EMP_FKID","status","confirm"],"mappings":"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","file":"static/js/154.c392860d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CForm,\r\n    CFormGroup,\r\n    CInput,\r\n    CSelect,\r\n    CRow,\r\n    CDataTable,\r\n    CLabel,\r\n} from \"@coreui/react\";\r\nimport { MyApiUrl } from \"src/services/service\";\r\nimport Swal from \"sweetalert2\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\nimport \"../../style.css\";\r\nimport \"../../RadioButtons.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields1 = [{ key: \"Action\" }, { key: \"Company\" }, { key: \"Employee\" }, { key: \"Amount\" }, { key: \"Year\" }, { key: \"Type\" }, { key: \"Month\" }, { key: \"Employee Type\" }, { key: \"Employee Sub Type\" }];\r\n\r\nconst DistrictMaster = () => {\r\n\r\n    const [TargetPKID, setTargetPKID] = useState();\r\n    const [CompanyData, setCompanyData] = useState([]);\r\n    const [EmployeeData, setEmployeeData] = useState([]);\r\n    const [TargetData, setTargetData] = useState([]);\r\n    const [SelectedCompany, setSelectedCompany] = useState(\"-1\");\r\n    const [SelectedEmployee, setSelectedEmployee] = useState(\"-1\");\r\n    const [Year, setYear] = useState();\r\n    const [Month, setMonth] = useState(0);\r\n    const [Amount, setAmount] = useState();\r\n    const [AddButton, setAddButton] = useState(true);\r\n    const [UpdateButton, setUpdateButton] = useState(false);\r\n    const [Monthselection, setMonthselection] = useState(false);\r\n    const [TargetEmpType, setTargetEmpType] = useState(\"\");\r\n\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: \"top-end\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n        timerProgressBar: true,\r\n        didOpen: (toast) => {\r\n            toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n            toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n        },\r\n    });\r\n\r\n    const CompanyChange = (event) => {\r\n        setSelectedCompany(event.target.value);\r\n    };\r\n\r\n    const GetEmployee = (cid) => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"emps\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                const StateOption = response.data.map((item) => (\r\n                    <option value={item.EMPLOYEE_PKID}>{item.EMPLOYEE_NAME}</option>\r\n                ));\r\n                setEmployeeData(StateOption);\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const EmployeeChange = (event) => {\r\n        setSelectedEmployee(event.target.value);\r\n    };\r\n\r\n    const AddTarget = () => {\r\n        if (SelectedCompany === \"-1\") {\r\n            Toast.fire({\r\n                icon: \"warning\",\r\n                title: \"Please Select Company!\",\r\n            });\r\n        } else if (SelectedEmployee === \"-1\") {\r\n            Toast.fire({\r\n                icon: \"warning\",\r\n                title: \"Please Select Employee!\",\r\n            });\r\n        } else if (Amount === \"\" || Amount == null) {\r\n            Toast.fire({\r\n                icon: \"warning\",\r\n                title: \"Please Enter Target Amount!\",\r\n            });\r\n        } else if (Year === \"\" || Year == null) {\r\n            Toast.fire({\r\n                icon: \"warning\",\r\n                title: \"Please Enter Year!\",\r\n            });\r\n        } else {\r\n            document.getElementById(\"divLoading\").className = \"show\";\r\n            const obj = {\r\n                \"TARGET_COMP_FKID\": SelectedCompany,\r\n                \"TARGET_EMP_FKID\": SelectedEmployee,\r\n                \"TARGET_AMOUNT\": Amount,\r\n                \"TARGET_YEAR\": Year,\r\n                \"TARGET_MONTH_START\": Month,\r\n                \"TARGET_TYPE\": TargetEmpType,\r\n            };\r\n            axios.post(MyApiUrl + \"targets\", obj).then((response) => {\r\n                if (response.data === \"0\") {\r\n                    Swal.fire({\r\n                        title: \"Target Already Assigned!\",\r\n                        icon: \"info\",\r\n                        confirmButtonText: \"OK\",\r\n                    });\r\n                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                } else if (response.data === true) {\r\n                    Swal.fire({\r\n                        title: \"Target Assigned Successfully!\",\r\n                        icon: \"success\",\r\n                        confirmButtonText: \"OK\",\r\n                    });\r\n                    Reset();\r\n                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                } else if (response.data === false) {\r\n                    Swal.fire({\r\n                        title: \"Failed To Assign Target!\",\r\n                        icon: \"error\",\r\n                        confirmButtonText: \"OK\",\r\n                    });\r\n                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const Reset = () => {\r\n        GetTarget();\r\n        setSelectedCompany(\"-1\");\r\n        setSelectedEmployee(\"-1\");\r\n        setAmount(\"\");\r\n        setYear(\"\");\r\n        setMonth(\"\");\r\n        setAddButton(true);\r\n        setUpdateButton(false);\r\n        document.getElementById(\"monthly\").checked = false;\r\n        document.getElementById(\"yearly\").checked = false;\r\n    }\r\n\r\n    const EditTarget = (id, CompanyID, EmployeeID, Amount, type, month, Year) => {\r\n        if (type === \"Monthly\") {\r\n            document.getElementById(\"monthly\").checked = true;\r\n            document.getElementById(\"yearly\").checked = false;\r\n            setMonthselection(true);\r\n\r\n        } else {\r\n            document.getElementById(\"monthly\").checked = false;\r\n            document.getElementById(\"yearly\").checked = true;\r\n            setMonthselection(false);\r\n        }\r\n        setTargetPKID(id);\r\n        setSelectedCompany(CompanyID);\r\n        setSelectedEmployee(EmployeeID);\r\n        setAmount(Amount);\r\n        setYear(Year);\r\n        setTargetEmpType(type);\r\n        setMonth(month);\r\n        setAddButton(false);\r\n        setUpdateButton(true);\r\n    };\r\n\r\n    const UpdateTarget = () => {\r\n        if (SelectedCompany === \"-1\") {\r\n            Toast.fire({\r\n                icon: \"warning\",\r\n                title: \"Please Select Company!\",\r\n            });\r\n        } else if (SelectedEmployee === \"-1\") {\r\n            Toast.fire({\r\n                icon: \"warning\",\r\n                title: \"Please Select Employee!\",\r\n            });\r\n        } else if (Amount === \"\" || Amount == null) {\r\n            Toast.fire({\r\n                icon: \"warning\",\r\n                title: \"Please Enter Target Amount!\",\r\n            });\r\n        } else if (Year === \"\" || Year == null) {\r\n            Toast.fire({\r\n                icon: \"warning\",\r\n                title: \"Please Enter Year!\",\r\n            });\r\n        } else {\r\n            document.getElementById(\"divLoading\").className = \"show\";\r\n            const obj = {\r\n                \"TARGET_COMP_FKID\": SelectedCompany,\r\n                \"TARGET_EMP_FKID\": SelectedEmployee,\r\n                \"TARGET_AMOUNT\": Amount,\r\n                \"TARGET_YEAR\": Year,\r\n                \"TARGET_MONTH_START\": Month,\r\n                \"TARGET_TYPE\": TargetEmpType,\r\n            };\r\n\r\n            axios.put(MyApiUrl + \"targets/\" + TargetPKID + \"\", obj).then((response) => {\r\n                if (response.data === true) {\r\n                    Swal.fire({\r\n                        title: \"Target Assigned Successfully!\",\r\n                        icon: \"success\",\r\n                        confirmButtonText: \"OK\",\r\n                    });\r\n                    Reset();\r\n                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                } else if (response.data === false) {\r\n                    Swal.fire({\r\n                        title: \"Failed To Assign Target!\",\r\n                        icon: \"error\",\r\n                        confirmButtonText: \"OK\",\r\n                    });\r\n                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const DeleteTarget = (id) => {\r\n        // eslint-disable-next-line no-restricted-globals\r\n        var res = confirm(\"Are you sure you want to delete\");\r\n        if (res) {\r\n            document.getElementById(\"divLoading\").className = \"show\";\r\n            axios({\r\n                method: \"DELETE\",\r\n                url: MyApiUrl + \"targets/\" + id + \"\",\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    if (response.data === true) {\r\n                        Swal.fire({\r\n                            title: \"Selected Target Deleted!\",\r\n                            icon: \"success\",\r\n                            confirmButtonText: \"OK\",\r\n                        });\r\n                        GetTarget();\r\n                        document.getElementById(\"divLoading\").className = \"hide\";\r\n                    } else {\r\n                        Swal.fire({\r\n                            title: \"Failed To Delete Target!\",\r\n                            icon: \"error\",\r\n                            confirmButtonText: \"OK\",\r\n                        });\r\n                        document.getElementById(\"divLoading\").className = \"hide\";\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const GetCompany = () => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"companies\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                const CountryOption = response.data.map((item) => (\r\n                    <option value={item.COMPANY_PKID}>{item.COMPANY_NAME}</option>\r\n                ));\r\n                setCompanyData(CountryOption);\r\n                GetEmployee();\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const GetTarget = () => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"targets\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                const items = response.data.map((item) => {\r\n                    return {\r\n                        ...item,\r\n                        Company: item.COMPANY_NAME,\r\n                        Employee: item.EMPLOYEE_NAME,\r\n                        Amount: item.TARGET_AMOUNT,\r\n                        Year: item.TARGET_YEAR,\r\n                        \"Employee Type\": item.EMPLOYEE_TYPE_NAME,\r\n                        \"Employee Sub Type\": item.EMPLOYEE_SUB_TYPE_NAME,\r\n                        \"Type\": item.TARGET_TYPE,\r\n                        \"Month\": item.TARGET_MONTH_START,\r\n                    };\r\n                });\r\n                setTargetData(items);\r\n                GetCompany();\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        GetTarget();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const Updatebtn = () => (\r\n        <CButton type=\"button\" onClick={UpdateTarget} size=\"md\" id=\"Add-btn\">\r\n            Update\r\n        </CButton>\r\n    );\r\n\r\n    const Addbtn = () => (\r\n        <CButton type=\"button\" onClick={AddTarget} size=\"md\" id=\"Add-btn\">\r\n            Add\r\n        </CButton>\r\n    );\r\n\r\n    const ViewMonthOrYear = (e) => {\r\n        let val = e.target.value;\r\n        if (val === \"monthly\") {\r\n            setMonthselection(true);\r\n            setTargetEmpType(\"Monthly\");\r\n        } else {\r\n            setMonthselection(false);\r\n            setTargetEmpType(\"Regular\");\r\n            setMonth(\"0\");\r\n        }\r\n    };\r\n\r\n    const MonthSel = () => (\r\n        <React.Fragment>\r\n            <CFormGroup row>\r\n                <CCol xs=\"12\" md=\"12\">\r\n                    <CLabel>Month</CLabel>\r\n                    <CInput\r\n                        id=\"text-input\"\r\n                        name=\"text-input\"\r\n                        placeholder=\"Month Number\"\r\n                        value={Month}\r\n                        onChange={(event) => {\r\n                            const re = /^[0-9\\b]+$/;\r\n                            if (\r\n                                event.target.value === \"\" ||\r\n                                re.test(event.target.value)\r\n                            ) {\r\n                                setMonth(event.target.value);\r\n                            }\r\n                        }}\r\n                    />\r\n                </CCol>\r\n            </CFormGroup>\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <div id=\"state\">\r\n            <div id=\"divLoading\"> </div>\r\n            <h1 id=\"ccmaster\">Target Master</h1>\r\n            <CRow style={{ marginTop: \"3%\" }}>\r\n                <CCol sm=\"12\" md=\"12\" lg=\"4\" xl=\"4\" className=\"mb-3 mb-xl-0\">\r\n                    <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n                        <CCardBody>\r\n                            <CRow>\r\n                                <CCol>\r\n                                    <CCard>\r\n                                        <CCardHeader>Add Employee Target</CCardHeader>\r\n                                        <CCardBody>\r\n                                            <CForm\r\n                                                action=\"\"\r\n                                                method=\"post\"\r\n                                                encType=\"multipart/form-data\"\r\n                                                className=\"form-horizontal\"\r\n                                            >\r\n                                                <CFormGroup row>\r\n                                                    <CCol xs=\"12\" md=\"12\">\r\n                                                        <CLabel>Select Company</CLabel>\r\n                                                        <CSelect\r\n                                                            custom\r\n                                                            name=\"Country\"\r\n                                                            id=\"Country\"\r\n                                                            onChange={CompanyChange}\r\n                                                            value={SelectedCompany}\r\n                                                        >\r\n                                                            <option value=\"-1\">Select Company</option>\r\n                                                            {CompanyData}\r\n                                                        </CSelect>\r\n                                                    </CCol>\r\n                                                </CFormGroup>\r\n                                                <CFormGroup row>\r\n                                                    <CCol xs=\"12\" md=\"12\">\r\n                                                        <CLabel>Select Employee</CLabel>\r\n                                                        <CSelect\r\n                                                            custom\r\n                                                            name=\"Country\"\r\n                                                            id=\"Country\"\r\n                                                            onChange={EmployeeChange}\r\n                                                            value={SelectedEmployee}\r\n                                                        >\r\n                                                            <option value=\"-1\">Select Employee</option>\r\n                                                            {EmployeeData}\r\n                                                        </CSelect>\r\n                                                    </CCol>\r\n                                                </CFormGroup>\r\n                                                <CFormGroup row>\r\n                                                    <CCol xs=\"12\" md=\"12\">\r\n                                                        <CLabel>Target Amount</CLabel>\r\n                                                        <CInput\r\n                                                            id=\"text-input\"\r\n                                                            name=\"text-input\"\r\n                                                            placeholder=\"Amount\"\r\n                                                            value={Amount}\r\n                                                            onChange={(event) => {\r\n                                                                const re = /^[0-9\\b]+$/;\r\n                                                                if (\r\n                                                                    event.target.value === \"\" ||\r\n                                                                    re.test(event.target.value)\r\n                                                                ) {\r\n                                                                    setAmount(event.target.value);\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </CCol>\r\n                                                </CFormGroup>\r\n                                                <CFormGroup row>\r\n                                                    <CCol xs=\"12\" md=\"12\">\r\n                                                        <CLabel>Year</CLabel>\r\n                                                        <CInput\r\n                                                            id=\"text-input\"\r\n                                                            name=\"text-input\"\r\n                                                            placeholder=\"YYYY\"\r\n                                                            value={Year}\r\n                                                            onChange={(event) => {\r\n                                                                const re = /^[0-9\\b]+$/;\r\n                                                                if (\r\n                                                                    event.target.value === \"\" ||\r\n                                                                    re.test(event.target.value)\r\n                                                                ) {\r\n                                                                    setYear(event.target.value);\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </CCol>\r\n                                                </CFormGroup>\r\n                                                <CFormGroup row>\r\n                                                    <CCol xs=\"12\" md=\"12\" style={{ marginTop: \"5%\", paddingBottom: \"3%\" }}>\r\n                                                        <CRow>\r\n                                                            <CCol md=\"6\">\r\n                                                                <label>\r\n                                                                    <input\r\n                                                                        type=\"radio\"\r\n                                                                        name=\"radio\"\r\n                                                                        id=\"yearly\"\r\n                                                                        onChange={ViewMonthOrYear}\r\n                                                                        value=\"yearly\"\r\n                                                                    />\r\n                                                                    <span>Regular</span>\r\n                                                                </label>\r\n                                                            </CCol>\r\n                                                            <CCol md=\"6\">\r\n                                                                <label>\r\n                                                                    <input\r\n                                                                        type=\"radio\"\r\n                                                                        name=\"radio\"\r\n                                                                        id=\"monthly\"\r\n                                                                        onChange={ViewMonthOrYear}\r\n                                                                        value=\"monthly\"\r\n                                                                    />\r\n                                                                    <span>Other</span>\r\n                                                                </label>\r\n                                                            </CCol>\r\n                                                        </CRow>\r\n                                                    </CCol>\r\n                                                </CFormGroup>\r\n                                                {Monthselection && <MonthSel />}\r\n                                            </CForm>\r\n                                            {AddButton && <Addbtn />}\r\n                                            {UpdateButton && <Updatebtn />}\r\n                                        </CCardBody>\r\n                                    </CCard>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n\r\n                <CCol col=\"10\">\r\n                    <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n                        <CCardBody>\r\n                            <CRow>\r\n                                <CCol>\r\n                                    <CCard>\r\n                                        <CCardHeader>Added Targets</CCardHeader>\r\n                                        <CCardBody>\r\n                                            <CDataTable\r\n                                                items={TargetData}\r\n                                                fields={fields1}\r\n                                                hover\r\n                                                striped\r\n                                                bordered\r\n                                                sorter\r\n                                                tableFilter={table}\r\n                                                size=\"sm\"\r\n                                                itemsPerPageSelect={items}\r\n                                                itemsPerPage={10}\r\n                                                pagination\r\n                                                scopedSlots={{\r\n                                                    Action: (item) => (\r\n                                                        <td>\r\n                                                            <CButton\r\n                                                                size=\"sm\"\r\n                                                                onClick={() => {\r\n                                                                    EditTarget(\r\n                                                                        item.TARGET_PKID,\r\n                                                                        item.TARGET_COMP_FKID,\r\n                                                                        item.TARGET_EMP_FKID,\r\n                                                                        item.TARGET_AMOUNT,\r\n                                                                        item.TARGET_TYPE,\r\n                                                                        item.TARGET_MONTH_START,\r\n                                                                        item.TARGET_YEAR\r\n                                                                    );\r\n                                                                }}\r\n                                                                id=\"war-btn\"\r\n                                                            >\r\n                                                                <EditIcon />\r\n                                                                {item.status}\r\n                                                            </CButton>\r\n                                                            <CButton\r\n                                                                size=\"sm\"\r\n                                                                onClick={() => {\r\n                                                                    DeleteTarget(item.TARGET_PKID);\r\n                                                                }}\r\n                                                                id=\"war-btn1\"\r\n                                                            >\r\n                                                                <DeleteSharpIcon />\r\n                                                                {item.status}\r\n                                                            </CButton>\r\n                                                        </td>\r\n                                                    ),\r\n                                                }}\r\n                                            />\r\n                                        </CCardBody>\r\n                                    </CCard>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n            </CRow>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DistrictMaster;\r\n"],"sourceRoot":""}