{"version":3,"sources":["services/service.js","views/masters/DateFilter.js","views/EmployeeMaster/EmployeeExpenses.js"],"names":["MyApiUrl","ViewImg","DateFilter","date","idate","Date","toISOString","split","getDate","toString","padStart","getMonth","getFullYear","table","placeholder","label","items","values","fields2","key","EmployeeExpenses","useState","ResponseData","setResponseData","remarksview","setremarksview","block","setBlock","GetEmployeeExpensesRequest","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","document","getElementById","className","axios","method","url","headers","then","response","data","map","item","Company","COMPANY_NAME","Name","EMPLOYEE_NAME","EMPLOYEE_CONTACT","EMPLOYEE_EXPENSES_TRAVEL_FROM","EMPLOYEE_EXPENSES_TRAVEL_TO","Distance","EMPLOYEE_EXPENSES_DISTANCE","Mode","EMPLOYEE_EXPENSES_MODE","EMPLOYEE_EXPENSES_DAILY_ALLOWANCE","EMPLOYEE_EXPENSES_TOTAL","EMPLOYEE_EXPENSES_PLACE_OF_WORK","EMPLOYEE_EXPENSES_FARE","EMPLOYEE_EXPENSES_OTHERS","catch","error","console","log","React","useEffect","history","useHistory","id","style","marginTop","col","boxShadow","fields","hover","striped","bordered","sorter","tableFilter","itemsPerPageSelect","columnFilterSlot","size","itemsPerPage","pagination","scopedSlots","i","EMPLOYEE_EXPENSES_DATE","Remarks","color","onClick","remark","EMPLOYEE_EXPENSES_REMARKS","Documents","push","Action","pkid","EMPLOYEE_EXPENSES_PKID","put","fire","title","icon","confirmButtonText","status","confirm","show","onClose","closeButton","md"],"mappings":"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","file":"static/js/79.b116fc36.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","export default function DateFilter({ date }) {\r\n  let idate = new Date(new Date(date).toISOString().split(\"T\")[0]);\r\n  let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n    idate.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n  return dateMDY;\r\n}\r\n","/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-29 13:04:12\r\n * @modify date 2021-12-07 12:25:56\r\n * @desc [description]\r\n */\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CDataTable,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CImg,\r\n  CLink,\r\n} from \"@coreui/react\";\r\nimport { MyApiUrl, ViewImg } from \"src/services/service\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DateFilter from \"../masters/DateFilter\";\r\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields2 = [\r\n  { key: \"Action\" },\r\n  { key: \"Date\" },\r\n  { key: \"Company\" },\r\n  { key: \"Name\" },\r\n  { key: \"Contact Number\" },\r\n  { key: \"Place Of Work\" },\r\n  { key: \"Travel From\" },\r\n  { key: \"Travel To\" },\r\n  { key: \"Distance\" },\r\n  { key: \"Mode\" },\r\n  { key: \"Fare\" },\r\n  { key: \"Daily Allowance\" },\r\n  { key: \"Others\" },\r\n  { key: \"Total Amount\" },\r\n  { key: \"Remarks\" },\r\n  { key: \"Documents\" },\r\n];\r\n\r\nconst EmployeeExpenses = () => {\r\n  const [ResponseData, setResponseData] = useState([]);\r\n  const [remarksview, setremarksview] = useState();\r\n  const [block, setBlock] = useState(false);\r\n\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  const GetEmployeeExpensesRequest = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"pendingEmpExpenses\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const items = response.data.map((item) => {\r\n          return {\r\n            ...item,\r\n            Company: item.COMPANY_NAME,\r\n            Name: item.EMPLOYEE_NAME,\r\n            \"Contact Number\": item.EMPLOYEE_CONTACT,\r\n            \"Travel From\": item.EMPLOYEE_EXPENSES_TRAVEL_FROM,\r\n            \"Travel To\": item.EMPLOYEE_EXPENSES_TRAVEL_TO,\r\n            Distance: item.EMPLOYEE_EXPENSES_DISTANCE,\r\n            Mode: item.EMPLOYEE_EXPENSES_MODE,\r\n            \"Daily Allowance\": item.EMPLOYEE_EXPENSES_DAILY_ALLOWANCE,\r\n            \"Total Amount\": item.EMPLOYEE_EXPENSES_TOTAL,\r\n            \"Place Of Work\": item.EMPLOYEE_EXPENSES_PLACE_OF_WORK,\r\n            \"Fare\": item.EMPLOYEE_EXPENSES_FARE,\r\n            \"Others\": item.EMPLOYEE_EXPENSES_OTHERS,\r\n          };\r\n        });\r\n        setResponseData(items);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const AcceptRequest = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios.put(MyApiUrl + \"AcceptEmpExpenses/\" + pkid).then((response) => {\r\n      if (response.data === true) {\r\n        Swal.fire({\r\n          title: \"Employee Expenses Accepted!\",\r\n          icon: \"success\",\r\n          confirmButtonText: \"OK\",\r\n        });\r\n        GetEmployeeExpensesRequest();\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      } else {\r\n        Swal.fire({\r\n          title: \"Failed To Confirm Employee Expenses!\",\r\n          icon: \"error\",\r\n          confirmButtonText: \"OK\",\r\n        });\r\n        GetEmployeeExpensesRequest();\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      }\r\n    });\r\n  };\r\n\r\n  const RejectRequest = (pkid) => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    var res = confirm(\"Are you sure you want to Deny the request\");\r\n    if (res) {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      axios.put(MyApiUrl + \"RejectEmpExpenses/\" + pkid).then((response) => {\r\n        if (response.data === true) {\r\n          Swal.fire({\r\n            title: \"Employee Expenses Denied!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          GetEmployeeExpensesRequest();\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Failed To Deny Employee Expenses!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const ViewRemark = (remark) => {\r\n    setremarksview(remark);\r\n    setBlock(!block);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    GetEmployeeExpensesRequest();\r\n  }, []);\r\n\r\n  let history = useHistory();\r\n  return (\r\n    <div id=\"city\">\r\n      <div id=\"divLoading\"> </div>\r\n      <h1 id=\"ccmaster\">Employee Expenses</h1>\r\n      <CRow style={{ marginTop: \"3%\" }}>\r\n        <CCol col=\"12\">\r\n          <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Expenses Request</CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={ResponseData}\r\n                        fields={fields2}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPageSelect={items}\r\n                        columnFilterSlot\r\n                        size=\"sm\"\r\n                        itemsPerPage={10}\r\n                        pagination\r\n                        scopedSlots={{\r\n                          Date: (i) => (\r\n                            <td>\r\n                              {<DateFilter date={i.EMPLOYEE_EXPENSES_DATE} />}\r\n                            </td>\r\n                          ),\r\n                          Remarks: (i) => (\r\n                            <td>\r\n                              <CButton\r\n                                color=\"primary\"\r\n                                size=\"sm\"\r\n                                id=\"AddEmp\"\r\n                                onClick={() => {\r\n                                  ViewRemark(i.EMPLOYEE_EXPENSES_REMARKS);\r\n                                }}\r\n                              >\r\n                                View\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          Documents: (i) => (\r\n                            <td>\r\n                              <CButton\r\n                                color=\"primary\"\r\n                                size=\"sm\"\r\n                                onClick={() => {\r\n                                  history.push(\"/ExpensesDocuments\", {\r\n                                    data: i,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                View\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          Action: (item) => (\r\n                            <td>\r\n                              <CButton\r\n                                onClick={() => {\r\n                                  AcceptRequest(item.EMPLOYEE_EXPENSES_PKID);\r\n                                }}\r\n                                color=\"primary\"\r\n                                size=\"sm\"\r\n                              >\r\n                                Accept\r\n                                {item.status}\r\n                              </CButton>&nbsp;&nbsp;&nbsp;\r\n                              <CButton\r\n                                onClick={() => {\r\n                                  RejectRequest(item.EMPLOYEE_EXPENSES_PKID);\r\n                                }}\r\n                                color=\"danger\"\r\n                                size=\"sm\"\r\n                              >\r\n                                Deny\r\n                                {item.status}\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CModal show={block} onClose={() => setBlock(!block)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Expenses Remark</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            <CCol md=\"12\">\r\n              {remarksview}\r\n            </CCol>\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setBlock(!block)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeExpenses;\r\n"],"sourceRoot":""}