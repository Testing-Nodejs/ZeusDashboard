{"version":3,"sources":["services/service.js","views/masters/DateFilter.js","views/dashboard/TotalEmployeeByCompany.js"],"names":["MyApiUrl","ViewImg","DateFilter","date","idate","Date","toISOString","split","getDate","toString","padStart","getMonth","getFullYear","table","placeholder","label","items","values","fields2","key","CoverdArea","TotalEmployeeByCompany","props","CompanyID","location","state","data","COMPANY_NAME","CompanyName","useState","ResponseData","setResponseData","EmployeeCoveredArea","setEmployeeCoveredArea","EmployeeOtherCoveredArea","setEmployeeOtherCoveredArea","EmployeeUploadedDoc","setEmployeeUploadedDoc","EmployeeAddress","setEmployeeAddress","block","setBlock","block2","setBlock2","block3","setBlock3","block4","setBlock4","React","useEffect","axios","method","url","headers","then","response","map","item","index","EMPLOYEE_TYPE_NAME","EMPLOYEE_SUB_TYPE_NAME","HQ","HQ_NAME","Company","Name","EMPLOYEE_NAME","Email","EMPLOYEE_EMAIL","EMPLOYEE_ALT_EMAIL","EMPLOYEE_CONTACT","EMPLOYEE_ALT_CONTACT","Designation","EMPLOYEE_DESIGNATION","Qualification","EMPLOYEE_QUALIFICATION","Region","EMPLOYEE_REGION","Gender","EMPLOYEE_GENDER","ReportingManager","Password","EMPLOYEE_PASSWORD","ManagerType","Salary","EMPLOYEE_SALARY","catch","error","console","log","history","useHistory","id","col","md","color","size","onClick","goBack","fields","hover","striped","bordered","sorter","tableFilter","itemsPerPageSelect","columnFilterSlot","itemsPerPage","pagination","scopedSlots","Leave","i","push","LeaveCount","Profile","profile","EMPLOYEE_PROFILE","Fragment","href","target","src","fluid","className","style","width","EMPLOYEE_DOB","EMPLOYEE_DOJ","EMPLOYEE_DOR","Address","pkid","EMPLOYEE_PKID","Report","type","class","marginLeft","show","onClose","closeButton","fontWeight","fontFamily","textAlign","borderBottom","paddingBottom","EMPLOYEE_ADDRESS1","EMPLOYEE_ADDRESS2","EMPLOYEE_ADDRESS3","EMPLOYEE_ADDRESS_ZIP","EMPLOYEE_ALT_ADDRESS1","EMPLOYEE_ALT_ADDRESS2","EMPLOYEE_ALT_ADDRESS3","EMPLOYEE_ALT_ADDRESS_ZIP","Country","COUNTRY_NAME","State","STATE_NAME","City","CITY_NAME","Area","AREA_NAME","EMPLOYEE_DOCS_FILE"],"mappings":"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","file":"static/js/106.2f2ca48c.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","export default function DateFilter({ date }) {\r\n  let idate = new Date(new Date(date).toISOString().split(\"T\")[0]);\r\n  let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n    idate.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n  return dateMDY;\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-29 13:04:12\r\n * @modify date 2021-12-07 12:25:56\r\n * @desc [description]\r\n */\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CDataTable,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CImg,\r\n  CLink,\r\n} from \"@coreui/react\";\r\nimport { MyApiUrl, ViewImg } from \"src/services/service\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DateFilter from \"../masters/DateFilter\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields2 = [\r\n  { key: \"Report\" },\r\n  { key: \"Leave\" },\r\n  { key: \"Tour Plan\" },\r\n  { key: \"Employee Type\" },\r\n  { key: \"Sub Type\" },\r\n  { key: \"HQ\" },\r\n  { key: \"Company\" },\r\n  { key: \"Name\" },\r\n  { key: \"Email\" },\r\n  { key: \"Alt Email\" },\r\n  { key: \"Contact Number\" },\r\n  { key: \"Alternate Number\" },\r\n  { key: \"Designation\" },\r\n  { key: \"Qualification\" },\r\n  { key: \"Joining Date\" },\r\n  { key: \"Date Of Birth\" },\r\n  { key: \"Region\" },\r\n  { key: \"Gender\" },\r\n  { key: \"Reporting To\" },\r\n  { key: \"Password\" },\r\n  { key: \"Profile\" },\r\n  { key: \"Is Manager\" },\r\n  { key: \"Salary\" },\r\n  { key: \"Releaving Date\" },\r\n  { key: \"Address\" },\r\n  { key: \"Uploaded Docs\" },\r\n  { key: \"Covered Area\" },\r\n  { key: \"Other Covered Area\" },\r\n];\r\n\r\nconst CoverdArea = [\r\n  { key: \"Country\" },\r\n  { key: \"State\" },\r\n  { key: \"City\" },\r\n  { key: \"Area\" },\r\n];\r\n\r\nconst TotalEmployeeByCompany = (props) => {\r\n  const CompanyID = props.location.state.data.CompanyID;\r\n  const COMPANY_NAME = props.location.state.data.CompanyName;\r\n  const [ResponseData, setResponseData] = useState([]);\r\n  const [EmployeeCoveredArea, setEmployeeCoveredArea] = useState([]);\r\n  const [EmployeeOtherCoveredArea, setEmployeeOtherCoveredArea] = useState([]);\r\n  const [EmployeeUploadedDoc, setEmployeeUploadedDoc] = useState([]);\r\n  const [EmployeeAddress, setEmployeeAddress] = useState([]);\r\n  const [block, setBlock] = useState(false);\r\n  const [block2, setBlock2] = useState(false);\r\n  const [block3, setBlock3] = useState(false);\r\n  const [block4, setBlock4] = useState(false);\r\n\r\n  const GetAllEmployees = () => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getAllEmpsByCompId/\" + CompanyID,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const items = response.data.map((item, index) => {\r\n          return {\r\n            ...item,\r\n            \"Employee Type\": item.EMPLOYEE_TYPE_NAME,\r\n            \"Sub Type\": item.EMPLOYEE_SUB_TYPE_NAME,\r\n            HQ: item.HQ_NAME,\r\n            Company: item.COMPANY_NAME,\r\n            Name: item.EMPLOYEE_NAME,\r\n            Email: item.EMPLOYEE_EMAIL,\r\n            \"Alt Email\": item.EMPLOYEE_ALT_EMAIL,\r\n            \"Contact Number\": item.EMPLOYEE_CONTACT,\r\n            \"Alternate Number\": item.EMPLOYEE_ALT_CONTACT,\r\n            Designation: item.EMPLOYEE_DESIGNATION,\r\n            Qualification: item.EMPLOYEE_QUALIFICATION,\r\n            Region: item.EMPLOYEE_REGION,\r\n            Gender: item.EMPLOYEE_GENDER,\r\n            \"Reporting To\": item.ReportingManager,\r\n            Password: item.EMPLOYEE_PASSWORD,\r\n            \"Is Manager\": item.ManagerType,\r\n            Salary: item.EMPLOYEE_SALARY,\r\n          };\r\n        });\r\n        setResponseData(items);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const ViewEmployeeAddress = (pkid) => {\r\n    console.log(pkid);\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"GetEmployeeAddress/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setEmployeeAddress(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setBlock2(!block2);\r\n  };\r\n\r\n  const ViewEmployeeCoveredAreas = (pkid) => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"GetEmployeeCoveredAreas/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setEmployeeCoveredArea(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setBlock3(!block3);\r\n  };\r\n\r\n  const ViewEmployeeOtherCoveredAreas = (pkid) => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"GetEmployeeOtherCoveredAreas/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setEmployeeOtherCoveredArea(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setBlock(!block);\r\n  };\r\n\r\n  const ViewUploadedDocs = (pkid) => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"GetEmployeeOtherDocs/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setEmployeeUploadedDoc(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setBlock4(!block4);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    GetAllEmployees();\r\n  }, []);\r\n\r\n  let history = useHistory();\r\n  return (\r\n    <div id=\"city\">\r\n      <h1 id=\"ccmaster\">Employees From {COMPANY_NAME}</h1>\r\n      <br />\r\n      <CRow>\r\n        <CCol col=\"12\">\r\n          <CCard id=\"city-table\">\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol md=\"1\">\r\n                  <CButton\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() => history.goBack()}\r\n                  >\r\n                    Back\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n              <br />\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Employees List</CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={ResponseData}\r\n                        fields={fields2}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPageSelect={items}\r\n                        columnFilterSlot\r\n                        size=\"sm\"\r\n                        itemsPerPage={10}\r\n                        pagination\r\n                        scopedSlots={{\r\n                          Leave: (i) => (\r\n                            <td>\r\n                              <CButton\r\n                                onClick={() =>\r\n                                  history.push(\"/EmployeeAllLeaves\", {\r\n                                    data: i,\r\n                                  })\r\n                                }\r\n                              >\r\n                                {i.LeaveCount}\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          Profile: (i) => {\r\n                            let profile = \"\";\r\n                            if (\r\n                              i.EMPLOYEE_PROFILE === \"\" ||\r\n                              i.EMPLOYEE_PROFILE === null\r\n                            ) {\r\n                              profile = \"NoImage.png\";\r\n                            } else {\r\n                              profile = i.EMPLOYEE_PROFILE;\r\n                            }\r\n                            return (\r\n                              <React.Fragment>\r\n                                <td>\r\n                                  <CLink\r\n                                    href={ViewImg + \"/\" + profile}\r\n                                    target=\"_blank\"\r\n                                  >\r\n                                    <CImg\r\n                                      src={ViewImg + \"/\" + profile}\r\n                                      fluid\r\n                                      className=\"mb-2\"\r\n                                      style={{ width: \"100%\" }}\r\n                                    />\r\n                                  </CLink>\r\n                                </td>\r\n                              </React.Fragment>\r\n                            );\r\n                          },\r\n                          \"Date Of Birth\": (i) => (\r\n                            <td>{<DateFilter date={i.EMPLOYEE_DOB} />}</td>\r\n                          ),\r\n                          \"Joining Date\": (i) => (\r\n                            <td>{<DateFilter date={i.EMPLOYEE_DOJ} />}</td>\r\n                          ),\r\n                          \"Releaving Date\": (i) => (\r\n                            <td>{<DateFilter date={i.EMPLOYEE_DOR} />}</td>\r\n                          ),\r\n                          Address: (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"10\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewEmployeeAddress(i.EMPLOYEE_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          \"Uploaded Docs\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"10\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewUploadedDocs(i.EMPLOYEE_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          \"Covered Area\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"10\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewEmployeeCoveredAreas(i.EMPLOYEE_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          \"Other Covered Area\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"10\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewEmployeeOtherCoveredAreas(\r\n                                        i.EMPLOYEE_PKID\r\n                                      );\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          Report: (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"10\">\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    class=\"btn btn-dark rounded-pill\"\r\n                                    style={{ marginLeft: \"25px\" }}\r\n                                    onClick={() => {\r\n                                      history.push(\"/ViewEmployeeAttendance\", {\r\n                                        data: i,\r\n                                      });\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </button>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          \"Tour Plan\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"10\">\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    class=\"btn btn-dark rounded-pill\"\r\n                                    style={{ marginLeft: \"25px\" }}\r\n                                    onClick={() => {\r\n                                      history.push(\"/ViewEmployeeTourPlan\", {\r\n                                        data: i,\r\n                                      });\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </button>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CModal show={block2} onClose={() => setBlock2(!block2)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Employee Address</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {EmployeeAddress.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"6\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Permanent Address\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.EMPLOYEE_ADDRESS1}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.EMPLOYEE_ADDRESS2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.EMPLOYEE_ADDRESS3}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.EMPLOYEE_ADDRESS_ZIP}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n                <CCol md=\"6\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Correspondence Address\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.EMPLOYEE_ALT_ADDRESS1}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.EMPLOYEE_ALT_ADDRESS2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.EMPLOYEE_ALT_ADDRESS3}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.EMPLOYEE_ALT_ADDRESS_ZIP}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setBlock2(!block2)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block3} onClose={() => setBlock3(!block3)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Employee Covered Areas</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            <CCol md=\"12\">\r\n              <CDataTable\r\n                items={EmployeeCoveredArea}\r\n                fields={CoverdArea}\r\n                hover\r\n                striped\r\n                bordered\r\n                sorter\r\n                tableFilter={table}\r\n                itemsPerPageSelect={items}\r\n                columnFilterSlot\r\n                size=\"sm\"\r\n                itemsPerPage={10}\r\n                pagination\r\n                scopedSlots={{\r\n                  Country: (i) => <td>{i.COUNTRY_NAME}</td>,\r\n                  State: (i) => <td>{i.STATE_NAME}</td>,\r\n                  City: (i) => <td>{i.CITY_NAME}</td>,\r\n                  Area: (i) => <td>{i.AREA_NAME}</td>,\r\n                }}\r\n              />\r\n            </CCol>\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setBlock3(!block3)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block} onClose={() => setBlock(!block)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Employee Other Covered Areas</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            <CCol md=\"12\">\r\n              <CDataTable\r\n                items={EmployeeOtherCoveredArea}\r\n                fields={CoverdArea}\r\n                hover\r\n                striped\r\n                bordered\r\n                sorter\r\n                tableFilter={table}\r\n                itemsPerPageSelect={items}\r\n                columnFilterSlot\r\n                size=\"sm\"\r\n                itemsPerPage={10}\r\n                pagination\r\n                scopedSlots={{\r\n                  Country: (i) => <td>{i.COUNTRY_NAME}</td>,\r\n                  State: (i) => <td>{i.STATE_NAME}</td>,\r\n                  City: (i) => <td>{i.CITY_NAME}</td>,\r\n                  Area: (i) => <td>{i.AREA_NAME}</td>,\r\n                }}\r\n              />\r\n            </CCol>\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setBlock(!block)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block4} onClose={() => setBlock4(!block4)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Other Uploaded Documents</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {EmployeeUploadedDoc.map((i) => (\r\n              <CCol md=\"3\">\r\n                <CImg\r\n                  src={ViewImg + \"/\" + i.EMPLOYEE_DOCS_FILE}\r\n                  fluid\r\n                  className=\"mb-2\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </CCol>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setBlock4(!block4)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TotalEmployeeByCompany;\r\n"],"sourceRoot":""}