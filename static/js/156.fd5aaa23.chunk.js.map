{"version":3,"sources":["views/Reports/GoogleMap.js"],"names":["App","polylineRef","useRef","listenersRef","useState","lat","lng","path","setPath","onEdit","useCallback","current","nextPath","getPath","getArray","map","latLng","toJSON","onLoad","polyline","push","addListener","onUnmount","forEach","lis","remove","useLoadScript","googleMapsApiKey","isLoaded","centre","loadError","mapContainerStyle","width","height","zoom","center","ref","options","strokeColor","onMouseUp","position","title","label","icon"],"mappings":"8JA2TeA,UA3KH,WACV,IAAMC,EAAcC,iBAAO,MACrBC,EAAeD,iBAAO,IAFZ,EAGQE,mBAAS,CAC/B,CACEC,IAAK,iBACLC,IAAK,kBAEP,CACED,IAAK,iBACLC,IAAK,kBAEP,CACED,IAAK,iBACLC,IAAK,kBAEP,CACED,IAAK,iBACLC,IAAK,kBAEP,CACED,IAAK,iBACLC,IAAK,kBAEP,CACED,IAAK,iBACLC,IAAK,kBAEP,CACED,IAAK,iBACLC,IAAK,kBAEP,CACED,IAAK,iBACLC,IAAK,kBAEP,CACED,IAAK,iBACLC,IAAK,kBAEP,CACED,IAAK,iBACLC,IAAK,kBAEP,CACED,IAAK,iBACLC,IAAK,kBAEP,CACED,IAAK,gBACLC,IAAK,iBAEP,CACED,IAAK,iBACLC,IAAK,kBAEP,CACED,IAAK,iBACLC,IAAK,kBAEP,CACED,IAAK,iBACLC,IAAK,kBAEP,CACED,IAAK,iBACLC,IAAK,kBAEP,CACED,IAAK,iBACLC,IAAK,kBAEP,CACED,IAAK,iBACLC,IAAK,kBAEP,CACED,IAAK,iBACLC,IAAK,oBA9EO,mBAGTC,EAHS,KAGHC,EAHG,KAmFVC,EAASC,uBAAY,WACzB,GAAIT,EAAYU,QAAS,CACvB,IAAMC,EAAWX,EAAYU,QAC1BE,UACAC,WACAC,KAAI,SAACC,GAAD,OAAYA,EAAOC,YAC1BT,EAAQI,MAET,CAACJ,IAGEU,EAASR,uBACb,SAACS,GACClB,EAAYU,QAAUQ,EACtB,IAAMZ,EAAOY,EAASN,UACtBV,EAAaQ,QAAQS,KACnBb,EAAKc,YAAY,SAAUZ,GAC3BF,EAAKc,YAAY,YAAaZ,GAC9BF,EAAKc,YAAY,YAAaZ,MAGlC,CAACA,IAIGa,EAAYZ,uBAAY,WAC5BP,EAAaQ,QAAQY,SAAQ,SAACC,GAAD,OAASA,EAAIC,YAC1CxB,EAAYU,QAAU,OACrB,IA/Ga,EA0HgBe,YAAc,CAC5CC,iBAAkB,KADZC,EA1HQ,EA0HRA,SAIFC,EAAS,CAAExB,IAAK,iBAAkBC,IAAK,kBAQ7C,OAtIgB,EA0HEwB,UAYI,2BACjBF,EAGH,cAAC,WAAD,UACE,eAAC,IAAD,CACEG,kBA3BoB,CACxBC,MAAO,OACPC,OAAQ,QA0BJC,KAAM,GACNC,OAAQN,EAHV,UAKE,cAAC,IAAD,CACEO,IAAKnC,EACLM,KAAMA,EACN8B,QAAS,CAAEC,YAAa,WAGxBC,UAAW9B,EACXS,OAAQA,EACRI,UAAWA,IAEb,cAAC,IAAD,CACEkB,SAAUX,EACVY,MAAO,mCACPC,MAAO,QACPC,KA3BW,0BA6Bb,cAAC,IAAD,CACEH,SAlCY,CAClBnC,IAAK,iBACLC,IAAK,kBAiCCmC,MAAO,6BACPE,KA/BY,gCAGE","file":"static/js/156.fd5aaa23.chunk.js","sourcesContent":["// import React from \"react\";\r\n// import { GoogleMap, LoadScript, Polyline } from \"@react-google-maps/api\";\r\n\r\n// const ADD_KEY_HERE = \"AIzaSyBRs7NRGpboLvwqN9zqFZiuhCXqe9URYBQ\";\r\n\r\n// const containerStyle = {\r\n//   width: \"100%\",\r\n//   height: \"100%\"\r\n// };\r\n\r\n// const center = { lat: 12.9802347063322, lng: 77.5907760360903 };\r\n\r\n// const paths = [\r\n//   {\r\n//     lat: 12.9802347063322,\r\n//     lng: 77.5907760360903,\r\n//     bearing: -20.5784744283754\r\n//   },\r\n//   {\r\n//     lat: 12.9793774204024,\r\n//     lng: 77.5910979011596,\r\n//     bearing: 17.1118088152409\r\n//   },\r\n//   {\r\n//     lat: 12.9795865148043,\r\n//     lng: 77.5911622741734,\r\n//     bearing: 70.6690312217414\r\n//   },\r\n//   {\r\n//     lat: 12.9797746996155,\r\n//     lng: 77.5916987159555,\r\n//     bearing: 38.1233134168197\r\n//   },\r\n//   {\r\n//     lat: 12.9801301594259,\r\n//     lng: 77.5919776656823,\r\n//     bearing: -45.7414247345699\r\n//   },\r\n//   {\r\n//     lat: 12.9798374278543,\r\n//     lng: 77.5922780730802,\r\n//     bearing: 16.0994201411847\r\n//   },\r\n//   {\r\n//     lat: 12.9791683258247,\r\n//     lng: 77.5920849540387,\r\n//     bearing: 35.6916527554558\r\n//   },\r\n//   {\r\n//     lat: 12.9787501361417,\r\n//     lng: 77.5917845466407,\r\n//     bearing: 58.0502467067782\r\n//   },\r\n//   {\r\n//     lat: 12.9784155838887,\r\n//     lng: 77.5912481048586,\r\n//     bearing: 64.0233912454979\r\n//   },\r\n//   {\r\n//     lat: 12.9784783124705,\r\n//     lng: 77.5913768508863,\r\n//     bearing: 45.7412428776673\r\n//   },\r\n//   {\r\n//     lat: 12.9783319457552,\r\n//     lng: 77.5912266471873,\r\n//     bearing: -69.926654677622\r\n//   },\r\n//   {\r\n//     lat: 12.978394674358,\r\n//     lng: 77.591054985817,\r\n//     bearing: 16.3413468751341\r\n//   },\r\n//   {\r\n//     lat: 12.9779555738058,\r\n//     lng: 77.5909262397893,\r\n//     bearing: 54.6749460887583\r\n//   },\r\n//   {\r\n//     lat: 12.9776210204837,\r\n//     lng: 77.5904541710211,\r\n//     bearing: 64.0233096712307\r\n//   },\r\n//   {\r\n//     lat: 12.9774746532636,\r\n//     lng: 77.5901537636231,\r\n//     bearing: 65.5464053454266\r\n//   },\r\n//   {\r\n//     lat: 12.9761573444059,\r\n//     lng: 77.5872569779997,\r\n//     bearing: -66.4029340594377\r\n//   },\r\n//   {\r\n//     lat: 12.9764291706147,\r\n//     lng: 77.5866347055324,\r\n//     bearing: -48.4630801907934\r\n//   },\r\n//   {\r\n//     lat: 12.9766382674962,\r\n//     lng: 77.5863986711483,\r\n//     bearing: -54.992843944921\r\n//   },\r\n//   {\r\n//     lat: 12.9771191896563,\r\n//     lng: 77.5857120256672,\r\n//     bearing: -60.0659370316888\r\n//   }\r\n// ];\r\n\r\n// const lineSymbol = {\r\n//   path: \"M 0,-1 0,1\",\r\n//   strokeOpacity: 1,\r\n//   scale: 5,\r\n//   strokeColor: \"red\"\r\n// };\r\n\r\n// const options = {\r\n//   strokeOpacity: 0,\r\n//   fillOpacity: 0,\r\n//   zIndex: 1,\r\n//   icons: [\r\n//     {\r\n//       icon: lineSymbol,\r\n//       offset: \"0\",\r\n//       repeat: \"20px\"\r\n//     }\r\n//   ]\r\n// };\r\n\r\n// function App() {\r\n//   return (\r\n//     <LoadScript googleMapsApiKey={ADD_KEY_HERE}>\r\n//       <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={4}>\r\n//         <Polyline path={paths} options={options} />\r\n//       </GoogleMap>\r\n//     </LoadScript>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\nimport React, { Fragment, useCallback, useRef, useState } from \"react\";\r\nimport { GoogleMap, Polyline, useLoadScript, Marker } from \"@react-google-maps/api\";\r\n\r\nconst App = () => {\r\n  const polylineRef = useRef(null);\r\n  const listenersRef = useRef([]);\r\n  const [path, setPath] = useState([\r\n    {\r\n      lat: 12.9802347063322,\r\n      lng: 77.5907760360903\r\n    },\r\n    {\r\n      lat: 12.9793774204024,\r\n      lng: 77.5910979011596\r\n    },\r\n    {\r\n      lat: 12.9795865148043,\r\n      lng: 77.5911622741734\r\n    },\r\n    {\r\n      lat: 12.9797746996155,\r\n      lng: 77.5916987159555\r\n    },\r\n    {\r\n      lat: 12.9801301594259,\r\n      lng: 77.5919776656823\r\n    },\r\n    {\r\n      lat: 12.9798374278543,\r\n      lng: 77.5922780730802\r\n    },\r\n    {\r\n      lat: 12.9791683258247,\r\n      lng: 77.5920849540387\r\n    },\r\n    {\r\n      lat: 12.9787501361417,\r\n      lng: 77.5917845466407\r\n    },\r\n    {\r\n      lat: 12.9784155838887,\r\n      lng: 77.5912481048586\r\n    },\r\n    {\r\n      lat: 12.9784783124705,\r\n      lng: 77.5913768508863\r\n    },\r\n    {\r\n      lat: 12.9783319457552,\r\n      lng: 77.5912266471873\r\n    },\r\n    {\r\n      lat: 12.978394674358,\r\n      lng: 77.591054985817\r\n    },\r\n    {\r\n      lat: 12.9779555738058,\r\n      lng: 77.5909262397893\r\n    },\r\n    {\r\n      lat: 12.9776210204837,\r\n      lng: 77.5904541710211\r\n    },\r\n    {\r\n      lat: 12.9774746532636,\r\n      lng: 77.5901537636231\r\n    },\r\n    {\r\n      lat: 12.9761573444059,\r\n      lng: 77.5872569779997\r\n    },\r\n    {\r\n      lat: 12.9764291706147,\r\n      lng: 77.5866347055324\r\n    },\r\n    {\r\n      lat: 12.9766382674962,\r\n      lng: 77.5863986711483\r\n    },\r\n    {\r\n      lat: 12.9771191896563,\r\n      lng: 77.5857120256672\r\n    }\r\n  ]);\r\n\r\n  // Call setPath with new edited path\r\n  const onEdit = useCallback(() => {\r\n    if (polylineRef.current) {\r\n      const nextPath = polylineRef.current\r\n        .getPath()\r\n        .getArray()\r\n        .map((latLng) => latLng.toJSON());\r\n      setPath(nextPath);\r\n    }\r\n  }, [setPath]);\r\n\r\n  // Bind refs to current Polyline and listeners\r\n  const onLoad = useCallback(\r\n    (polyline) => {\r\n      polylineRef.current = polyline;\r\n      const path = polyline.getPath();\r\n      listenersRef.current.push(\r\n        path.addListener(\"set_at\", onEdit),\r\n        path.addListener(\"insert_at\", onEdit),\r\n        path.addListener(\"remove_at\", onEdit)\r\n      );\r\n    },\r\n    [onEdit]\r\n  );\r\n\r\n  // Clean up refs\r\n  const onUnmount = useCallback(() => {\r\n    listenersRef.current.forEach((lis) => lis.remove());\r\n    polylineRef.current = null;\r\n  }, []);\r\n\r\n  const mapContainerStyle = {\r\n    width: \"100%\",\r\n    height: \"80vh\"\r\n  };\r\n\r\n  // const showPath = () => {\r\n  //   console.log(path); //What should be here to show the edited path if its possible to access?\r\n  // };\r\n\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: \"\"\r\n  });\r\n\r\n  const centre = { lat: 12.9802347063322, lng: 77.5907760360903 };\r\n  const Endposition = {\r\n    lat: 12.9771191896563,\r\n    lng: 77.5857120256672\r\n  };\r\n  const LoginImage = \"avatars/LoginIcon.png\";\r\n  const LogoutImage = \"avatars/LogoutIcon.png\";\r\n\r\n  if (loadError) return \"Error loading Google Map\";\r\n  if (!isLoaded) return \"Loading Maps....\";\r\n\r\n  return (\r\n    <Fragment>\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={18}\r\n        center={centre}\r\n      >\r\n        <Polyline\r\n          ref={polylineRef}\r\n          path={path}\r\n          options={{ strokeColor: \"#ff0000\" }}\r\n          // options={{ editable: true, strokeColor: \"#ff0000\" }}\r\n          // Event used when manipulating and adding points\r\n          onMouseUp={onEdit}\r\n          onLoad={onLoad}\r\n          onUnmount={onUnmount}\r\n        />\r\n        <Marker\r\n          position={centre}\r\n          title={\"Login..! Work Started From Here.\"}\r\n          label={\"Login\"}\r\n          icon={LoginImage}\r\n        />\r\n        <Marker\r\n          position={Endposition}\r\n          title={\"Logout..! Work Ended Here.\"}\r\n          icon={LogoutImage}\r\n        />\r\n\r\n    </GoogleMap>\r\n    </Fragment >\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"sourceRoot":""}