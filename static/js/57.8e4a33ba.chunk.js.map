{"version":3,"sources":["services/service.js","../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/icons/DeleteSharp.js","views/CustomerMaster/AddCustomerAddress.js"],"names":["MyApiUrl","ViewImg","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","table","placeholder","label","items","values","fields","key","AddCustomerAddress","props","CustID","location","state","data","CUSTOMER_PKID","CustName","CUSTOMER_NAME","useState","type","add1","add2","add3","zip","pkid","ResponseData","AddButton","UpdateButton","CustomerAddress","setCustomerAddress","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","AddAddress","fire","icon","title","document","getElementById","className","obj","CUSTOMER_ADDRESS_ADDRESS1","CUSTOMER_ADDRESS_ADDRESS2","CUSTOMER_ADDRESS_ADDRESS3","CUSTOMER_ADDRESS_ZIP_CODE","CUSTOMER_ADDRESS_TYPE","CUSTOMER_ADDRESS_CUST_FKID","axios","post","then","response","confirmButtonText","fetchData","UpdateAddress","put","useCallback","method","url","headers","params","language_code","map","item","Type","catch","error","console","log","Updatebtn","onClick","size","id","Addbtn","useEffect","style","marginTop","xs","sm","md","lg","xl","boxShadow","action","encType","row","readOnly","custom","name","onChange","event","target","hover","striped","bordered","tableFilter","itemsPerPageSelect","sorter","itemsPerPage","pagination","scopedSlots","Action","CUSTOMER_ADDRESS_PKID","status","confirm"],"mappings":"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","file":"static/js/57.8e4a33ba.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 21h12V7H6v14zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteSharp');\n\nexports.default = _default;","/**\r\n * @author KimoSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-25 18:21:31\r\n * @modify date 2021-12-07 12:26:04\r\n * @desc [description]\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CRow,\r\n  CDataTable,\r\n  CLabel,\r\n  CSelect,\r\n} from \"@coreui/react\";\r\n\r\nimport { MyApiUrl } from \"src/services/service\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields = [\r\n  { key: \"Action\" },\r\n  { key: \"Type\" },\r\n  { key: \"Address 1\" },\r\n  { key: \"Address 2\" },\r\n  { key: \"Address 3\" },\r\n  { key: \"Zip Code\" },\r\n];\r\n\r\nconst AddCustomerAddress = (props) => {\r\n  const CustID = props.location.state.data.CUSTOMER_PKID;\r\n  const CustName = props.location.state.data.CUSTOMER_NAME;\r\n  const [CustomerAddress, setCustomerAddress] = useState({\r\n    type: \"\",\r\n    add1: \"\",\r\n    add2: \"\",\r\n    add3: \"\",\r\n    zip: \"\",\r\n    pkid: \"\",\r\n    ResponseData: [],\r\n    AddButton: true,\r\n    UpdateButton: false,\r\n  });\r\n\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  const AddAddress = () => {\r\n    if (\r\n      CustomerAddress.type === \"-1\" ||\r\n      CustomerAddress.type === null ||\r\n      CustomerAddress.type === \"\"\r\n    ) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Select Address Type\",\r\n      });\r\n    } else if (CustomerAddress.add1 === \"\" || CustomerAddress.add1 === null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Enter Address 1\",\r\n      });\r\n    } else if (CustomerAddress.add2 === \"\" || CustomerAddress.add2 === null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Enter Address 2\",\r\n      });\r\n    } else if (CustomerAddress.add3 === \"\" || CustomerAddress.add3 === null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Enter Address 3\",\r\n      });\r\n    } else if (CustomerAddress.zip === \"\" || CustomerAddress.zip === null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Enter Zip Code\",\r\n      });\r\n    } else {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      const obj = {\r\n        CUSTOMER_ADDRESS_ADDRESS1: CustomerAddress.add1,\r\n        CUSTOMER_ADDRESS_ADDRESS2: CustomerAddress.add2,\r\n        CUSTOMER_ADDRESS_ADDRESS3: CustomerAddress.add3,\r\n        CUSTOMER_ADDRESS_ZIP_CODE: CustomerAddress.zip,\r\n        CUSTOMER_ADDRESS_TYPE: CustomerAddress.type,\r\n        CUSTOMER_ADDRESS_CUST_FKID: CustID,\r\n      };\r\n\r\n      axios.post(MyApiUrl + \"addresstype\", obj).then((response) => {\r\n        if (response.data === true) {\r\n          Swal.fire({\r\n            title: \"Customer Address Added Successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          fetchData();\r\n          setCustomerAddress({\r\n            ...CustomerAddress,\r\n            type: \"-1\",\r\n            add1: \"\",\r\n            add2: \"\",\r\n            add3: \"\",\r\n            zip: \"\",\r\n            AddButton: true,\r\n            UpdateButton: false,\r\n          });\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        } else if (response.data == false) {\r\n          Swal.fire({\r\n            title: \"Failed To Add!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const UpdateAddress = () => {\r\n    if (CustomerAddress.type === \"-1\" || CustomerAddress.type === null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Select Address Type\",\r\n      });\r\n    } else if (CustomerAddress.add1 === \"\" || CustomerAddress.add1 === null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Enter Address 1\",\r\n      });\r\n    } else if (CustomerAddress.add2 === \"\" || CustomerAddress.add2 === null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Enter Address 2\",\r\n      });\r\n    } else if (CustomerAddress.add3 === \"\" || CustomerAddress.add3 === null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Enter Address 3\",\r\n      });\r\n    } else if (CustomerAddress.zip === \"\" || CustomerAddress.zip === null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Enter Zip Code\",\r\n      });\r\n    } else {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      const obj = {\r\n        CUSTOMER_ADDRESS_ADDRESS1: CustomerAddress.add1,\r\n        CUSTOMER_ADDRESS_ADDRESS2: CustomerAddress.add2,\r\n        CUSTOMER_ADDRESS_ADDRESS3: CustomerAddress.add3,\r\n        CUSTOMER_ADDRESS_ZIP_CODE: CustomerAddress.zip,\r\n        CUSTOMER_ADDRESS_TYPE: CustomerAddress.type,\r\n        CUSTOMER_ADDRESS_CUST_FKID: CustID,\r\n      };\r\n\r\n      axios\r\n        .put(MyApiUrl + \"addresstype/\" + CustomerAddress.pkid, obj)\r\n        .then((response) => {\r\n          if (response.data === true) {\r\n            Swal.fire({\r\n              title: \"Customer Address Updated Successfully!\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n            fetchData();\r\n            setCustomerAddress({\r\n              ...CustomerAddress,\r\n              type: \"-1\",\r\n              add1: \"\",\r\n              add2: \"\",\r\n              add3: \"\",\r\n              zip: \"\",\r\n              pkid: \"\",\r\n              AddButton: true,\r\n              UpdateButton: false,\r\n            });\r\n            document.getElementById(\"divLoading\").className = \"hide\";\r\n          } else if (response.data == false) {\r\n            Swal.fire({\r\n              title: \"Failed To Update!\",\r\n              icon: \"error\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n            document.getElementById(\"divLoading\").className = \"hide\";\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const EditAddress = (id, add1, add2, add3, zip, type) => {\r\n    setCustomerAddress({\r\n      ...CustomerAddress,\r\n      type: type,\r\n      add1: add1,\r\n      add2: add2,\r\n      add3: add3,\r\n      zip: zip,\r\n      pkid: id,\r\n      AddButton: false,\r\n      UpdateButton: true,\r\n    });\r\n  };\r\n\r\n  const DeleteAddress = (id) => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    var res = confirm(\"Are you sure you want to delete\");\r\n    if (res) {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      axios({\r\n        method: \"DELETE\",\r\n        url: MyApiUrl + \"addresstype/\" + id + \"\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        params: {\r\n          language_code: \"en\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          if (response.data == true) {\r\n            Swal.fire({\r\n              title: \"Customer Address Deleted!\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n\r\n            fetchData();\r\n            document.getElementById(\"divLoading\").className = \"hide\";\r\n          } else {\r\n            Swal.fire({\r\n              title: \"Customer Address Failed To Deleted!\",\r\n              icon: \"error\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n            document.getElementById(\"divLoading\").className = \"hide\";\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const fetchData = React.useCallback(() => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"addresstype/\" + CustID,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      params: {\r\n        language_code: \"en\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const items = response.data.map((item) => {\r\n          return {\r\n            ...item,\r\n            Type: item.CUSTOMER_ADDRESS_TYPE,\r\n            \"Address 1\": item.CUSTOMER_ADDRESS_ADDRESS1,\r\n            \"Address 2\": item.CUSTOMER_ADDRESS_ADDRESS2,\r\n            \"Address 3\": item.CUSTOMER_ADDRESS_ADDRESS3,\r\n            \"Zip Code\": item.CUSTOMER_ADDRESS_ZIP_CODE,\r\n          };\r\n        });\r\n        setCustomerAddress({\r\n          ...CustomerAddress,\r\n          ResponseData: items,\r\n        });\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const Updatebtn = () => (\r\n    <CButton type=\"button\" onClick={UpdateAddress} size=\"md\" id=\"Add-btn\">\r\n      Update\r\n    </CButton>\r\n  );\r\n\r\n  const Addbtn = () => (\r\n    <CButton type=\"button\" onClick={AddAddress} size=\"md\" id=\"Add-btn\">\r\n      Add\r\n    </CButton>\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"divLoading\"> </div>\r\n      <h1 id=\"ccmaster\">Customer Address</h1>\r\n      <CRow style={{ marginTop: \"3%\" }}>\r\n        <CCol xs=\"12\" sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\" className=\"mb-3 mb-xl-0\">\r\n          <div id=\"country-master\">\r\n            <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol>\r\n                    <CCard>\r\n                      <CCardHeader>Add Customer Address</CCardHeader>\r\n                      <CCardBody>\r\n                        <CForm\r\n                          action=\"\"\r\n                          method=\"post\"\r\n                          encType=\"multipart/form-data\"\r\n                          className=\"form-horizontal\"\r\n                        >\r\n                          <CFormGroup row>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n                              <CLabel>Customer Name</CLabel>\r\n                              <CInput\r\n                                id=\"add1\"\r\n                                placeholder=\"Address 1\"\r\n                                value={CustName}\r\n                                readOnly\r\n                              />\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n                              <CLabel>Address Type</CLabel>\r\n                              <CSelect\r\n                                custom\r\n                                name=\"addtype\"\r\n                                id=\"addtype\"\r\n                                value={CustomerAddress.type}\r\n                                onChange={(event) => {\r\n                                  setCustomerAddress({\r\n                                    ...CustomerAddress,\r\n                                    type: event.target.value,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                <option value=\"-1\">Select Customer Type</option>\r\n                                <option value=\"Billing\">Billing</option>\r\n                                <option value=\"Shipping\">Shipping</option>\r\n                              </CSelect>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n                              <CLabel>Address 1</CLabel>\r\n                              <CInput\r\n                                id=\"add1\"\r\n                                placeholder=\"Address 1\"\r\n                                value={CustomerAddress.add1}\r\n                                onChange={(event) => {\r\n                                  setCustomerAddress({\r\n                                    ...CustomerAddress,\r\n                                    add1: event.target.value,\r\n                                  });\r\n                                }}\r\n                              />\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n                              <CLabel>Address 2</CLabel>\r\n                              <CInput\r\n                                id=\"add2\"\r\n                                placeholder=\"Address 2\"\r\n                                value={CustomerAddress.add2}\r\n                                onChange={(event) => {\r\n                                  setCustomerAddress({\r\n                                    ...CustomerAddress,\r\n                                    add2: event.target.value,\r\n                                  });\r\n                                }}\r\n                              />\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n                              <CLabel>Address 3</CLabel>\r\n                              <CInput\r\n                                id=\"add3\"\r\n                                placeholder=\"Address 3\"\r\n                                value={CustomerAddress.add3}\r\n                                onChange={(event) => {\r\n                                  setCustomerAddress({\r\n                                    ...CustomerAddress,\r\n                                    add3: event.target.value,\r\n                                  });\r\n                                }}\r\n                              />\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n                              <CLabel>Zip Code</CLabel>\r\n                              <CInput\r\n                                id=\"zip\"\r\n                                placeholder=\"Zip Code\"\r\n                                value={CustomerAddress.zip}\r\n                                onChange={(event) => {\r\n                                  setCustomerAddress({\r\n                                    ...CustomerAddress,\r\n                                    zip: event.target.value,\r\n                                  });\r\n                                }}\r\n                              />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n\r\n                          {CustomerAddress.UpdateButton && <Updatebtn />}\r\n                          {CustomerAddress.AddButton && <Addbtn />}\r\n                        </CForm>\r\n                      </CCardBody>\r\n                    </CCard>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n            </CCard>\r\n          </div>\r\n        </CCol>\r\n\r\n        <CCol xs=\"12\" sm=\"12\" md=\"8\" lg=\"8\" xl=\"8\" className=\"mb-3 mb-xl-0\">\r\n          <div id=\"country-table\">\r\n            <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol>\r\n                    <CCard>\r\n                      <CCardHeader>Added Address</CCardHeader>\r\n                      <CCardBody>\r\n                        <CDataTable\r\n                          items={CustomerAddress.ResponseData}\r\n                          fields={fields}\r\n                          hover\r\n                          striped\r\n                          bordered\r\n                          tableFilter={table}\r\n                          itemsPerPageSelect={items}\r\n                          sorter\r\n                          size=\"sm\"\r\n                          itemsPerPage={10}\r\n                          pagination\r\n                          scopedSlots={{\r\n                            Action: (item) => (\r\n                              <td>\r\n                                <CButton\r\n                                  onClick={() => {\r\n                                    EditAddress(\r\n                                      item.CUSTOMER_ADDRESS_PKID,\r\n                                      item.CUSTOMER_ADDRESS_ADDRESS1,\r\n                                      item.CUSTOMER_ADDRESS_ADDRESS2,\r\n                                      item.CUSTOMER_ADDRESS_ADDRESS3,\r\n                                      item.CUSTOMER_ADDRESS_ZIP_CODE,\r\n                                      item.CUSTOMER_ADDRESS_TYPE\r\n                                    );\r\n                                  }}\r\n                                  size=\"sm\"\r\n                                  id=\"war-btn\"\r\n                                >\r\n                                  <EditIcon />\r\n                                  {item.status}\r\n                                </CButton>\r\n                                <CButton\r\n                                  size=\"sm\"\r\n                                  onClick={() => {\r\n                                    DeleteAddress(item.CUSTOMER_ADDRESS_PKID);\r\n                                  }}\r\n                                  id=\"war-btn1\"\r\n                                >\r\n                                  <DeleteSharpIcon />\r\n                                  {item.status}\r\n                                </CButton>\r\n                              </td>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      </CCardBody>\r\n                    </CCard>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n            </CCard>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCustomerAddress;\r\n"],"sourceRoot":""}