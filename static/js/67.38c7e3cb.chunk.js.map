{"version":3,"sources":["services/service.js","../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/icons/DeleteSharp.js","views/OrderManagement/OrderTypeNew.js"],"names":["MyApiUrl","ViewImg","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","table","placeholder","label","items","values","fields","key","OrderTypeNew","useState","typePkid","CustomerType","ResponseData","AddButton","UpdateButton","Kimo","setKimo","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","AddOrderType","fire","icon","title","document","getElementById","className","obj","ORDER_TYPE_NAME","axios","post","then","response","data","confirmButtonText","fetchData","UpdateOrderType","put","method","url","headers","map","item","catch","error","console","log","Updatebtn","type","onClick","size","id","Addbtn","useEffect","style","marginTop","xs","sm","md","lg","xl","boxShadow","action","encType","row","name","onChange","e","target","hover","striped","bordered","tableFilter","itemsPerPageSelect","sorter","itemsPerPage","pagination","scopedSlots","Action","Emptype","ORDER_TYPE_PKID","status","confirm","params","language_code"],"mappings":"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","file":"static/js/67.38c7e3cb.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 21h12V7H6v14zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteSharp');\n\nexports.default = _default;","/**\r\n * @author KimoSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-25 18:21:31\r\n * @modify date 2021-12-07 12:26:04\r\n * @desc [description]\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CForm,\r\n    CFormGroup,\r\n    CInput,\r\n    CRow,\r\n    CDataTable,\r\n    CLabel,\r\n} from \"@coreui/react\";\r\n\r\nimport { MyApiUrl } from \"src/services/service\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields = [{ key: \"Action\" }, { key: \"Order Type\" }];\r\n\r\nconst OrderTypeNew = () => {\r\n    const [Kimo, setKimo] = useState({\r\n        typePkid: \"\",\r\n        CustomerType: \"\",\r\n        ResponseData: [],\r\n        AddButton: true,\r\n        UpdateButton: false,\r\n    });\r\n\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: \"top-end\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n        timerProgressBar: true,\r\n        didOpen: (toast) => {\r\n            toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n            toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n        },\r\n    });\r\n\r\n    const AddOrderType = () => {\r\n        if (Kimo.CustomerType == \"\" || Kimo.CustomerType == null) {\r\n            Toast.fire({\r\n                icon: \"warning\",\r\n                title: \"Enter Order Type!\",\r\n            });\r\n        } else {\r\n            document.getElementById(\"divLoading\").className = \"show\";\r\n            const obj = {\r\n                ORDER_TYPE_NAME: Kimo.CustomerType,\r\n            };\r\n\r\n            axios.post(MyApiUrl + \"OrderTypes\", obj).then((response) => {\r\n                if (response.data == \"Already Existed!\") {\r\n                    Swal.fire({\r\n                        title: \"Order Type Already Exist!\",\r\n                        icon: \"info\",\r\n                        confirmButtonText: \"OK\",\r\n                    });\r\n                    fetchData();\r\n                    setKimo({\r\n                        ...Kimo,\r\n                        typePkid: \"\",\r\n                        CustomerType: \"\",\r\n                        AddButton: true,\r\n                        UpdateButton: false,\r\n                    });\r\n                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                } else if (response.data == true) {\r\n                    Swal.fire({\r\n                        title: \"Order Type Added Successfully!\",\r\n                        icon: \"success\",\r\n                        confirmButtonText: \"OK\",\r\n                    });\r\n                    fetchData();\r\n                    setKimo({\r\n                        ...Kimo,\r\n                        typePkid: \"\",\r\n                        CustomerType: \"\",\r\n                        AddButton: true,\r\n                        UpdateButton: false,\r\n                    });\r\n                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                } else if (response.data == false) {\r\n                    Swal.fire({\r\n                        title: \"Order Type Failed To Add!\",\r\n                        icon: \"error\",\r\n                        confirmButtonText: \"OK\",\r\n                    });\r\n                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const UpdateOrderType = () => {\r\n        if (Kimo.CustomerType == \"\" || Kimo.CustomerType == null) {\r\n            Toast.fire({\r\n                icon: \"warning\",\r\n                title: \"Enter Order Type!\",\r\n            });\r\n        } else {\r\n            document.getElementById(\"divLoading\").className = \"show\";\r\n            const obj = {\r\n                ORDER_TYPE_NAME: Kimo.CustomerType,\r\n            };\r\n            axios\r\n                .put(MyApiUrl + \"OrderTypes/\" + Kimo.typePkid, obj)\r\n                .then((response) => {\r\n                    if (response.data === false) {\r\n                        Swal.fire({\r\n                            title: \"Order Type Not Updated!\",\r\n                            icon: \"warning\",\r\n                            confirmButtonText: \"OK\",\r\n                        });\r\n\r\n                        fetchData();\r\n                        setKimo({\r\n                            ...Kimo,\r\n                            typePkid: \"\",\r\n                            CustomerType: \"\",\r\n                            AddButton: true,\r\n                            UpdateButton: false,\r\n                        });\r\n                        document.getElementById(\"divLoading\").className = \"hide\";\r\n                    } else {\r\n                        Swal.fire({\r\n                            title: \"Order Type Updated!\",\r\n                            icon: \"success\",\r\n                            confirmButtonText: \"OK\",\r\n                        });\r\n                        setKimo({\r\n                            ...Kimo,\r\n                            typePkid: \"\",\r\n                            CustomerType: \"\",\r\n                            AddButton: true,\r\n                            UpdateButton: false,\r\n                        });\r\n                        fetchData();\r\n                        document.getElementById(\"divLoading\").className = \"hide\";\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    const EditOrderType = (id, Emptype) => {\r\n        setKimo({\r\n            ...Kimo,\r\n            typePkid: id,\r\n            CustomerType: Emptype,\r\n            AddButton: false,\r\n            UpdateButton: true,\r\n        });\r\n    };\r\n\r\n    const DeleteOrderType = (id) => {\r\n        // eslint-disable-next-line no-restricted-globals\r\n        var res = confirm(\"Are you sure you want to delete\");\r\n        if (res) {\r\n            document.getElementById(\"divLoading\").className = \"show\";\r\n            axios({\r\n                method: \"DELETE\",\r\n                url: MyApiUrl + \"OrderTypes/\" + id + \"\",\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                },\r\n                params: {\r\n                    language_code: \"en\",\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    if (response.data === true) {\r\n                        Swal.fire({\r\n                            title: \"Order Type Type Deleted!\",\r\n                            icon: \"success\",\r\n                            confirmButtonText: \"OK\",\r\n                        });\r\n\r\n                        fetchData();\r\n                        document.getElementById(\"divLoading\").className = \"hide\";\r\n                    } else {\r\n                        Swal.fire({\r\n                            title: \"Order Type Failed To Deleted!\",\r\n                            icon: \"error\",\r\n                            confirmButtonText: \"OK\",\r\n                        });\r\n                        document.getElementById(\"divLoading\").className = \"hide\";\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const fetchData = () => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"OrderTypes\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                const items = response.data.map((item) => {\r\n                    return {\r\n                        ...item,\r\n                        \"Order Type\": item.ORDER_TYPE_NAME,\r\n                    };\r\n                });\r\n                setKimo({\r\n                    ...Kimo,\r\n                    ResponseData: items,\r\n                    typePkid: \"\",\r\n                    CustomerType: \"\",\r\n                    AddButton: true,\r\n                    UpdateButton: false,\r\n                });\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const Updatebtn = () => (\r\n        <CButton\r\n            type=\"button\"\r\n            onClick={UpdateOrderType}\r\n            size=\"md\"\r\n            id=\"Add-btn\"\r\n        >\r\n            Update\r\n        </CButton>\r\n    );\r\n\r\n    const Addbtn = () => (\r\n        <CButton type=\"button\" onClick={AddOrderType} size=\"md\" id=\"Add-btn\">\r\n            Add\r\n        </CButton>\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"divLoading\"> </div>\r\n            <h1 id=\"ccmaster\">Order Type</h1>\r\n            <CRow style={{ marginTop: \"3%\" }}>\r\n                <CCol xs=\"12\" sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\" className=\"mb-3 mb-xl-0\">\r\n                    <div id=\"country-master\">\r\n                        <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n                            <CCardBody>\r\n                                <CRow>\r\n                                    <CCol>\r\n                                        <CCard>\r\n                                            <CCardHeader>Add Order Type</CCardHeader>\r\n                                            <CCardBody>\r\n                                                <CForm\r\n                                                    action=\"\"\r\n                                                    method=\"post\"\r\n                                                    encType=\"multipart/form-data\"\r\n                                                    className=\"form-horizontal\"\r\n                                                >\r\n                                                    <CFormGroup row>\r\n                                                        <CCol xs=\"12\" md=\"12\">\r\n                                                            <CLabel>Order Type</CLabel>\r\n                                                            <CInput\r\n                                                                id=\"text-input1\"\r\n                                                                name=\"text-input\"\r\n                                                                placeholder=\"Order Type\"\r\n                                                                type=\"text\"\r\n                                                                value={Kimo.CustomerType}\r\n                                                                onChange={(e) => {\r\n                                                                    setKimo({\r\n                                                                        ...Kimo,\r\n                                                                        CustomerType: e.target.value,\r\n                                                                    });\r\n                                                                }}\r\n                                                            />\r\n                                                        </CCol>\r\n                                                    </CFormGroup>\r\n\r\n                                                    {Kimo.UpdateButton && <Updatebtn />}\r\n                                                    {Kimo.AddButton && <Addbtn />}\r\n                                                </CForm>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CCol>\r\n                                </CRow>\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </div>\r\n                </CCol>\r\n\r\n                <CCol xs=\"12\" sm=\"12\" md=\"8\" lg=\"8\" xl=\"8\" className=\"mb-3 mb-xl-0\">\r\n                    <div id=\"country-table\">\r\n                        <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n                            <CCardBody>\r\n                                <CRow>\r\n                                    <CCol>\r\n                                        <CCard>\r\n                                            <CCardHeader>Added Order Type</CCardHeader>\r\n                                            <CCardBody>\r\n                                                <CDataTable\r\n                                                    items={Kimo.ResponseData}\r\n                                                    fields={fields}\r\n                                                    hover\r\n                                                    striped\r\n                                                    bordered\r\n                                                    tableFilter={table}\r\n                                                    itemsPerPageSelect={items}\r\n                                                    sorter\r\n                                                    size=\"sm\"\r\n                                                    itemsPerPage={10}\r\n                                                    pagination\r\n                                                    scopedSlots={{\r\n\r\n                                                        Action: (item) => (\r\n                                                            <td>\r\n                                                                <CButton\r\n                                                                    onClick={() => {\r\n                                                                        EditOrderType(\r\n                                                                            item.ORDER_TYPE_PKID,\r\n                                                                            item.ORDER_TYPE_NAME\r\n                                                                        );\r\n                                                                    }}\r\n                                                                    size=\"sm\"\r\n                                                                    id=\"war-btn\"\r\n                                                                >\r\n                                                                    <EditIcon />\r\n                                                                    {item.status}\r\n                                                                </CButton>\r\n                                                                <CButton\r\n                                                                    size=\"sm\"\r\n                                                                    onClick={() => {\r\n                                                                        DeleteOrderType(\r\n                                                                            item.ORDER_TYPE_PKID\r\n                                                                        );\r\n                                                                    }}\r\n                                                                    id=\"war-btn1\"\r\n                                                                >\r\n                                                                    <DeleteSharpIcon />\r\n                                                                    {item.status}\r\n                                                                </CButton>\r\n                                                            </td>\r\n                                                        ),\r\n                                                    }}\r\n                                                />\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CCol>\r\n                                </CRow>\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderTypeNew;\r\n"],"sourceRoot":""}