{"version":3,"sources":["services/service.js","views/EmployeeMaster/Employee.js"],"names":["MyApiUrl","ViewImg","Employee","history","useHistory","useState","EmptypeData","setEmptypeData","EmpSubtypeData","setEmpSubtypeData","EmpHQData","setEmpHQData","CompanyData","setCompanyData","CountryData","setCountryData","StateData","setStateData","CityData","setCityData","AreaData","setAreaData","EmployeeManagers","setEmployeeManagers","EmployeeOtherCoveredAreaCounty","setEmployeeOtherCoveredAreaCounty","EmployeeOtherCoveredAreaState","setEmployeeOtherCoveredAreaState","EmployeeOtherCoveredAreaCity","setEmployeeOtherCoveredAreaCity","EmployeeOtherCoveredAreaArea","setEmployeeOtherCoveredAreaArea","EmployeeUploadedOtherDocs","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","selectedFiles","setselectedFiles","ProfilePic","setProfilePic","uploadFiles","i","length","upload","idx","file","formData","FormData","append","axios","post","then","response","push","data","Emptype","EmpSubtype","EmpHQ","Company","Name","Email","Email2","Designation","Qualification","JoiningDate","PreviousExp","DateofBirth","PhoCode","PhoneNumber","AltPhoCode","AlterNateNumber","Region","password","Gender","ReportingTo","Profile","Ismanager","salary","dateofreleaving","address1","address2","address3","ZipCode","altaddress1","altaddress2","altaddress3","altZipCode","EmployeeFeilds","setEmployeeFeilds","GetEmployeeHQ","document","getElementById","className","method","url","headers","Option","map","item","value","HQ_PKID","HQ_NAME","catch","error","console","log","GetAllCountry","useCallback","params","language_code","GetState","event","a","target","checked","x","obj","CountryId","filter","GetCity","StateId","GetArea","DistrictId","SelectedArea","useEffect","EMPLOYEE_TYPE_PKID","EMPLOYEE_TYPE_NAME","COMPANY_PKID","COMPANY_NAME","EMPLOYEE_PKID","EMPLOYEE_NAME","id","style","marginTop","md","boxShadow","to","size","encType","autoComplete","htmlFor","type","placeholder","onChange","replace","custom","name","COUNTRY_CODE","paddingRight","readOnly","fontWeight","padding","borderRadius","paddingLeft","maxLength","test","autocomplete","xs","EMPLOYEE_SUB_TYPE_PKID","EMPLOYEE_SUB_TYPE_NAME","files","paddingBottom","marginBottom","borderRight","borderTop","borderBottom","fontSize","textAlign","textTransform","onDrop","getRootProps","getInputProps","Array","isArray","join","disabled","onClick","paddingTop","fontFamily","COUNTRY_PKID","display","COUNTRY_NAME","STATE_PKID","STATE_NAME","DISTRICT_PKID","DISTRICT_NAME","TALUK_PKID","TALUK_NAME","lastIndexOf","fire","icon","title","PreviousExperience","OtherDocs","CoveredArea","confirmButtonText","color","float"],"mappings":"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","file":"static/js/124.ed906be2.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","/*\r\n * @Author: ---- KIMO a.k.a KIMOSABE ----\r\n * @Date: 2022-02-12 16:16:24\r\n * @Last Modified by: ---- KIMO a.k.a KIMOSABE ----\r\n * @Last Modified time: 2022-02-12 18:23:52\r\n */ \r\n\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CButton,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CSelect,\r\n  CLink,\r\n} from \"@coreui/react\";\r\n\r\nimport { MyApiUrl } from \"src/services/service\";\r\nimport \"../../../src/style.css\";\r\nimport \"../../style.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Employee = () => {\r\n  let history = useHistory();\r\n  const [EmptypeData, setEmptypeData] = useState([]);\r\n  const [EmpSubtypeData, setEmpSubtypeData] = useState([]);\r\n  const [EmpHQData, setEmpHQData] = useState([]);\r\n  const [CompanyData, setCompanyData] = useState([]);\r\n  const [CountryData, setCountryData] = useState([]);\r\n  const [StateData, setStateData] = useState([]);\r\n  const [CityData, setCityData] = useState([]);\r\n  const [AreaData, setAreaData] = useState([]);\r\n  const [EmployeeManagers, setEmployeeManagers] = useState([]);\r\n\r\n  const [EmployeeOtherCoveredAreaCounty, setEmployeeOtherCoveredAreaCounty] =\r\n    useState([]);\r\n  const [EmployeeOtherCoveredAreaState, setEmployeeOtherCoveredAreaState] =\r\n    useState([]);\r\n  const [EmployeeOtherCoveredAreaCity, setEmployeeOtherCoveredAreaCity] =\r\n    useState([]);\r\n  const [EmployeeOtherCoveredAreaArea, setEmployeeOtherCoveredAreaArea] =\r\n    useState([]);\r\n\r\n  const [EmployeeUploadedOtherDocs, setEmployeeUploadedOtherDocs] = useState(\r\n    []\r\n  );\r\n\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  const [selectedFiles, setselectedFiles] = useState();\r\n\r\n  const [ProfilePic, setProfilePic] = useState();\r\n\r\n  const onDrop = (files) => {\r\n    if (files.length > 0) {\r\n      setselectedFiles(files);\r\n    }\r\n  };\r\n\r\n  const uploadFiles = () => {\r\n    for (let i = 0; i < selectedFiles.length; i++) {\r\n      upload(i, selectedFiles[i]);\r\n    }\r\n  };\r\n\r\n  const upload = (idx, file) => {\r\n    var formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    axios.post(MyApiUrl + \"upload\", formData).then((response) => {\r\n      EmployeeUploadedOtherDocs.push(response.data);\r\n    });\r\n  };\r\n\r\n  const [EmployeeFeilds, setEmployeeFeilds] = useState({\r\n    Emptype: \"-1\",\r\n    EmpSubtype: \"-1\",\r\n    EmpHQ: \"-1\",\r\n    Company: \"-1\",\r\n    Name: \"\",\r\n    Email: \"\",\r\n    Email2: \"\",\r\n    Designation: \"\",\r\n    Qualification: \"\",\r\n    JoiningDate: \"\",\r\n    PreviousExp: \"\",\r\n    DateofBirth: \"\",\r\n    PhoCode: \"\",\r\n    PhoneNumber: \"\",\r\n    AltPhoCode: \"\",\r\n    AlterNateNumber: \"\",\r\n    Region: \"\",\r\n    password: \"\",\r\n    Gender: \"\",\r\n    ReportingTo: \"\",\r\n    Profile: \"\",\r\n    Ismanager: \"\",\r\n    salary: \"\",\r\n    dateofreleaving: \"\",\r\n    address1: \"\",\r\n    address2: \"\",\r\n    address3: \"\",\r\n    ZipCode: \"\",\r\n    altaddress1: \"\",\r\n    altaddress2: \"\",\r\n    altaddress3: \"\",\r\n    altZipCode: \"\",\r\n  });\r\n\r\n  const GetCountryCode = (id) => {\r\n    if (id == 0 || id == \"0\") {\r\n\r\n    } else {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      axios({\r\n        method: \"GET\",\r\n        url: MyApiUrl + \"CountryCodeByHQ/\" + id + \"\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          setEmployeeFeilds({\r\n            ...EmployeeFeilds,\r\n            PhoCode: response.data[0].COUNTRY_CODE,\r\n            AltPhoCode: response.data[0].COUNTRY_CODE,\r\n            EmpHQ: id,\r\n          });\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  const GetEmptype = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"emptypes\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        const Option = response.data.map((item, i) => (\r\n          <option key={i} value={item.EMPLOYEE_TYPE_PKID}>\r\n            {item.EMPLOYEE_TYPE_NAME}\r\n          </option>\r\n        ));\r\n        setEmptypeData(Option);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const GetEmployeeSubTypeById = (id) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"empsubtypesById/\" + id,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const Option = response.data.map((item, i) => (\r\n          <option key={i} value={item.EMPLOYEE_SUB_TYPE_PKID}>\r\n            {item.EMPLOYEE_SUB_TYPE_NAME}\r\n          </option>\r\n        ));\r\n        setEmpSubtypeData(Option);\r\n        GetEmployeeHQ();\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const formatDate = (date) => {\r\n    var d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n\r\n    return [year, month, day].join(\"-\");\r\n  };\r\n\r\n  const GetEmployeeHQ = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"hq\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const Option = response.data.map((item, i) => (\r\n          <option key={i} value={item.HQ_PKID}>\r\n            {item.HQ_NAME}\r\n          </option>\r\n        ));\r\n        setEmpHQData(Option);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const GetAllCompanies = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"companies\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const Option = response.data.map((item, i) => (\r\n          <option key={i} value={item.COMPANY_PKID}>\r\n            {item.COMPANY_NAME}\r\n          </option>\r\n        ));\r\n        setCompanyData(Option);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const AddEmployee = () => {\r\n    let lastAtPos = EmployeeFeilds.Email.lastIndexOf(\"@\");\r\n    let lastDotPos = EmployeeFeilds.Email.lastIndexOf(\".\");\r\n\r\n    let lastAtPos1 = EmployeeFeilds.Email2.lastIndexOf(\"@\");\r\n    let lastDotPos1 = EmployeeFeilds.Email2.lastIndexOf(\".\");\r\n\r\n    if (EmployeeFeilds.Name === \"\" || EmployeeFeilds.Name === null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter Employee Name!\",\r\n      });\r\n    } else if (EmployeeFeilds.Email === \"\" || EmployeeFeilds.Email === null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter Employee Email!\",\r\n      });\r\n    } else if (EmployeeFeilds.EmpHQ === \"-1\") {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select HQ!\",\r\n      });\r\n    } else if (EmployeeFeilds.Company === \"-1\") {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select Company!\",\r\n      });\r\n    } else if (\r\n      EmployeeFeilds.Ismanager === \"-1\" ||\r\n      EmployeeFeilds.Ismanager === \"\"\r\n    ) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter Employee Manager Type!\",\r\n      });\r\n    } else if (EmployeeFeilds.Emptype === \"-1\") {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select Employee Type!\",\r\n      });\r\n    } else if (EmployeeFeilds.EmpSubtype === \"-1\") {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select Sub Employee Type!\",\r\n      });\r\n    }\r\n    // else if (\r\n    //   !(\r\n    //     lastAtPos < lastDotPos &&\r\n    //     lastAtPos > 0 &&\r\n    //     EmployeeFeilds.Email.indexOf(\"@@\") === -1 &&\r\n    //     lastDotPos > 2 &&\r\n    //     EmployeeFeilds.Email.length - lastDotPos > 2\r\n    //   )\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Valid Employee Email!\",\r\n    //   });\r\n    // } else if (EmployeeFeilds.Email2 === \"\" || EmployeeFeilds.Email2 === null) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Alternate Employee Email!\",\r\n    //   });\r\n    // } else if (\r\n    //   !(\r\n    //     lastAtPos1 < lastDotPos1 &&\r\n    //     lastAtPos1 > 0 &&\r\n    //     EmployeeFeilds.Email2.indexOf(\"@@\") === -1 &&\r\n    //     lastDotPos1 > 2 &&\r\n    //     EmployeeFeilds.Email2.length - lastDotPos1 > 2\r\n    //   )\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Valid Alternate Employee Email!\",\r\n    //   });\r\n    // } \r\n    else if (\r\n      EmployeeFeilds.PhoCode === \"\" ||\r\n      EmployeeFeilds.PhoCode === null\r\n    ) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter Country Code Of The Number!\",\r\n      });\r\n    } else if (\r\n      EmployeeFeilds.PhoneNumber === \"\" ||\r\n      EmployeeFeilds.PhoneNumber === null\r\n    ) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter Employee Phone Number!\",\r\n      });\r\n    } else if (EmployeeFeilds.PhoneNumber.length !== 10) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter Valid Phone Number!\",\r\n      });\r\n    } else if (\r\n      EmployeeFeilds.AltPhoCode === \"\" ||\r\n      EmployeeFeilds.AltPhoCode === null\r\n    ) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter Country Code Of The Alternate Number!\",\r\n      });\r\n     } \r\n    // else if (\r\n    //   EmployeeFeilds.AlterNateNumber === \"\" ||\r\n    //   EmployeeFeilds.AlterNateNumber === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee Alternate Phone Number!\",\r\n    //   });\r\n    // } \r\n    else if (EmployeeFeilds.AlterNateNumber.length !== 10) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter Valid Alternate Phone Number!\",\r\n      });\r\n    }\r\n    // else if (\r\n    //   EmployeeFeilds.Designation === \"\" ||\r\n    //   EmployeeFeilds.Designation == null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee Designation!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.Qualification === \"\" ||\r\n    //   EmployeeFeilds.Qualification === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee Qualification!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.JoiningDate === \"\" ||\r\n    //   EmployeeFeilds.JoiningDate === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee JoiningDate!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.DateofBirth === \"\" ||\r\n    //   EmployeeFeilds.DateofBirth === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee DateofBirth!\",\r\n    //   });\r\n    // } else if (EmployeeFeilds.Region === \"\" || EmployeeFeilds.Region === null) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee Region!\",\r\n    //   });\r\n    // } else if (EmployeeFeilds.Gender === \"-1\" || EmployeeFeilds.Gender === \"\") {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Select Employee Gender!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.ReportingTo === \"-1\" ||\r\n    //   EmployeeFeilds.ReportingTo === \"\"\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Select Employee Reporting!\",\r\n    //   });\r\n    // } \r\n\r\n    else if (\r\n      EmployeeFeilds.password === \"\" ||\r\n      EmployeeFeilds.password === null\r\n    ) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter Employee password!\",\r\n      });\r\n    }\r\n    // else if (ProfilePic === \"\" || ProfilePic === null) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Select Employee Profile Pic!\",\r\n    //   });\r\n    // } \r\n\r\n    // else if (EmployeeFeilds.salary === \"\" || EmployeeFeilds.salary === null) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee Salary!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.dateofreleaving === \"\" ||\r\n    //   EmployeeFeilds.dateofreleaving === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee Releaving Date!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.address1 === \"\" ||\r\n    //   EmployeeFeilds.address1 === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee address1!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.address2 === \"\" ||\r\n    //   EmployeeFeilds.address2 === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee address2!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.address3 === \"\" ||\r\n    //   EmployeeFeilds.address3 === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee address 3!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.ZipCode === \"\" ||\r\n    //   EmployeeFeilds.ZipCode === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee address Zipcode!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.altaddress1 === \"\" ||\r\n    //   EmployeeFeilds.altaddress1 === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee alternate address1!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.altaddress2 === \"\" ||\r\n    //   EmployeeFeilds.altaddress2 === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee alternate address 2!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.altaddress3 === \"\" ||\r\n    //   EmployeeFeilds.altaddress3 === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee alternate address 3!\",\r\n    //   });\r\n    // } else if (\r\n    //   EmployeeFeilds.altZipCode === \"\" ||\r\n    //   EmployeeFeilds.altZipCode === null\r\n    // ) {\r\n    //   Toast.fire({\r\n    //     icon: \"warning\",\r\n    //     title: \"Please Enter Employee alternate address Zipcode!\",\r\n    //   });\r\n    // } \r\n    else {\r\n      if (EmployeeOtherCoveredAreaArea.length === 0) {\r\n        Toast.fire({\r\n          icon: \"warning\",\r\n          title: \"Please Select Atleast One Covering Area!\",\r\n        });\r\n      } else {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        var obj = {\r\n          Emptype: EmployeeFeilds.Emptype,\r\n          EmpSubtype: EmployeeFeilds.EmpSubtype,\r\n          EmpHQ: EmployeeFeilds.EmpHQ,\r\n          Company: EmployeeFeilds.Company,\r\n          Name: EmployeeFeilds.Name,\r\n          Email: EmployeeFeilds.Email,\r\n          Email2: EmployeeFeilds.Email2,\r\n          Designation: EmployeeFeilds.Designation,\r\n          Qualification: EmployeeFeilds.Qualification,\r\n          JoiningDate: EmployeeFeilds.JoiningDate,\r\n          PreviousExperience: EmployeeFeilds.PreviousExp,\r\n          DateofBirth: EmployeeFeilds.DateofBirth,\r\n          PhoCode: EmployeeFeilds.PhoCode,\r\n          PhoneNumber: EmployeeFeilds.PhoneNumber,\r\n          AltPhoCode: EmployeeFeilds.AltPhoCode,\r\n          AlterNateNumber: EmployeeFeilds.AlterNateNumber,\r\n          Region: EmployeeFeilds.Region,\r\n          password: EmployeeFeilds.password,\r\n          Gender: EmployeeFeilds.Gender,\r\n          ReportingTo: EmployeeFeilds.ReportingTo,\r\n          Ismanager: EmployeeFeilds.Ismanager,\r\n          salary: EmployeeFeilds.salary,\r\n          dateofreleaving: EmployeeFeilds.dateofreleaving,\r\n          address1: EmployeeFeilds.address1,\r\n          address2: EmployeeFeilds.address2,\r\n          address3: EmployeeFeilds.address3,\r\n          ZipCode: EmployeeFeilds.ZipCode,\r\n          altaddress1: EmployeeFeilds.altaddress1,\r\n          altaddress2: EmployeeFeilds.altaddress2,\r\n          altaddress3: EmployeeFeilds.altaddress3,\r\n          altZipCode: EmployeeFeilds.altZipCode,\r\n          Profile: ProfilePic,\r\n          OtherDocs: EmployeeUploadedOtherDocs,\r\n          CoveredArea: EmployeeOtherCoveredAreaArea,\r\n        };\r\n        console.log(obj,\"this is emplooye table data\");\r\n        axios.post(MyApiUrl + \"emps/\", obj).then((response) => {\r\n          if (response.data === true) {\r\n            Swal.fire({\r\n              title: \"Employee Added!\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n            document.getElementById(\"divLoading\").className = \"hide\";\r\n            history.push(\"/ViewEmployees\");\r\n          } else {\r\n            Swal.fire({\r\n              title: \"Already Existed!\",\r\n              icon: \"error\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n            document.getElementById(\"divLoading\").className = \"hide\";\r\n          }\r\n        });\r\n      }\r\n\r\n    }\r\n  };\r\n\r\n  const GetAllCountry = useCallback(() => {\r\n    // Counter state is incremented\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"countries\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      params: {\r\n        language_code: \"en\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setCountryData(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [CountryData]);\r\n\r\n  const GetState = async (event) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    if (event.target.checked === true) {\r\n      var x = [...EmployeeOtherCoveredAreaCounty, event.target.value];\r\n      setEmployeeOtherCoveredAreaCounty(x);\r\n      var obj = {\r\n        CountryId: x,\r\n      };\r\n      axios.post(MyApiUrl + \"statesCheckBox/\", obj).then((response) => {\r\n        setStateData(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      });\r\n    } else {\r\n      setEmployeeOtherCoveredAreaCounty(\r\n        EmployeeOtherCoveredAreaCounty.filter(\r\n          (item) => item !== event.target.value\r\n        )\r\n      );\r\n      if (\r\n        EmployeeOtherCoveredAreaCounty.filter(\r\n          (item) => item !== event.target.value\r\n        ).length === 0\r\n      ) {\r\n        setStateData([]);\r\n      } else {\r\n        var x = EmployeeOtherCoveredAreaCounty.filter(\r\n          (item) => item !== event.target.value\r\n        );\r\n        var obj = {\r\n          CountryId: x,\r\n        };\r\n        axios.post(MyApiUrl + \"statesCheckBox/\", obj).then((response) => {\r\n          setStateData(response.data);\r\n        });\r\n      }\r\n      document.getElementById(\"divLoading\").className = \"hide\";\r\n    }\r\n  };\r\n\r\n  const GetCity = (event) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    if (event.target.checked === true) {\r\n      var x = [...EmployeeOtherCoveredAreaState, event.target.value];\r\n      setEmployeeOtherCoveredAreaState(x);\r\n\r\n      var obj = {\r\n        CountryId: EmployeeOtherCoveredAreaCounty,\r\n        StateId: x,\r\n      };\r\n\r\n      axios.post(MyApiUrl + \"districtsCheckbox/\", obj).then((response) => {\r\n        setCityData(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      });\r\n    } else {\r\n      setEmployeeOtherCoveredAreaState(\r\n        EmployeeOtherCoveredAreaState.filter(\r\n          (item) => item !== event.target.value\r\n        )\r\n      );\r\n      if (\r\n        EmployeeOtherCoveredAreaState.filter(\r\n          (item) => item !== event.target.value\r\n        ).length === 0\r\n      ) {\r\n        setCityData([]);\r\n      } else {\r\n        var x = EmployeeOtherCoveredAreaState.filter(\r\n          (item) => item !== event.target.value\r\n        );\r\n        var obj = {\r\n          CountryId: x,\r\n        };\r\n        axios.post(MyApiUrl + \"districtsCheckbox/\", obj).then((response) => {\r\n          setCityData(response.data);\r\n        });\r\n      }\r\n      document.getElementById(\"divLoading\").className = \"hide\";\r\n    }\r\n  };\r\n\r\n  const GetArea = (event) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    if (event.target.checked === true) {\r\n      var x = [...EmployeeOtherCoveredAreaCity, event.target.value];\r\n      setEmployeeOtherCoveredAreaCity(x);\r\n      var obj = {\r\n        CountryId: EmployeeOtherCoveredAreaCounty,\r\n        StateId: EmployeeOtherCoveredAreaState,\r\n        DistrictId: x,\r\n      };\r\n      axios.post(MyApiUrl + \"taluksCheckbox/\", obj).then((response) => {\r\n        setAreaData(response.data);\r\n      });\r\n      document.getElementById(\"divLoading\").className = \"hide\";\r\n    } else {\r\n      setEmployeeOtherCoveredAreaCity(\r\n        EmployeeOtherCoveredAreaCity.filter(\r\n          (item) => item !== event.target.value\r\n        )\r\n      );\r\n      if (\r\n        EmployeeOtherCoveredAreaCity.filter(\r\n          (item) => item !== event.target.value\r\n        ).length === 0\r\n      ) {\r\n        setAreaData([]);\r\n      } else {\r\n        var x = EmployeeOtherCoveredAreaCity.filter(\r\n          (item) => item !== event.target.value\r\n        );\r\n        var obj = {\r\n          CountryId: x,\r\n        };\r\n        axios.post(MyApiUrl + \"taluksCheckbox/\", obj).then((response) => {\r\n          setAreaData(response.data);\r\n        });\r\n      }\r\n      document.getElementById(\"divLoading\").className = \"hide\";\r\n    }\r\n  };\r\n\r\n  const SelectedArea = (event) => {\r\n    if (event.target.checked === true) {\r\n      var x = [...EmployeeOtherCoveredAreaArea, event.target.value];\r\n      setEmployeeOtherCoveredAreaArea(x);\r\n    } else {\r\n      setEmployeeOtherCoveredAreaArea(\r\n        EmployeeOtherCoveredAreaArea.filter(\r\n          (item) => item !== event.target.value\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const GetProfilePic = (event) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    var formData = new FormData();\r\n    formData.append(\"file\", event.target.files[0]);\r\n    axios.post(MyApiUrl + \"upload\", formData).then((response) => {\r\n      setProfilePic(response.data);\r\n      document.getElementById(\"divLoading\").className = \"hide\";\r\n    });\r\n  };\r\n\r\n  const GetAllManagers = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getAllManagers\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        const Option = response.data.map((item, i) => (\r\n          <option key={i} value={item.EMPLOYEE_PKID}>\r\n            {item.EMPLOYEE_NAME}\r\n          </option>\r\n        ));\r\n        setEmployeeManagers(Option);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    GetEmptype();\r\n    GetEmployeeHQ();\r\n    GetAllCompanies();\r\n    GetAllCountry();\r\n    GetAllManagers();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"divLoading\"> </div>\r\n      <h1 id=\"ccmaster\">Add Employee</h1>\r\n      <CRow style={{ marginTop: \"3%\" }}>\r\n        <CCol md=\"12\">\r\n          <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol md=\"1\">\r\n                  <div>\r\n                    <CLink to=\"/ViewEmployees\">\r\n                      <CButton size=\"sm\" id=\"AddEmp\">\r\n                        Back\r\n                      </CButton>\r\n                    </CLink>\r\n                    <br />\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Add Employee</CCardHeader>\r\n                    <CCardBody>\r\n                      <CForm\r\n                        method=\"post\"\r\n                        encType=\"multipart/form-data\"\r\n                        className=\"form-horizontal\"\r\n                        autoComplete=\"off\"\r\n                      >\r\n                        <CFormGroup className=\"pr-1\">\r\n                          <div>\r\n                            <p>\r\n                              <b>Employee Information</b>\r\n                            </p>\r\n                            <CRow id=\"firstrow\">\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Employee Name\r\n                                </CLabel>\r\n                                <CInput\r\n                                  type=\"text\"\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\"Name Of The Employee\"\r\n                                  value={EmployeeFeilds.Name}\r\n                                  onChange={(event) => {\r\n                                    let value = event.target.value;\r\n                                    value = value.replace(/[^A-Z a-z]/gi, \"\");\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      Name: value,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"nf-email\">Gender</CLabel>\r\n                                <CSelect\r\n                                  custom\r\n                                  name=\"Gender\"\r\n                                  id=\"Gender\"\r\n                                  value={EmployeeFeilds.Gender}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      Gender: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  <option value=\"-1\">Select Gender</option>\r\n                                  <option value=\"Male\">Male</option>\r\n                                  <option value=\"Female\">Female</option>\r\n                                  <option value=\"Others\">Others</option>\r\n                                </CSelect>\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Designation\r\n                                </CLabel>\r\n                                <CInput\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\"Designation\"\r\n                                  value={EmployeeFeilds.Designation}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      Designation: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Qualification\r\n                                </CLabel>\r\n                                <CInput\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\"Qualification\"\r\n                                  value={EmployeeFeilds.Qualification}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      Qualification: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Date Of Birth\r\n                                </CLabel>\r\n                                <CInput\r\n                                  type=\"date\"\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\"Date Of Birth\"\r\n                                  value={EmployeeFeilds.DateofBirth}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      DateofBirth: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Email\r\n                                </CLabel>\r\n                                <CInput\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\"Email Address\"\r\n                                  value={EmployeeFeilds.Email}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      Email: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Alternate Email\r\n                                </CLabel>\r\n                                <CInput\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\"Alternate Email\"\r\n                                  value={EmployeeFeilds.Email2}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      Email2: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Headquarter\r\n                                </CLabel>\r\n                                <CSelect\r\n                                  custom\r\n                                  name=\"Emptype\"\r\n                                  id=\"Emptype\"\r\n                                  value={EmployeeFeilds.EmpHQ}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      EmpHQ: event.target.value,\r\n                                    });\r\n                                    GetCountryCode(event.target.value);\r\n                                  }}\r\n                                >\r\n                                  <option value=\"-1\">Select Headquarter</option>\r\n                                  {EmpHQData}\r\n                                  <option value=\"0\">---NONE---</option>\r\n                                </CSelect>\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Contact Number\r\n                                </CLabel>\r\n                                <CRow>\r\n                                  <CCol md=\"2\" style={{ paddingRight: \"0%\" }}>\r\n                                    <CInput\r\n                                      id=\"text-input1\"\r\n                                      name=\"text-input\"\r\n                                      placeholder=\"Code\"\r\n                                      value=\"+\"\r\n                                      readOnly\r\n                                      style={{ fontWeight: \"600\", padding: \"7px\", borderRadius: \"4px 0px 0px 4px !important\" }}\r\n                                    />\r\n                                  </CCol>\r\n                                  <CCol md=\"2\" style={{ paddingRight: \"0%\", paddingLeft: \"0%\" }}>\r\n                                    <CInput\r\n                                      id=\"text-input1\"\r\n                                      name=\"text-input\"\r\n                                      style={{ borderRadius: \"0px\", padding: \"7px\" }}\r\n                                      value={EmployeeFeilds.PhoCode}\r\n                                      maxLength=\"3\"\r\n                                      onChange={(event) => {\r\n                                        const re = /^[0-9\\b]+$/;\r\n                                        if (\r\n                                          event.target.value === \"\" ||\r\n                                          re.test(event.target.value)\r\n                                        ) {\r\n                                          setEmployeeFeilds({\r\n                                            ...EmployeeFeilds,\r\n                                            PhoCode: event.target.value,\r\n                                          });\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                  </CCol>\r\n                                  <CCol md=\"8\" style={{ paddingLeft: \"0%\" }}>\r\n                                    <CInput\r\n                                      id=\"text-input1\"\r\n                                      name=\"text-input\"\r\n                                      placeholder=\"Contact Number\"\r\n                                      value={EmployeeFeilds.PhoneNumber}\r\n                                      maxLength=\"10\"\r\n                                      onChange={(event) => {\r\n                                        const re = /^[0-9\\b]+$/;\r\n                                        if (\r\n                                          event.target.value === \"\" ||\r\n                                          re.test(event.target.value)\r\n                                        ) {\r\n                                          setEmployeeFeilds({\r\n                                            ...EmployeeFeilds,\r\n                                            PhoneNumber: event.target.value,\r\n                                          });\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                  </CCol>\r\n                                </CRow>\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Alternate Number\r\n                                </CLabel>\r\n                                <CRow>\r\n                                  <CCol md=\"2\" style={{ paddingRight: \"0%\" }}>\r\n                                    <CInput\r\n                                      id=\"text-input1\"\r\n                                      name=\"text-input\"\r\n                                      placeholder=\"Code\"\r\n                                      value=\"+\"\r\n                                      readOnly\r\n                                      style={{ fontWeight: \"600\", padding: \"7px\", borderRadius: \"4px 0px 0px 4px !important\" }}\r\n                                    />\r\n                                  </CCol>\r\n                                  <CCol md=\"2\" style={{ paddingRight: \"0%\", paddingLeft: \"0%\" }}>\r\n                                    <CInput\r\n                                      id=\"text-input1\"\r\n                                      name=\"text-input\"\r\n                                      style={{ borderRadius: \"0px\", padding: \"7px\" }}\r\n                                      value={EmployeeFeilds.AltPhoCode}\r\n                                      maxLength=\"3\"\r\n                                      onChange={(event) => {\r\n                                        const re = /^[0-9\\b]+$/;\r\n                                        if (\r\n                                          event.target.value === \"\" ||\r\n                                          re.test(event.target.value)\r\n                                        ) {\r\n                                          setEmployeeFeilds({\r\n                                            ...EmployeeFeilds,\r\n                                            AltPhoCode: event.target.value,\r\n                                          });\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                  </CCol>\r\n                                  <CCol md=\"8\" style={{ paddingLeft: \"0%\" }}>\r\n                                    <CInput\r\n                                      id=\"text-input1\"\r\n                                      name=\"text-input\"\r\n                                      placeholder=\"Alternate Number\"\r\n                                      value={EmployeeFeilds.AlterNateNumber}\r\n                                      maxLength=\"10\"\r\n                                      onChange={(event) => {\r\n                                        const re = /^[0-9\\b]+$/;\r\n                                        if (\r\n                                          event.target.value === \"\" ||\r\n                                          re.test(event.target.value)\r\n                                        ) {\r\n                                          setEmployeeFeilds({\r\n                                            ...EmployeeFeilds,\r\n                                            AlterNateNumber: event.target.value,\r\n                                          });\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                  </CCol>\r\n                                </CRow>\r\n                              </CCol>\r\n\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Company\r\n                                </CLabel>\r\n                                <CSelect\r\n                                  custom\r\n                                  name=\"Country\"\r\n                                  id=\"Country\"\r\n                                  value={EmployeeFeilds.Company}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      Company: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  <option value=\"-1\">Select Company</option>\r\n                                  {CompanyData}\r\n                                </CSelect>\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Region\r\n                                </CLabel>\r\n                                <CInput\r\n                                  id=\"text-input1\"\r\n                                  name=\"text-input\"\r\n                                  placeholder=\"Region\"\r\n                                  value={EmployeeFeilds.Region}\r\n                                  autocomplete=\"off\"\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      Region: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"nf-email\">Manager / Officer / Admin</CLabel>\r\n                                <CSelect\r\n                                  custom\r\n                                  name=\"manager\"\r\n                                  id=\"manager\"\r\n                                  value={EmployeeFeilds.Ismanager}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      Ismanager: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  <option value=\"-1\">Select Here</option>\r\n                                  <option value=\"1\">Manager</option>\r\n                                  <option value=\"0\">Officer</option>\r\n                                  <option value=\"2\">Admin</option>\r\n                                </CSelect>\r\n                              </CCol>\r\n                              <CCol xs=\"3\" md=\"3\">\r\n                                <CLabel>Select Emp Type</CLabel>\r\n                                <CSelect\r\n                                  custom\r\n                                  name=\"Emptype\"\r\n                                  id=\"Emptype\"\r\n                                  value={EmployeeFeilds.Emptype}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      Emptype: event.target.value,\r\n                                    });\r\n                                    GetEmployeeSubTypeById(event.target.value);\r\n                                  }}\r\n                                >\r\n                                  <option value=\"-1\">Employee Type</option>\r\n                                  {EmptypeData}\r\n                                </CSelect>\r\n                              </CCol>\r\n\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Employee Sub-type\r\n                                </CLabel>\r\n                                <CSelect\r\n                                  custom\r\n                                  name=\"Emptype\"\r\n                                  id=\"Emptype\"\r\n                                  value={EmployeeFeilds.EmpSubtype}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      EmpSubtype: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  <option value=\"-1\">Employee Sub Type</option>\r\n                                  {EmpSubtypeData}\r\n                                </CSelect>\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Password\r\n                                </CLabel>\r\n                                <CInput\r\n                                  type=\"password\"\r\n                                  id=\"text-input1\"\r\n                                  name=\"text-input\"\r\n                                  placeholder=\"********\"\r\n                                  value={EmployeeFeilds.password}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      password: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"nf-email\">Salary</CLabel>\r\n                                <CInput\r\n                                  type=\"text\"\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\"Employee Salary\"\r\n                                  value={EmployeeFeilds.salary}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      salary: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Joining Date\r\n                                </CLabel>\r\n                                <CInput\r\n                                  type=\"date\"\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\"Joint Date\"\r\n                                  value={EmployeeFeilds.JoiningDate}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      JoiningDate: event.target.value,\r\n                                    });\r\n                                   \r\n                                  }}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Previous Experience\r\n                                </CLabel>\r\n                                <CInput\r\n                                  type=\"text\"\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\"Previous Experience\"\r\n                                  value={EmployeeFeilds.PreviousExp}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      PreviousExp: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </CCol>\r\n                              {/* <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"nf-email\">\r\n                                  Releaving Date\r\n                                </CLabel>\r\n                                <CInput\r\n                                  type=\"date\"\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\"Date Of Birth\"\r\n                                  value={EmployeeFeilds.dateofreleaving}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      dateofreleaving: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </CCol> */}\r\n                              <CCol md=\"3\">\r\n                                <CLabel\r\n                                  htmlFor=\"exampleInputName2\"\r\n                                  className=\"pr-1\"\r\n                                >\r\n                                  Profile\r\n                                </CLabel>\r\n                                <CInput\r\n                                  type=\"file\"\r\n                                  id=\"exampleInputName2\"\r\n                                  placeholder=\" \"\r\n                                  value={EmployeeFeilds.Profile}\r\n                                  onChange={GetProfilePic}\r\n                                />\r\n                              </CCol>\r\n                              <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"nf-email\">Reporting To</CLabel>\r\n                                <CSelect\r\n                                  custom\r\n                                  name=\"RepTo\"\r\n                                  id=\"RepTo\"\r\n                                  value={EmployeeFeilds.ReportingTo}\r\n                                  onChange={(event) => {\r\n                                    setEmployeeFeilds({\r\n                                      ...EmployeeFeilds,\r\n                                      ReportingTo: event.target.value,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  <option value=\"-1\">Select Here</option>\r\n                                  {EmployeeManagers}\r\n                                  <option value=\"0\">Self</option>\r\n                                </CSelect>\r\n                              </CCol>\r\n                              <CCol md=\"3\"></CCol>\r\n                              <CCol md=\"3\"></CCol>\r\n                              <CCol md=\"12\" style={{ paddingBottom: \"0%\", marginBottom: \"0%\", marginTop: \"3%\" }}>\r\n                                <p style={{ marginBottom: \"0%\", fontWeight: \"600\" }}>Employee : {EmployeeFeilds.Name}</p>\r\n                              </CCol>\r\n                              <CCol\r\n                                md=\"6\"\r\n                                style={{\r\n                                  borderRight: \"1px solid rgb(211, 211, 211)\",\r\n                                  borderTop: \"1px solid rgb(211, 211, 211)\",\r\n                                  borderBottom: \"1px solid rgb(211, 211, 211)\",\r\n                                  padding: \"2%\",\r\n                                }}\r\n                              >\r\n                                <p\r\n                                  htmlFor=\"nf-email\"\r\n                                  style={{\r\n                                    fontWeight: \"700\",\r\n                                    fontSize: \"16px\",\r\n                                    textAlign: \"center\",\r\n                                    textTransform: \"uppercase\",\r\n                                  }}\r\n                                >\r\n                                  Permanent Address\r\n                                </p>\r\n                                <CCol md=\"12\">\r\n                                  <CLabel htmlFor=\"nf-email\">Address 1</CLabel>\r\n                                  <CInput\r\n                                    id=\"exampleInputName2\"\r\n                                    placeholder=\" \"\r\n                                    value={EmployeeFeilds.address1}\r\n                                    onChange={(event) => {\r\n                                      setEmployeeFeilds({\r\n                                        ...EmployeeFeilds,\r\n                                        address1: event.target.value,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                </CCol>\r\n                                <CCol md=\"12\">\r\n                                  <CLabel htmlFor=\"nf-email\">Address 2</CLabel>\r\n                                  <CInput\r\n                                    id=\"exampleInputName2\"\r\n                                    placeholder=\" \"\r\n                                    value={EmployeeFeilds.address2}\r\n                                    onChange={(event) => {\r\n                                      setEmployeeFeilds({\r\n                                        ...EmployeeFeilds,\r\n                                        address2: event.target.value,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                </CCol>\r\n                                <CCol md=\"12\">\r\n                                  <CLabel htmlFor=\"nf-email\">Address 3</CLabel>\r\n                                  <CInput\r\n                                    id=\"exampleInputName2\"\r\n                                    placeholder=\" \"\r\n                                    value={EmployeeFeilds.address3}\r\n                                    onChange={(event) => {\r\n                                      setEmployeeFeilds({\r\n                                        ...EmployeeFeilds,\r\n                                        address3: event.target.value,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                </CCol>\r\n                                <CCol md=\"12\">\r\n                                  <CLabel htmlFor=\"nf-email\">Zip Code</CLabel>\r\n                                  <CInput\r\n                                    id=\"exampleInputName2\"\r\n                                    placeholder=\" \"\r\n                                    value={EmployeeFeilds.ZipCode}\r\n                                    onChange={(event) => {\r\n                                      setEmployeeFeilds({\r\n                                        ...EmployeeFeilds,\r\n                                        ZipCode: event.target.value,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                </CCol>\r\n                              </CCol>\r\n\r\n                              <CCol\r\n                                md=\"6\"\r\n                                style={{\r\n                                  borderTop: \"1px solid rgb(211, 211, 211)\",\r\n                                  borderBottom: \"1px solid rgb(211, 211, 211)\",\r\n                                  padding: \"2%\",\r\n                                }}\r\n                              >\r\n                                <p\r\n                                  htmlFor=\"nf-email\"\r\n                                  style={{\r\n                                    fontWeight: \"700\",\r\n                                    fontSize: \"16px\",\r\n                                    textAlign: \"center\",\r\n                                    textTransform: \"uppercase\",\r\n                                  }}\r\n                                >\r\n                                  Correspondence Address\r\n                                </p>\r\n                                <CCol md=\"12\">\r\n                                  <CLabel htmlFor=\"nf-email\">Address 1</CLabel>\r\n                                  <CInput\r\n                                    id=\"exampleInputName2\"\r\n                                    placeholder=\" \"\r\n                                    value={EmployeeFeilds.altaddress1}\r\n                                    onChange={(event) => {\r\n                                      setEmployeeFeilds({\r\n                                        ...EmployeeFeilds,\r\n                                        altaddress1: event.target.value,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                </CCol>\r\n                                <CCol md=\"12\">\r\n                                  <CLabel htmlFor=\"nf-email\">Address 2</CLabel>\r\n                                  <CInput\r\n                                    id=\"exampleInputName2\"\r\n                                    placeholder=\" \"\r\n                                    value={EmployeeFeilds.altaddress2}\r\n                                    onChange={(event) => {\r\n                                      setEmployeeFeilds({\r\n                                        ...EmployeeFeilds,\r\n                                        altaddress2: event.target.value,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                </CCol>\r\n                                <CCol md=\"12\">\r\n                                  <CLabel htmlFor=\"nf-email\">Address 3</CLabel>\r\n                                  <CInput\r\n                                    id=\"exampleInputName2\"\r\n                                    placeholder=\" \"\r\n                                    value={EmployeeFeilds.altaddress3}\r\n                                    onChange={(event) => {\r\n                                      setEmployeeFeilds({\r\n                                        ...EmployeeFeilds,\r\n                                        altaddress3: event.target.value,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                </CCol>\r\n                                <CCol md=\"12\">\r\n                                  <CLabel htmlFor=\"nf-email\">Zip Code</CLabel>\r\n                                  <CInput\r\n                                    id=\"exampleInputName2\"\r\n                                    placeholder=\" \"\r\n                                    value={EmployeeFeilds.altZipCode}\r\n                                    onChange={(event) => {\r\n                                      setEmployeeFeilds({\r\n                                        ...EmployeeFeilds,\r\n                                        altZipCode: event.target.value,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                </CCol>\r\n                              </CCol>\r\n                              <CCol\r\n                                md=\"12\"\r\n                                style={{\r\n                                  marginTop: \"3%\",\r\n                                  borderBottom: \"1px solid rgb(211, 211, 211)\",\r\n                                  padding: \"2%\",\r\n                                }}\r\n                              >\r\n                                <p\r\n                                  htmlFor=\"nf-email\"\r\n                                  style={{\r\n                                    fontWeight: \"700\",\r\n                                    fontSize: \"16px\",\r\n                                    textAlign: \"center\",\r\n                                    textTransform: \"uppercase\",\r\n                                  }}\r\n                                >\r\n                                  Upload Documents\r\n                                </p>\r\n                                <div className=\"my-3\">\r\n                                  <Dropzone onDrop={onDrop}>\r\n                                    {({ getRootProps, getInputProps }) => (\r\n                                      <section>\r\n                                        <div\r\n                                          {...getRootProps({\r\n                                            className: \"dropzone\",\r\n                                          })}\r\n                                        >\r\n                                          <input {...getInputProps()} />\r\n                                          {selectedFiles &&\r\n                                            Array.isArray(selectedFiles) &&\r\n                                            selectedFiles.length ? (\r\n                                            <div className=\"selected-file\">\r\n                                              {selectedFiles.length > 3\r\n                                                ? `${selectedFiles.length} files`\r\n                                                : selectedFiles\r\n                                                  .map((file) => file.name)\r\n                                                  .join(\", \")}\r\n                                            </div>\r\n                                          ) : (\r\n                                            `Drag and drop files here, or click to select files`\r\n                                          )}\r\n                                        </div>\r\n                                        <aside className=\"selected-file-wrapper\">\r\n                                          <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-success\"\r\n                                            disabled={!selectedFiles}\r\n                                            onClick={uploadFiles}\r\n                                          >\r\n                                            Upload\r\n                                          </button>\r\n                                        </aside>\r\n                                      </section>\r\n                                    )}\r\n                                  </Dropzone>\r\n                                </div>\r\n                              </CCol>\r\n                              <CCol md=\"12\" style={{ paddingBottom: \"0%\", marginBottom: \"0%\", marginTop: \"3%\" }}>\r\n                                <p style={{ marginBottom: \"0%\", fontWeight: \"600\" }}>Employee : {EmployeeFeilds.Name}</p>\r\n                              </CCol>\r\n                              <CCol\r\n                                md=\"12\"\r\n                                style={{\r\n                                  borderBottom: \"1px solid rgb(211, 211, 211)\",\r\n                                  padding: \"2%\",\r\n                                }}\r\n                              >\r\n                                <p\r\n                                  htmlFor=\"nf-email\"\r\n                                  style={{\r\n                                    fontWeight: \"700\",\r\n                                    fontSize: \"16px\",\r\n                                    textAlign: \"center\",\r\n                                    paddingBottom: \"2%\",\r\n                                    borderBottom: \"1px solid #ebedef\",\r\n                                    textTransform: \"uppercase\",\r\n                                  }}\r\n                                >\r\n                                  Covered Areas\r\n                                </p>\r\n                                <CRow style={{ paddingTop: \"1%\" }}>\r\n                                  <CCol\r\n                                    md=\"3\"\r\n                                    style={{ borderRight: \"1px solid #ebedef\" }}\r\n                                  >\r\n                                    <p\r\n                                      style={{\r\n                                        fontWeight: \"700\",\r\n                                        fontFamily: \"sans-serif\",\r\n                                        textAlign: \"center\",\r\n                                        borderBottom: \"1px solid #ebedef\",\r\n                                        paddingBottom: \"5%\",\r\n                                      }}\r\n                                    >\r\n                                      Choose Country\r\n                                    </p>\r\n                                    {CountryData.map((i) => (\r\n                                      <CCol md=\"12\">\r\n                                        <CInput\r\n                                          type=\"checkbox\"\r\n                                          name=\"area\"\r\n                                          id=\"area\"\r\n                                          className=\"CheckBoxClass\"\r\n                                          placeholder=\" \"\r\n                                          value={i.COUNTRY_PKID}\r\n                                          onClick={GetState}\r\n                                        />\r\n                                        <label style={{ display: \"inline-block !important\" }}>{i.COUNTRY_NAME}</label>\r\n                                      </CCol>\r\n                                    ))}\r\n                                  </CCol>\r\n                                  <CCol\r\n                                    md=\"3\"\r\n                                    style={{ borderRight: \"1px solid #ebedef\" }}\r\n                                  >\r\n                                    <p\r\n                                      style={{\r\n                                        fontWeight: \"700\",\r\n                                        fontFamily: \"sans-serif\",\r\n                                        textAlign: \"center\",\r\n                                        borderBottom: \"1px solid #ebedef\",\r\n                                        paddingBottom: \"5%\",\r\n                                      }}\r\n                                    >\r\n                                      Choose States\r\n                                    </p>\r\n                                    {StateData.map((i) => (\r\n                                      <CCol md=\"12\">\r\n                                        <CInput\r\n                                          type=\"checkbox\"\r\n                                          name=\"area\"\r\n                                          id=\"area\"\r\n                                          className=\"CheckBoxClass\"\r\n                                          placeholder=\" \"\r\n                                          value={i.STATE_PKID}\r\n                                          onClick={GetCity}\r\n                                        />\r\n                                        <label style={{ display: \"inline-block !important\" }}>{i.STATE_NAME}</label>\r\n                                      </CCol>\r\n                                    ))}\r\n                                  </CCol>\r\n                                  <CCol\r\n                                    md=\"3\"\r\n                                    style={{ borderRight: \"1px solid #ebedef\" }}\r\n                                  >\r\n                                    <p\r\n                                      style={{\r\n                                        fontWeight: \"700\",\r\n                                        fontFamily: \"sans-serif\",\r\n                                        textAlign: \"center\",\r\n                                        borderBottom: \"1px solid #ebedef\",\r\n                                        paddingBottom: \"5%\",\r\n                                      }}\r\n                                    >\r\n                                      Choose District\r\n                                    </p>\r\n                                    {CityData.map((i) => (\r\n                                      <CCol md=\"12\">\r\n                                        <CInput\r\n                                          type=\"checkbox\"\r\n                                          name=\"area\"\r\n                                          id=\"area\"\r\n                                          className=\"CheckBoxClass\"\r\n                                          placeholder=\" \"\r\n                                          value={i.DISTRICT_PKID}\r\n                                          onClick={GetArea}\r\n                                        />\r\n                                        <label style={{ display: \"inline-block !important\" }}>{i.DISTRICT_NAME}</label>\r\n                                      </CCol>\r\n                                    ))}\r\n                                  </CCol>\r\n                                  <CCol md=\"3\">\r\n                                    <p\r\n                                      style={{\r\n                                        fontWeight: \"700\",\r\n                                        fontFamily: \"sans-serif\",\r\n                                        textAlign: \"center\",\r\n                                        borderBottom: \"1px solid #ebedef\",\r\n                                        paddingBottom: \"5%\",\r\n                                      }}\r\n                                    >\r\n                                      Choose Taluk / Cities\r\n                                    </p>\r\n                                    {AreaData.map((i) => (\r\n                                      <CCol md=\"12\">\r\n                                        <CInput\r\n                                          type=\"checkbox\"\r\n                                          name=\"area\"\r\n                                          id=\"area\"\r\n                                          className=\"CheckBoxClass\"\r\n                                          placeholder=\" \"\r\n                                          value={i.TALUK_PKID}\r\n                                          onClick={SelectedArea}\r\n                                        />\r\n                                        <label style={{ display: \"inline-block !important\" }}>{i.TALUK_NAME}</label>\r\n                                      </CCol>\r\n                                    ))}\r\n                                  </CCol>\r\n                                </CRow>\r\n                              </CCol>\r\n                            </CRow>\r\n                          </div>\r\n\r\n                          <CRow>\r\n                            <CCol md=\"6\" style={{ paddingBottom: \"0%\", marginBottom: \"0%\" }}>\r\n                              <p style={{ marginBottom: \"0%\", fontWeight: \"600\" }}>Employee : {EmployeeFeilds.Name}</p>\r\n                            </CCol>\r\n                            <CCol md=\"6\">\r\n                              <div id=\"inline-btn\">\r\n                                <CButton\r\n                                  type=\"button\"\r\n                                  onClick={AddEmployee}\r\n                                  color=\"success\"\r\n                                  style={{ float: \"right\", fontWeight: \"600\" }}\r\n                                >\r\n                                  ADD EMPLOYEE\r\n                                </CButton>\r\n                              </div>\r\n                            </CCol>\r\n                          </CRow>\r\n                        </CFormGroup>\r\n                      </CForm>\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Employee;\r\n"],"sourceRoot":""}