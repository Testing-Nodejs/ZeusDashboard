{"version":3,"sources":["services/service.js","views/masters/DateFilter.js","views/ProcessApprovedTeam/InvoiceUploadedOrders_p.js"],"names":["MyApiUrl","ViewImg","DateFilter","date","idate","Date","toISOString","split","getDate","toString","padStart","getMonth","getFullYear","table","placeholder","label","items","values","fields2","key","InvoiceUploadedOrders_p","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","useState","ResponseData","setResponseData","BillingAddress","setBillingAddress","ShippingAddress","setShippingAddress","OrderRemark","setOrderRemark","fromDate","setfromDate","Otype","setOtype","Omonth","setOmonth","toDate","settoDate","block","setblock","block1","setblock1","block2","setblock2","block3","setblock3","block4","setblock4","OrderProcessRemark","setOrderProcessRemark","ManagerRemark","setManagerRemark","ManagerRemarkBloack","setManagerRemarkBloack","OderSupplyType","setOderSupplyType","GetAllScheduledOrder","document","getElementById","className","axios","method","url","headers","then","response","data","map","item","index","HDays","ORDER_NUMBER","ORDER_BY","TypeName","ORDER_TYPE_NAME","SUPPLY_NAME","Company","COMPANY_NAME","CUSTOMER_NAME","Logistic","ORDER_LOGISTIC","ORDER_LOGISTIC_DESTINATION","ORDER_LOGISTIC_PAY_MODE","ORDER_DELIVERY_TYPE","ORDER_CASH_DISCOUNT","ORDER_ORDER_AMOUNT","ORDER_INVOICE_NUMBER","catch","error","console","log","React","useEffect","params","language_code","Option","i","value","SUPPLY_TYPE_PKID","history","useHistory","id","style","marginTop","col","boxShadow","md","htmlFor","custom","name","onChange","event","target","type","size","color","width","onClick","fire","icon","title","fields","hover","striped","bordered","sorter","tableFilter","itemsPerPageSelect","itemsPerPage","pagination","scopedSlots","Invoice","Fragment","href","ORDER_INVOICE_DOC","Action","pkid","dels","obj","ORDER_PKID","ORDER_TRANSIT_STATUS","put","confirmButtonText","ConfirmOrder","ORDER_DATE","ORDER_TENTATIVE_DATE","ORDER_DELIVERY_CONFIRMED_DATE","clock","slice","push","ItemCount","Remark","Attachment","profile","ORD_DOC","src","fluid","show","onClose","closeButton","fontWeight","fontFamily","textAlign","borderBottom","paddingBottom","CUSTOMER_ADDRESS_ADDRESS1","CUSTOMER_ADDRESS_ADDRESS2","CUSTOMER_ADDRESS_ADDRESS3","CUSTOMER_ADDRESS_ZIP_CODE","ORDER_REMARK","ORDER_REMARK_BY_PROCESSTEAM","ORDER_MANAGER_REMARK"],"mappings":"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","file":"static/js/92.94757a5b.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","export default function DateFilter({ date }) {\r\n  let idate = new Date(new Date(date).toISOString().split(\"T\")[0]);\r\n  let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n    idate.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n  return dateMDY;\r\n}\r\n","/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-25 17:00:15\r\n * @modify date 2021-12-06 15:32:46\r\n * @desc [description]\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CRow,\r\n    CDataTable,\r\n    CButton,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModal,\r\n    CInput,\r\n    CLabel,\r\n    CSelect,\r\n    CLink,\r\n    CImg,\r\n} from \"@coreui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MyApiUrl, ViewImg } from \"src/services/service\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Swal from \"sweetalert2\";\r\nimport DateFilter from \"../masters/DateFilter\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields2 = [\r\n    { key: \"Action\" },\r\n    { key: \"Delivery Status\" },\r\n    { key: \"Invoice\" },\r\n    { key: \"Invoice Number\" },\r\n    { key: \"Invoice Date\" },\r\n    { key: \"Tentative Dispatched Date\" },\r\n    { key: \"Ordered Date\" },\r\n    { key: \"Ordered Time\" },\r\n    { key: \"Customer Name\" },\r\n    { key: \"Order Items\" },\r\n    { key: \"Company\" },\r\n    { key: \"Order Number\" },\r\n    { key: \"Order By\" },\r\n    { key: \"Ordered Person\" },\r\n    { key: \"Order Type\" },\r\n    { key: \"Supply Type\" },\r\n    { key: \"Day Till Now\" },\r\n    { key: \"Billing Address\" },\r\n    { key: \"Shipping Address\" },\r\n    { key: \"Logistic\" },\r\n    { key: \"Logistic Designation\" },\r\n    { key: \"Logistic Payment Mode\" },\r\n    { key: \"Delivery Type\" },\r\n    { key: \"Cash Discount\" },\r\n    { key: \"Grand Total\" },\r\n    { key: \"Attachment\" },\r\n    { key: \"Remark\" },\r\n    { key: \"Process Remark\" },\r\n    { key: \"Manager Remark\" },\r\n];\r\n\r\nconst InvoiceUploadedOrders_p = () => {\r\n\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: \"top-end\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n        timerProgressBar: true,\r\n        didOpen: (toast) => {\r\n            toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n            toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n        },\r\n    });\r\n\r\n    const [ResponseData, setResponseData] = useState([]);\r\n    const [BillingAddress, setBillingAddress] = useState([]);\r\n    const [ShippingAddress, setShippingAddress] = useState([]);\r\n    const [OrderRemark, setOrderRemark] = useState([]);\r\n    const [fromDate, setfromDate] = useState();\r\n    const [Otype, setOtype] = useState();\r\n    const [Omonth, setOmonth] = useState();\r\n    const [toDate, settoDate] = useState();\r\n    const [block, setblock] = useState(false);\r\n    const [block1, setblock1] = useState(false);\r\n    const [block2, setblock2] = useState(false);\r\n    const [block3, setblock3] = useState(false);\r\n    const [block4, setblock4] = useState(false);\r\n    const [OrderProcessRemark, setOrderProcessRemark] = useState([]);\r\n\r\n    const [ManagerRemark, setManagerRemark] = useState([]);\r\n    const [ManagerRemarkBloack, setManagerRemarkBloack] = useState(false);\r\n\r\n    // Filters\r\n\r\n    const [OderSupplyType, setOderSupplyType] = useState([]);\r\n\r\n    const GetAllScheduledOrder = () => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"getAllUploadInvoiceOrders\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                const items = response.data.map((item, index) => {\r\n                    return {\r\n                        ...item,\r\n                        \"Day Till Now\": item.HDays,\r\n                        \"Order Number\": item.ORDER_NUMBER,\r\n                        \"Order By\": item.ORDER_BY,\r\n                        \"Ordered Person\": item.TypeName,\r\n                        \"Order Type\": item.ORDER_TYPE_NAME,\r\n                        \"Supply Type\": item.SUPPLY_NAME,\r\n                        Company: item.COMPANY_NAME,\r\n                        \"Customer Name\": item.CUSTOMER_NAME,\r\n                        Logistic: item.ORDER_LOGISTIC,\r\n                        \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n                        \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n                        \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n                        \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n                        \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n                        \"Invoice Number\": item.ORDER_INVOICE_NUMBER,\r\n                    };\r\n                });\r\n                setResponseData(items);\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const GetOrderSupplyType = () => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"OrderSupplyType\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n            params: {\r\n                language_code: \"en\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                const Option = response.data.map((item, i) => (\r\n                    <option key={i} value={item.SUPPLY_TYPE_PKID}>\r\n                        {item.SUPPLY_NAME}\r\n                    </option>\r\n                ));\r\n                setOderSupplyType(Option);\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const ViewBillingAddress = (pkid) => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"OrderBillingAddress/\" + pkid + \"\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                setBillingAddress(response.data);\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        setblock(!block);\r\n    };\r\n\r\n    const ViewShippingAddress = (pkid) => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"OrderShippingAddress/\" + pkid + \"\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                setShippingAddress(response.data);\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        setblock1(!block1);\r\n    };\r\n\r\n    const ViewOderRemark = (pkid) => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"OrderRemark/\" + pkid + \"\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                setOrderRemark(response.data);\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        setblock2(!block2);\r\n    };\r\n\r\n    const ViewOderProcessRemark = (pkid) => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"OrderProcessRemark/\" + pkid + \"\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                setOrderProcessRemark(response.data);\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        setblock3(!block3);\r\n    };\r\n\r\n    const FilterDates = () => {\r\n        if (fromDate === \"\" || fromDate == null) {\r\n            Toast.fire({\r\n                icon: \"warning\",\r\n                title: \"Select From Date!\",\r\n            });\r\n        } else if (toDate === \"\" || toDate == null) {\r\n            Toast.fire({\r\n                icon: \"warning\",\r\n                title: \"Select To Date!\",\r\n            });\r\n        } else {\r\n            document.getElementById(\"divLoading\").className = \"show\";\r\n            axios({\r\n                method: \"GET\",\r\n                url: MyApiUrl + \"getAllUploadInvoiceOrdersByDate/\" + fromDate + \"/\" + toDate,\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    const items = response.data.map((item, index) => {\r\n                        return {\r\n                            ...item,\r\n                            \"Day Till Now\": item.HDays,\r\n                            \"Order Number\": item.ORDER_NUMBER,\r\n                            \"Order By\": item.ORDER_BY,\r\n                            \"Ordered Person\": item.TypeName,\r\n                            \"Order Type\": item.ORDER_TYPE_NAME,\r\n                            \"Supply Type\": item.SUPPLY_NAME,\r\n                            Company: item.COMPANY_NAME,\r\n                            \"Customer Name\": item.CUSTOMER_NAME,\r\n                            Logistic: item.ORDER_LOGISTIC,\r\n                            \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n                            \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n                            \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n                            \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n                            \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n                            \"Invoice Number\": item.ORDER_INVOICE_NUMBER,\r\n                        };\r\n                    });\r\n                    setResponseData(items);\r\n                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const FilterReset = () => {\r\n        GetAllScheduledOrder();\r\n        setfromDate(\"\");\r\n        settoDate(\"\");\r\n        setOtype(\"0\");\r\n        setOmonth(\"0\");\r\n    };\r\n\r\n    const ViewSalesPersonRemark = (pkid) => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"OrderRemarkByManager/\" + pkid + \"\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                setManagerRemark(response.data);\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        setManagerRemarkBloack(!block2);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        GetAllScheduledOrder();\r\n        GetOrderSupplyType();\r\n    }, []);\r\n\r\n    const ConfirmOrder = (pkid) => {\r\n        let dels = document.getElementById(\"DelStatus\" + pkid + \"\").value;\r\n        if (dels === \"-1\") {\r\n            Toast.fire({\r\n                icon: \"warning\",\r\n                title: \"Please Select Delivery Status\",\r\n            });\r\n        } else {\r\n            document.getElementById(\"divLoading\").className = \"show\";\r\n            var obj = {\r\n                ORDER_PKID: pkid,\r\n                ORDER_TRANSIT_STATUS: dels,\r\n            };\r\n            axios.put(MyApiUrl + \"deliveryConfirmOrder/\" + pkid + \"\", obj).then((response) => {\r\n                if (response.data === true) {\r\n                    Swal.fire({\r\n                        title: \"Order Delivery Confirmed\",\r\n                        icon: \"success\",\r\n                        confirmButtonText: \"OK\",\r\n                    });\r\n                    setblock4(!block4);\r\n                    GetAllScheduledOrder();\r\n                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                } else {\r\n                    Swal.fire({\r\n                        title: \"Failed To Confirm\",\r\n                        icon: \"error\",\r\n                        confirmButtonText: \"OK\",\r\n                    });\r\n                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                }\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    let history = useHistory();\r\n    return ( \r\n        <div id=\"city\">\r\n            <div id=\"divLoading\"> </div>\r\n            <h1 id=\"ccmaster\">Invoice Uploaded Orders</h1>\r\n            <CRow style={{ marginTop: \"3%\" }}>\r\n                <CCol col=\"12\">\r\n                <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n                        <CCardBody>\r\n                            <CRow>\r\n                                <CCol>\r\n                                    <CCard>\r\n                                        <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol md=\"2\">\r\n                                                    <CLabel htmlFor=\"nf-email\">Select Order Type</CLabel>\r\n                                                    <CSelect\r\n                                                        custom\r\n                                                        name=\"merchant\"\r\n                                                        value={Otype}\r\n                                                        onChange={(event) => {\r\n                                                            document.getElementById(\"divLoading\").className = \"show\";\r\n                                                            axios({\r\n                                                                method: \"GET\",\r\n                                                                url:\r\n                                                                    MyApiUrl +\r\n                                                                    \"/getAllUploadInvoiceOrdersBySupplyType/\" +\r\n                                                                    event.target.value,\r\n                                                                headers: {\r\n                                                                    \"content-type\": \"application/json\",\r\n                                                                },\r\n                                                            })\r\n                                                                .then((response) => {\r\n                                                                    const items = response.data.map((item, index) => {\r\n                                                                        return {\r\n                                                                            ...item,\r\n                                                                            \"Day Till Now\": item.HDays,\r\n                                                                            \"Order Number\": item.ORDER_NUMBER,\r\n                                                                            \"Order By\": item.ORDER_BY,\r\n                                                                            \"Ordered Person\": item.TypeName,\r\n                                                                            \"Order Type\": item.ORDER_TYPE_NAME,\r\n                                                                            \"Supply Type\": item.SUPPLY_NAME,\r\n                                                                            Company: item.COMPANY_NAME,\r\n                                                                            \"Customer Name\": item.CUSTOMER_NAME,\r\n                                                                            Logistic: item.ORDER_LOGISTIC,\r\n                                                                            \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n                                                                            \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n                                                                            \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n                                                                            \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n                                                                            \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n                                                                            \"Invoice Number\": item.ORDER_INVOICE_NUMBER,\r\n                                                                        };\r\n                                                                    });\r\n                                                                    setResponseData(items);\r\n                                                                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                                                                })\r\n                                                                .catch((error) => {\r\n                                                                    console.log(error);\r\n                                                                });\r\n                                                        }}\r\n                                                        id=\"merchant\"\r\n                                                    >\r\n                                                        <option value=\"0\">All</option>\r\n                                                        {OderSupplyType}\r\n                                                    </CSelect>\r\n                                                </CCol>\r\n                                                <CCol md=\"2\">\r\n                                                    <CLabel htmlFor=\"nf-email\">Select Month</CLabel>\r\n                                                    <CSelect\r\n                                                        custom\r\n                                                        name=\"Marchant\"\r\n                                                        id=\"Marchant\"\r\n                                                        value={Omonth}\r\n                                                        onChange={(event) => {\r\n                                                            document.getElementById(\"divLoading\").className = \"show\";\r\n                                                            axios({\r\n                                                                method: \"GET\",\r\n                                                                url:\r\n                                                                    MyApiUrl +\r\n                                                                    \"/getAllUploadInvoiceOrdersByMonth/\" +\r\n                                                                    event.target.value,\r\n                                                                headers: {\r\n                                                                    \"content-type\": \"application/json\",\r\n                                                                },\r\n                                                            })\r\n                                                                .then((response) => {\r\n                                                                    const items = response.data.map((item, index) => {\r\n                                                                        return {\r\n                                                                            ...item,\r\n                                                                            \"Day Till Now\": item.HDays,\r\n                                                                            \"Order Number\": item.ORDER_NUMBER,\r\n                                                                            \"Order By\": item.ORDER_BY,\r\n                                                                            \"Ordered Person\": item.TypeName,\r\n                                                                            \"Order Type\": item.ORDER_TYPE_NAME,\r\n                                                                            \"Supply Type\": item.SUPPLY_NAME,\r\n                                                                            Company: item.COMPANY_NAME,\r\n                                                                            \"Customer Name\": item.CUSTOMER_NAME,\r\n                                                                            Logistic: item.ORDER_LOGISTIC,\r\n                                                                            \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n                                                                            \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n                                                                            \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n                                                                            \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n                                                                            \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n                                                                            \"Invoice Number\": item.ORDER_INVOICE_NUMBER,\r\n                                                                        };\r\n                                                                    });\r\n                                                                    setResponseData(items);\r\n                                                                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                                                                })\r\n                                                                .catch((error) => {\r\n                                                                    console.log(error);\r\n                                                                });\r\n                                                        }}\r\n                                                    >\r\n                                                        <option value=\"0\">All</option>\r\n                                                        <option value=\"1\">Jan</option>\r\n                                                        <option value=\"2\">Feb</option>\r\n                                                        <option value=\"3\">March</option>\r\n                                                        <option value=\"4\">April</option>\r\n                                                        <option value=\"5\">May</option>\r\n                                                        <option value=\"6\">Jun</option>\r\n                                                        <option value=\"7\">Jul</option>\r\n                                                        <option value=\"8\">Aug</option>\r\n                                                        <option value=\"9\">Sept</option>\r\n                                                        <option value=\"10\">Oct</option>\r\n                                                        <option value=\"11\">Nov</option>\r\n                                                        <option value=\"12\">Dec</option>\r\n                                                    </CSelect>\r\n                                                </CCol>\r\n                                                <CCol md=\"2\">\r\n                                                    <CLabel>From:</CLabel>\r\n                                                    <CInput\r\n                                                        type=\"date\"\r\n                                                        onChange={(event) => {\r\n                                                            setfromDate(event.target.value);\r\n                                                        }}\r\n                                                        value={fromDate}\r\n                                                    />\r\n                                                </CCol>\r\n\r\n                                                <CCol md=\"2\">\r\n                                                    <CLabel>To:</CLabel>\r\n                                                    <CInput\r\n                                                        type=\"date\"\r\n                                                        onChange={(event) => {\r\n                                                            settoDate(event.target.value);\r\n                                                        }}\r\n                                                        value={toDate}\r\n                                                    />\r\n                                                </CCol>\r\n                                                <CCol md=\"2\">\r\n                                                    <CButton\r\n                                                        size=\"sm\"\r\n                                                        color=\"info\"\r\n                                                        style={{ marginTop: \"28px\", width: \"100%\" }}\r\n                                                        onClick={FilterDates}\r\n                                                    >\r\n                                                        Filter\r\n                                                    </CButton>\r\n                                                </CCol>\r\n                                                <CCol md=\"2\">\r\n                                                    <CButton\r\n                                                        size=\"sm\"\r\n                                                        color=\"danger\"\r\n                                                        style={{ marginTop: \"28px\", width: \"100%\" }}\r\n                                                        onClick={FilterReset}\r\n                                                    >\r\n                                                        Reset\r\n                                                    </CButton>\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            <hr />\r\n                                        </CCardBody>\r\n                                    </CCard>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n            </CRow>\r\n            <CRow style={{ marginTop: \"3%\" }}>\r\n                <CCol col=\"12\">\r\n                <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n                        <CCardBody>\r\n                            <CRow>\r\n                                <CCol>\r\n                                    <CCard>\r\n                                        <CCardHeader>Invoice Uploaded Orders</CCardHeader>\r\n                                        <CCardBody>\r\n                                            <CDataTable\r\n                                                items={ResponseData}\r\n                                                fields={fields2}\r\n                                                hover\r\n                                                striped\r\n                                                bordered\r\n                                                sorter\r\n                                                tableFilter={table}\r\n                                                itemsPerPageSelect={items}\r\n                                                size=\"sm\"\r\n                                                itemsPerPage={10}\r\n                                                pagination\r\n                                                scopedSlots={{\r\n                                                    Invoice: (i) => {\r\n                                                        return (\r\n                                                            <React.Fragment>\r\n                                                                <td>\r\n                                                                    <CLink\r\n                                                                        href={ViewImg + \"/\" + i.ORDER_INVOICE_DOC}\r\n                                                                        target=\"_blank\"\r\n                                                                    > View\r\n                                                                    </CLink>\r\n                                                                </td>\r\n                                                            </React.Fragment>\r\n                                                        );\r\n                                                    },\r\n                                                    Action: (item) => (\r\n                                                        <td>\r\n                                                            <CButton\r\n                                                                onClick={() => {\r\n                                                                    ConfirmOrder(item.ORDER_PKID);\r\n                                                                }}\r\n                                                                size=\"sm\"\r\n                                                                color=\"success\"\r\n                                                            >\r\n                                                                Confirm\r\n                                                            </CButton>\r\n                                                        </td>\r\n                                                    ),\r\n                                                    \"Ordered Date\": (i) => (\r\n                                                        <td>{<DateFilter date={i.ORDER_DATE} />}</td>\r\n                                                    ),\r\n                                                    \"Tentative Dispatched Date\": (i) => (\r\n                                                        <td>{<DateFilter date={i.ORDER_TENTATIVE_DATE} />}</td>\r\n                                                    ),\r\n                                                    \"Invoice Date\": (i) => (\r\n                                                        <td>{<DateFilter date={i.ORDER_DELIVERY_CONFIRMED_DATE} />}</td>\r\n                                                    ),\r\n                                                    \"Ordered Time\": (i) => {\r\n                                                        return (\r\n                                                            <td>\r\n                                                                {new Date(i.clock)\r\n                                                                    .toISOString()\r\n                                                                    .split(\"T\")[1]\r\n                                                                    .slice(0, -1)}\r\n                                                            </td>\r\n                                                        );\r\n                                                    },\r\n                                                    \"Delivery Status\": (item) => (\r\n                                                        <td>\r\n                                                            <CSelect\r\n                                                                custom\r\n                                                                name=\"DelStatus\"\r\n                                                                id={`DelStatus${item.ORDER_PKID}`}\r\n                                                            >\r\n                                                                <option value=\"-1\">Select Delivery Type</option>\r\n                                                                <option value=\"intransit\">Intransit</option>\r\n                                                                <option value=\"Delivery\">Delivery</option>\r\n                                                            </CSelect>\r\n                                                        </td>\r\n                                                    ),\r\n                                                    \"Order Items\": (i) => (\r\n                                                        <td>\r\n                                                            <CButton\r\n                                                                onClick={() => {\r\n                                                                    history.push(\"/OrderItems\", {\r\n                                                                        data: i,\r\n                                                                    });\r\n                                                                }}\r\n                                                            >\r\n                                                                {i.ItemCount}\r\n                                                            </CButton>\r\n                                                        </td>\r\n                                                    ),\r\n                                                    \"Billing Address\": (i) => (\r\n                                                        <td>\r\n                                                            <CRow>\r\n                                                                <CCol md=\"8\">\r\n                                                                    <CButton\r\n                                                                        color=\"primary\"\r\n                                                                        size=\"sm\"\r\n                                                                        id=\"AddEmp\"\r\n                                                                        onClick={() => {\r\n                                                                            ViewBillingAddress(i.ORDER_PKID);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        View\r\n                                                                    </CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                        </td>\r\n                                                    ),\r\n                                                    \"Shipping Address\": (i) => (\r\n                                                        <td>\r\n                                                            <CRow>\r\n                                                                <CCol md=\"8\">\r\n                                                                    <CButton\r\n                                                                        color=\"primary\"\r\n                                                                        size=\"sm\"\r\n                                                                        id=\"AddEmp\"\r\n                                                                        onClick={() => {\r\n                                                                            ViewShippingAddress(i.ORDER_PKID);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        View\r\n                                                                    </CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                        </td>\r\n                                                    ),\r\n                                                    \"Manager Remark\": (i) => (\r\n                                                        <td>\r\n                                                            <CRow>\r\n                                                                <CCol md=\"8\">\r\n                                                                    <CButton\r\n                                                                        color=\"primary\"\r\n                                                                        size=\"sm\"\r\n                                                                        id=\"AddEmp\"\r\n                                                                        onClick={() => {\r\n                                                                            ViewSalesPersonRemark(i.ORDER_PKID);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        View\r\n                                                                    </CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                        </td>\r\n                                                    ),\r\n                                                    Remark: (i) => (\r\n                                                        <td>\r\n                                                            <CRow>\r\n                                                                <CCol md=\"8\">\r\n                                                                    <CButton\r\n                                                                        color=\"primary\"\r\n                                                                        size=\"sm\"\r\n                                                                        id=\"AddEmp\"\r\n                                                                        onClick={() => {\r\n                                                                            ViewOderRemark(i.ORDER_PKID);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        View\r\n                                                                    </CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                        </td>\r\n                                                    ),\r\n                                                    \"Process Remark\": (i) => (\r\n                                                        <td>\r\n                                                            <CRow>\r\n                                                                <CCol md=\"8\">\r\n                                                                    <CButton\r\n                                                                        color=\"primary\"\r\n                                                                        size=\"sm\"\r\n                                                                        id=\"AddEmp\"\r\n                                                                        onClick={() => {\r\n                                                                            ViewOderProcessRemark(i.ORDER_PKID);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        View\r\n                                                                    </CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                        </td>\r\n                                                    ),\r\n                                                    Attachment: (i) => {\r\n                                                        let profile = \"\";\r\n                                                        if (\r\n                                                            i.ORD_DOC === \"\" ||\r\n                                                            i.ORD_DOC === null\r\n                                                        ) {\r\n                                                            profile = \"NoImage.png\";\r\n                                                        } else {\r\n                                                            profile = i.ORD_DOC;\r\n                                                        }\r\n                                                        return (\r\n                                                            <React.Fragment>\r\n                                                                <td>\r\n                                                                    <CLink\r\n                                                                        href={ViewImg + \"/\" + profile}\r\n                                                                        target=\"_blank\"\r\n                                                                    >\r\n                                                                        <CImg\r\n                                                                            src={ViewImg + \"/\" + profile}\r\n                                                                            fluid\r\n                                                                            className=\"mb-2\"\r\n                                                                            style={{ width: \"100%\" }}\r\n                                                                        />\r\n                                                                    </CLink>\r\n                                                                </td>\r\n                                                            </React.Fragment>\r\n                                                        );\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                        </CCardBody>\r\n                                    </CCard>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n            </CRow>\r\n            <CModal show={block} onClose={() => setblock(!block)} color=\"dark\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Customer Billing Address</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CRow>\r\n                        {BillingAddress.map((i) => (\r\n                            <React.Fragment>\r\n                                <CCol md=\"12\">\r\n                                    <p\r\n                                        style={{\r\n                                            fontWeight: \"700\",\r\n                                            fontFamily: \"sans-serif\",\r\n                                            textAlign: \"center\",\r\n                                            borderBottom: \"1px solid #ebedef\",\r\n                                            paddingBottom: \"5%\",\r\n                                        }}\r\n                                    >\r\n                                        Billing Address\r\n                                    </p>\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ADDRESS1}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ADDRESS2}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ADDRESS3}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ZIP_CODE}</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </CCol>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </CRow>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"secondary\" onClick={() => setblock(!block)}>\r\n                        Close\r\n                    </CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n            <CModal show={block1} onClose={() => setblock1(!block1)} color=\"dark\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Customer Shipping Address</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CRow>\r\n                        {ShippingAddress.map((i) => (\r\n                            <React.Fragment>\r\n                                <CCol md=\"12\">\r\n                                    <p\r\n                                        style={{\r\n                                            fontWeight: \"700\",\r\n                                            fontFamily: \"sans-serif\",\r\n                                            textAlign: \"center\",\r\n                                            borderBottom: \"1px solid #ebedef\",\r\n                                            paddingBottom: \"5%\",\r\n                                        }}\r\n                                    >\r\n                                        Shipping Address\r\n                                    </p>\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ADDRESS1}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ADDRESS2}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ADDRESS3}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{i.CUSTOMER_ADDRESS_ZIP_CODE}</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </CCol>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </CRow>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"secondary\" onClick={() => setblock1(!block1)}>\r\n                        Close\r\n                    </CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n            <CModal show={block2} onClose={() => setblock2(!block2)} color=\"dark\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Order Remark</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CRow>\r\n                        {OrderRemark.map((i) => (\r\n                            <React.Fragment>\r\n                                <CCol md=\"12\">\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td>{i.ORDER_REMARK}</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </CCol>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </CRow>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"secondary\" onClick={() => setblock2(!block2)}>\r\n                        Close\r\n                    </CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n            <CModal show={block3} onClose={() => setblock3(!block3)} color=\"dark\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Process Remark</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CRow>\r\n                        {OrderProcessRemark.map((i) => (\r\n                            <React.Fragment>\r\n                                <CCol md=\"12\">\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td>{i.ORDER_REMARK_BY_PROCESSTEAM}</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </CCol>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </CRow>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"secondary\" onClick={() => setblock3(!block3)}>\r\n                        Close\r\n                    </CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n            <CModal show={ManagerRemarkBloack} onClose={() => setManagerRemarkBloack(!ManagerRemarkBloack)} color=\"dark\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Order Remark From Manager</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CRow>\r\n                        {ManagerRemark.map((i) => (\r\n                            <React.Fragment>\r\n                                <CCol md=\"12\">\r\n                                    <p\r\n                                        style={{\r\n                                            fontWeight: \"700\",\r\n                                            fontFamily: \"sans-serif\",\r\n                                            textAlign: \"center\",\r\n                                            borderBottom: \"1px solid #ebedef\",\r\n                                            paddingBottom: \"5%\",\r\n                                        }}\r\n                                    >\r\n                                        Remark\r\n                                    </p>\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td>{i.ORDER_MANAGER_REMARK}</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </CCol>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </CRow>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"secondary\" onClick={() => setManagerRemarkBloack(!ManagerRemarkBloack)}>\r\n                        Close\r\n                    </CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InvoiceUploadedOrders_p;\r\n"],"sourceRoot":""}