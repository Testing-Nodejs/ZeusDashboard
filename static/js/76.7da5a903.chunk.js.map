{"version":3,"sources":["services/service.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/Customer/CustomerPlaceOrder.js"],"names":["MyApiUrl","ViewImg","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","table","placeholder","label","items","values","fields","key","CustomerPlaceOrder","CustomerID","localStorage","getItem","useState","xyzData","setxyzData","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","console","log","CUSTOMER_NAME","ResponseData","setResponseData","CompanyData","setCompanyData","CompanyID","setCompanyID","setProductAmount","setPackageSelect","setPackageAmtval","setDiscount","setFreeUnit","setFinalAMount","FinalResult","setFinalResult","FinalResultNew","setFinalResultNew","SelectPackage","event","target","value","splt2","split","x","PackageAmt","productID","id","packagesize","document","getElementById","finalamt","innerHTML","toFixed","DiscountCalculate","actialamt","CalculateFeeUnit","React","useEffect","className","axios","method","url","headers","then","response","Option","data","map","item","i","COMPANY_PKID","COMPANY_NAME","catch","error","history","useHistory","style","marginTop","md","boxShadow","color","size","onClick","goBack","width","CUSTOMER_EMAIL","CUSTOMER_MOBILE","CUSTOMER_CATEGORY_NAME","CUSTOMER_TYPE_NAME","CUSTOMER_SUBTYPE_NAME","CUSTOMER_CAPACITY","EMPLOYEE_NAME","CUSTOMER_EMAIL2","CUSTOMER_ALT_MOBILE","custom","name","onChange","fire","icon","title","index","Company","Species","PRODUCT_SPECIES_NAME","PRODUCT_NAME","hover","striped","bordered","sorter","tableFilter","itemsPerPage","pagination","itemsPerPageSelect","scopedSlots","type","PRODUCT_PKID","required","Quantity","paddingRight","float","paddingLeft","readOnly","textAlign","fontWeight","UNIT_OF_MEASUREMENT_SHORT_KEY","packagesArr","j","PRD_PACKAG_PKID","PRD_PACKAGE_UNIT","obj","ProductID","PackageID","Discount","FreeUnitScheme","FinalAmount","ProductAmount","push","length","pathname","state"],"mappings":"iHAAA,oEAWE,IAAMA,EAAW,yCAEXC,EAAU,sC,mHCTH,SAASC,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,qKIsBxFC,EAAQ,CAAEC,YAAa,iBAAkBC,MAAO,aAChDC,EAAQ,CAAED,MAAO,QAASE,OAAQ,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,MACtDC,EAAS,CACb,CAAEC,IAAK,WACP,CAAEA,IAAK,WACP,CAAEA,IAAK,gBACP,CAAEA,IAAK,gBACP,CAAEA,IAAK,YACP,CAAEA,IAAK,kBACP,CAAEA,IAAK,kBACP,CAAEA,IAAK,eACP,CAAEA,IAAK,uBACP,CAAEA,IAAK,iBAkfMC,UA/eY,WACzB,IAAMC,EAAaC,aAAaC,QAAQ,cADT,EAGDC,mBAAS,IAHR,mBAGxBC,EAHwB,KAGfC,EAHe,KAuBzBC,EAAQC,IAAKC,MAAM,CACvBC,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,KACPC,kBAAkB,EAClBC,QAAS,SAACL,GACRA,EAAMM,iBAAiB,aAAcR,IAAKS,WAC1CP,EAAMM,iBAAiB,aAAcR,IAAKU,gBAI9CC,QAAQC,IAAI,QAASf,EAAQgB,eAnCE,MAqCSjB,mBAAS,IArClB,mBAqCxBkB,EArCwB,KAqCVC,EArCU,OAsCOnB,mBAAS,IAtChB,mBAsCxBoB,EAtCwB,KAsCXC,EAtCW,OAuCGrB,qBAvCH,mBAuCxBsB,EAvCwB,KAuCbC,EAvCa,OAwCWvB,qBAxCX,mBAwCTwB,GAxCS,aAyCWxB,qBAzCX,mBAyCTyB,GAzCS,aA0CWzB,qBA1CX,mBA0CT0B,GA1CS,aA2CC1B,qBA3CD,mBA2Cd2B,GA3Cc,aA4CC3B,qBA5CD,mBA4Cd4B,GA5Cc,aA6CO5B,mBAAS,IA7ChB,mBA6CX6B,GA7CW,aA+CO7B,mBAAS,IA/ChB,mBA+CxB8B,EA/CwB,KA+CXC,EA/CW,QAgDa/B,mBAAS,IAhDtB,qBAgDxBgC,GAhDwB,MAgDRC,GAhDQ,MA+GzBC,GAAgB,SAACC,GACrBV,EAAiBU,EAAMC,OAAOC,OAC9B,IACIC,EADOH,EAAMC,OAAOC,MACPE,MAAM,KACnBC,EAAC,sBAAOV,GAAP,CAAoBQ,EAAM,KAC/BP,EAAeS,IAGXC,GAAa,SAACN,GAClBT,EAAiBS,EAAMC,OAAOC,OAE9B,IAAIK,EAAYP,EAAMC,OAAOO,GAAGJ,MAAM,KAElCK,EAAcC,SACfC,eAAe,aAAeJ,EAAU,IACxCL,MAAME,MAAM,KAMXQ,EAJcF,SAASC,eACzB,cAAgBJ,EAAU,IAC1BL,MAE4BO,EAAY,GAAMT,EAAMC,OAAOC,MAC7DR,EAAekB,GACfvB,EAAiBuB,GACjBF,SAASC,eAAe,kBAAoBJ,EAAU,IAASM,UAC7DD,EAASE,QAAQ,GACnBJ,SAASC,eAAe,iBAAmBJ,EAAU,IAASM,UAC5DD,EAASE,QAAQ,IAGfC,GAAoB,SAACf,GAEzB,GADAR,EAAYQ,EAAMC,OAAOC,OAEA,KAAvBF,EAAMC,OAAOC,OACS,MAAtBF,EAAMC,OAAOC,OACU,MAAvBF,EAAMC,OAAOC,WAER,CACL,IAAIK,EAAYP,EAAMC,OAAOO,GAAGJ,MAAM,KAClCY,EAAYN,SAASC,eACvB,kBAAoBJ,EAAU,IAC9BM,UACED,EAAWI,EAAahB,EAAMC,OAAOC,MAAQ,IAAOc,EACxDN,SAASC,eAAe,iBAAmBJ,EAAU,IAASM,UAC5DD,EAASE,QAAQ,GACnBpB,EAAesB,EAAahB,EAAMC,OAAOC,MAAQ,IAAOc,KAItDC,GAAmB,SAACjB,GACxBP,EAAYO,EAAMC,OAAOC,QAuD3BtB,QAAQC,IAAIgB,IACZqB,IAAMC,WAAU,WAhIdT,SAASC,eAAe,cAAcS,UAAY,OAClDC,IAAM,CACJC,OAAQ,MACRC,IAAKnF,IAAW,YAChBoF,QAAS,CACP,eAAgB,sBAGjBC,MAAK,SAACC,GACL,IAAMC,EAASD,EAASE,KAAKC,KAAI,SAACC,EAAMC,GAAP,OAC/B,wBAAgB7B,MAAO4B,EAAKE,aAA5B,SACGF,EAAKG,cADKF,MAIf7C,EAAeyC,GACfjB,SAASC,eAAe,cAAcS,UAAY,UAEnDc,OAAM,SAACC,GACNvD,QAAQC,IAAIsD,MArGhBzB,SAASC,eAAe,cAAcS,UAAY,OAClDC,IAAM,CACJC,OAAQ,MACRC,IAAKnF,IAAW,yBAA2BsB,EAC3C8D,QAAS,CACP,eAAgB,sBAGjBC,MAAK,SAACC,GACL9C,QAAQC,IAAI,SAAO6C,EAASE,KAAK,IACjC7D,EAAW2D,EAASE,KAAK,OAE1BM,OAAM,SAACC,GACNvD,QAAQC,IAAIsD,QA0Mf,IAEH,IAAIC,GAAUC,cACd,OACE,gCACE,qBAAK7B,GAAG,aAAR,eACA,oBAAIA,GAAG,WAAP,wBACA,eAAC,IAAD,CAAM8B,MAAO,CAAEC,UAAW,MAA1B,UACE,cAAC,IAAD,CAAMC,GAAG,MACT,cAAC,IAAD,CAAMA,GAAG,KAAT,SACA,cAAC,IAAD,CAAOF,MAAO,CAAEG,UAAW,2BAA3B,SACI,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMD,GAAG,IAAT,SACE,cAAC,IAAD,CACEE,MAAM,SACNC,KAAK,KACLC,QAAS,kBAAMR,GAAQS,UAHzB,sBASJ,uBACA,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,uCACA,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAML,GAAG,KAAT,SACE,uBAAOhC,GAAG,kBAAkB8B,MAAO,CAAEQ,MAAO,QAA5C,SACE,+BACE,+BACE,+BACE,6BACE,kDAEF,6BAAKhF,EAAQgB,mBAEf,+BACE,6BACE,0CAEF,6BAAKhB,EAAQiF,oBAEf,+BACE,6BACE,mDAEF,6BAAKjF,EAAQkF,qBAEf,+BACE,6BACE,6CAEF,6BAAKlF,EAAQmF,4BAEf,+BACE,6BACE,yCAEF,6BAAKnF,EAAQoF,wBAEf,+BACE,6BACE,6CAEF,6BAAKpF,EAAQqF,8BAGjB,+BACE,+BACE,6BACE,6CAEF,6BAAKrF,EAAQsF,uBAEf,+BACE,6BACE,6CAEF,6BAAKtF,EAAQuF,mBAEf,+BACE,6BACE,oDAEF,6BAAKvF,EAAQwF,qBAEf,+BACE,6BACE,qDAEF,6BAAKxF,EAAQyF,qCAOzB,uBACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAMf,GAAG,IAAT,SACE,oBAAIpB,UAAU,KAAd,+BAEF,cAAC,IAAD,CAAMoB,GAAG,IAAT,SACE,eAAC,IAAD,CACEgB,QAAM,EACNC,KAAK,UACLjD,GAAG,UACHN,MAAOf,EACPuE,SA3RH,SAAC1D,GACK,OAAvBA,EAAMC,OAAOC,OACfd,EAAaY,EAAMC,OAAOC,OAC1BlC,EAAM2F,KAAK,CACTC,KAAM,UACNC,MAAO,2BAET7E,EAAgB,IAChB0B,SAASC,eAAe,cAAcS,UAAY,SAElDV,SAASC,eAAe,cAAcS,UAAY,OAClDhC,EAAaY,EAAMC,OAAOC,OAC1BmB,IAAM,CACJC,OAAQ,MACRC,IAAKnF,IAAW,iBAAmB4D,EAAMC,OAAOC,MAChDsB,QAAS,CACP,eAAgB,sBAGjBC,MAAK,SAACC,GACL,IAAMrE,EAAQqE,EAASE,KAAKC,KAAI,SAACC,EAAMgC,GACrC,OAAO,2BACFhC,GADL,IAEE,QAASgC,EAAQ,EACjBC,QAASjC,EAAKG,aACd+B,QAASlC,EAAKmC,qBACd,eAAgBnC,EAAKoC,kBAGzBlF,EAAgB3B,GAChBqD,SAASC,eAAe,cAAcS,UAAY,UAEnDc,OAAM,SAACC,GACNvD,QAAQC,IAAIsD,QAqPI,UAOE,wBAAQjC,MAAM,KAAd,4BACCjB,UAIP,uBACA,cAAC,IAAD,CACE5B,MAAO0B,EACPxB,OAAQA,EACR4G,OAAK,EACLC,SAAO,EACPC,UAAQ,EACRC,QAAM,EACNC,YAAarH,EACbsH,aAAc,GACdC,YAAU,EACV9B,KAAK,KACL+B,mBAAoBrH,EACpBsH,YAAa,CACX,cAAe,SAAC5C,GACd,OACE,6BACE,cAAC,IAAD,CACE6C,KAAK,OACLpE,GAAI,YAAcuB,EAAE8C,aACpB1H,YAAY,SACZ2H,UAAQ,EACRpB,SAAU3C,QAKlB,sBAAuB,SAACgB,GACtB,OACE,6BACE,cAAC,IAAD,CACE6C,KAAK,OACLpE,GAAI,YAAcuB,EAAE8C,aACpB1H,YAAY,mBACZ2H,UAAQ,EACRpB,SAAUzC,QAKlB,iBAAkB,SAACc,GACjB,OACE,6BACE,cAAC,IAAD,CACE6C,KAAK,OACLpE,GAAI,UAAYuB,EAAE8C,aAClB1H,YAAY,SACZ2H,UAAQ,EACRpB,SAAUpD,QAKlB,iBAAkB,SAACyB,GAAD,OAChB,6BACE,mBAAGvB,GAAI,kBAAoBuB,EAAE8C,kBAGjC,eAAgB,SAAC9C,GAAD,OACd,6BACE,mBAAGvB,GAAI,iBAAmBuB,EAAE8C,kBAGhCE,SAAU,SAAChD,GACT,OACE,oBACEX,UAAU,UACVkB,MAAO,CAAEQ,MAAO,kBAFlB,SAIE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMN,GAAG,IAAIF,MAAO,CAAE0C,aAAc,MAApC,SACE,cAAC,IAAD,CACEJ,KAAK,OACLpE,GAAI,cAAgBuB,EAAE8C,aACtB1H,YAAY,WACZ2H,UAAQ,EACRxC,MAAO,CAAEQ,MAAO,OAAQmC,MAAO,YAGnC,cAAC,IAAD,CAAMzC,GAAG,IAAIF,MAAO,CAAE4C,YAAa,MAAnC,SACE,cAAC,IAAD,CACEN,KAAK,OACLpE,GAAG,OACHrD,YAAY,WACZgI,UAAQ,EACR7C,MAAO,CACLQ,MAAO,OACPsC,UAAW,SACXC,WAAY,OAEdnF,MAAO6B,EAAEuD,wCAOrB,eAAgB,SAACvD,GACf,IAAMJ,EAASI,EAAEwD,YAAY1D,KAAI,SAACC,EAAM0D,GAAP,OAC/B,wBAEEtF,MACE6B,EAAE8C,aACF,IACA/C,EAAK2D,gBACL,IACA3D,EAAK4D,iBAPT,SAUG5D,EAAK4D,iBACJ,IACA5D,EAAKwD,+BAXFE,MAcT,OACE,6BACE,eAAC,IAAD,CACEhC,QAAM,EACNC,KAAK,UACLjD,GAAI,aAAeuB,EAAE8C,aACrBnB,SAAU3D,GAJZ,UAME,wBAAQG,MAAM,KAAd,4BACCyB,qBAWrB,cAAC,IAAD,UACE,cAAC,IAAD,CAAMa,GAAG,KAAT,SACE,cAAC,IAAD,CACEE,MAAM,UACNC,KAAK,KACLL,MAAO,CAAE2C,MAAO,SAChBrC,QA7SE,WAClBlC,SAASC,eAAe,cAAcS,UAAY,OAClD,IAAI7E,EAAM,GACVoD,EAAYkC,KAAI,SAACE,GACfnD,QAAQC,IAAIkD,GACZ,IAGI4D,EAAM,CACRC,UAAW7D,EACX8D,UALgBnF,SACfC,eAAe,aAAeoB,GAC9B7B,MAAME,MAAM,KAGU,GACvB2E,SAAUrE,SAASC,eAAe,cAAgBoB,GAAQ7B,MAC1DI,WAAYI,SAASC,eAAe,UAAYoB,GAAQ7B,MACxD4F,SAAUpF,SAASC,eAAe,YAAcoB,GAAQ7B,MACxD6F,eAAgBrF,SAASC,eAAe,YAAcoB,GAAQ7B,MAC9D8F,YAAatF,SAASC,eAAe,iBAAmBoB,GACrDlB,UACHoF,cAAevF,SAASC,eAAe,kBAAoBoB,GACxDlB,WAELtE,EAAI2J,KAAKP,MAEX7F,GAAkBvD,GACC,IAAfA,EAAI4J,QACNnI,EAAM2F,KAAK,CACTC,KAAM,UACNC,MAAO,uCAETnD,SAASC,eAAe,cAAcS,UAAY,SAElDV,SAASC,eAAe,cAAcS,UAAY,OAClDgB,GAAQ8D,KAAK,CACXE,SAAU,6BACVC,MAAO,CAAE9J,MAAKmB,aAAYyB,iBAwQhB,6BAaV,cAAC,IAAD,CAAMqD,GAAG","file":"static/js/76.7da5a903.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/* eslint-disable array-callback-return */\r\n/* eslint-disable no-unused-vars */\r\n/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-25 17:00:15\r\n * @modify date 2021-12-06 15:32:46\r\n * @desc [description]\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CDataTable,\r\n  CButton,\r\n  CSelect,\r\n  CInput,\r\n} from \"@coreui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MyApiUrl } from \"src/services/service\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields = [\r\n  { key: \"Company\" },\r\n  { key: \"Species\" },\r\n  { key: \"Product Name\" },\r\n  { key: \"Package Size\" },\r\n  { key: \"Quantity\" },\r\n  { key: \"Package Amount\" },\r\n  { key: \"Product Amount\" },\r\n  { key: \"Discount(%)\" },\r\n  { key: \"Free Unit Scheme(%)\" },\r\n  { key: \"Total Amount\" },\r\n];\r\n\r\nconst CustomerPlaceOrder = () => {\r\n  const CustomerID = localStorage.getItem(\"CustomerID\");\r\n\r\n  const [xyzData, setxyzData] = useState([]);\r\n\r\n  const GetMyProfile = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getDistributerProfile/\" + CustomerID,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(\"-->\", response.data[0]);\r\n        setxyzData(response.data[0]);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  console.log(\"xyz->\", xyzData.CUSTOMER_NAME);\r\n\r\n  const [ResponseData, setResponseData] = useState([]);\r\n  const [CompanyData, setCompanyData] = useState([]);\r\n  const [CompanyID, setCompanyID] = useState();\r\n  const [ProductAmount, setProductAmount] = useState();\r\n  const [PackageSelect, setPackageSelect] = useState();\r\n  const [PackageAmtval, setPackageAmtval] = useState();\r\n  const [Discount, setDiscount] = useState();\r\n  const [FreeUnit, setFreeUnit] = useState();\r\n  const [FinalAMount, setFinalAMount] = useState([]);\r\n\r\n  const [FinalResult, setFinalResult] = useState([]);\r\n  const [FinalResultNew, setFinalResultNew] = useState([]);\r\n\r\n  const GetAllProducts = (event) => {\r\n    if (event.target.value === \"-1\") {\r\n      setCompanyID(event.target.value);\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select Company!\",\r\n      });\r\n      setResponseData([]);\r\n      document.getElementById(\"divLoading\").className = \"hide\";\r\n    } else {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      setCompanyID(event.target.value);\r\n      axios({\r\n        method: \"GET\",\r\n        url: MyApiUrl + \"prodByCompany/\" + event.target.value,\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          const items = response.data.map((item, index) => {\r\n            return {\r\n              ...item,\r\n              \"Sl No\": index + 1,\r\n              Company: item.COMPANY_NAME,\r\n              Species: item.PRODUCT_SPECIES_NAME,\r\n              \"Product Name\": item.PRODUCT_NAME,\r\n            };\r\n          });\r\n          setResponseData(items);\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const GetAllCompanies = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"companies\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const Option = response.data.map((item, i) => (\r\n          <option key={i} value={item.COMPANY_PKID}>\r\n            {item.COMPANY_NAME}\r\n          </option>\r\n        ));\r\n        setCompanyData(Option);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const SelectPackage = (event) => {\r\n    setPackageSelect(event.target.value);\r\n    let splt = event.target.value;\r\n    let splt2 = splt.split(\"/\");\r\n    let x = [...FinalResult, splt2[0]];\r\n    setFinalResult(x);\r\n  };\r\n\r\n  const PackageAmt = (event) => {\r\n    setPackageAmtval(event.target.value);\r\n\r\n    let productID = event.target.id.split(\"-\");\r\n\r\n    let packagesize = document\r\n      .getElementById(\"packagesel\" + productID[1] + \"\")\r\n      .value.split(\"/\");\r\n\r\n    let requiredqty = document.getElementById(\r\n      \"requiredqth\" + productID[1] + \"\"\r\n    ).value;\r\n\r\n    let finalamt = (requiredqty / packagesize[2]) * event.target.value;\r\n    setFinalAMount(finalamt);\r\n    setProductAmount(finalamt);\r\n    document.getElementById(\"producttotalam1\" + productID[1] + \"\").innerHTML =\r\n      finalamt.toFixed(2);\r\n    document.getElementById(\"producttotalam\" + productID[1] + \"\").innerHTML =\r\n      finalamt.toFixed(2);\r\n  };\r\n\r\n  const DiscountCalculate = (event) => {\r\n    setDiscount(event.target.value);\r\n    if (\r\n      event.target.value === \"\" ||\r\n      event.target.value == null ||\r\n      event.target.value === \"0\"\r\n    ) {\r\n    } else {\r\n      let productID = event.target.id.split(\"-\");\r\n      let actialamt = document.getElementById(\r\n        \"producttotalam1\" + productID[1] + \"\"\r\n      ).innerHTML;\r\n      let finalamt = actialamt - (event.target.value / 100) * actialamt;\r\n      document.getElementById(\"producttotalam\" + productID[1] + \"\").innerHTML =\r\n        finalamt.toFixed(2);\r\n      setFinalAMount(actialamt - (event.target.value / 100) * actialamt);\r\n    }\r\n  };\r\n\r\n  const CalculateFeeUnit = (event) => {\r\n    setFreeUnit(event.target.value);\r\n    // if (\r\n    //   event.target.value === \"\" ||\r\n    //   event.target.value == null ||\r\n    //   event.target.value === \"0\"\r\n    // ) {\r\n    // } else {\r\n    //   let productID = event.target.id.split(\"-\");\r\n    //   let actualamt = document.getElementById(\r\n    //     \"producttotalam\" + productID[1] + \"\"\r\n    //   ).innerHTML;\r\n    //   let finalamt = actualamt - (event.target.value / 100) * actualamt;\r\n    //   document.getElementById(\"producttotalam\" + productID[1] + \"\").innerHTML =\r\n    //     finalamt.toFixed(2);\r\n    //   setFinalAMount(actualamt - (event.target.value / 100) * actualamt);\r\n    // }\r\n  };\r\n\r\n  const FinalSubmit = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    var arr = [];\r\n    FinalResult.map((i) => {\r\n      console.log(i);\r\n      let packageSize = document\r\n        .getElementById(\"packagesel\" + i + \"\")\r\n        .value.split(\"/\");\r\n      var obj = {\r\n        ProductID: i,\r\n        PackageID: packageSize[1],\r\n        Quantity: document.getElementById(\"requiredqth\" + i + \"\").value,\r\n        PackageAmt: document.getElementById(\"amount-\" + i + \"\").value,\r\n        Discount: document.getElementById(\"Discount-\" + i + \"\").value,\r\n        FreeUnitScheme: document.getElementById(\"FreeUnit-\" + i + \"\").value,\r\n        FinalAmount: document.getElementById(\"producttotalam\" + i + \"\")\r\n          .innerHTML,\r\n        ProductAmount: document.getElementById(\"producttotalam1\" + i + \"\")\r\n          .innerHTML,\r\n      };\r\n      arr.push(obj);\r\n    });\r\n    setFinalResultNew(arr);\r\n    if (arr.length === 0) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please select atleast one product!\",\r\n      });\r\n      document.getElementById(\"divLoading\").className = \"hide\";\r\n    } else {\r\n      document.getElementById(\"divLoading\").className = \"hide\";\r\n      history.push({\r\n        pathname: \"/CustomerFinalOrderConfirm\",\r\n        state: { arr, CustomerID, CompanyID },\r\n      });\r\n    }\r\n  };\r\n  console.log(FinalResultNew);\r\n  React.useEffect(() => {\r\n    GetAllCompanies();\r\n    GetMyProfile();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  let history = useHistory();\r\n  return (\r\n    <div>\r\n      <div id=\"divLoading\"> </div>\r\n      <h1 id=\"ccmaster\">Order Item</h1>\r\n      <CRow style={{ marginTop: \"3%\" }}>\r\n        <CCol md=\"2\" />\r\n        <CCol md=\"12\">\r\n        <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol md=\"1\">\r\n                  <CButton\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() => history.goBack()}\r\n                  >\r\n                    Back\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n              <br />\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Customer Details Details</CCardHeader>\r\n                    <CCardBody>\r\n                      <CRow>\r\n                        <CCol md=\"12\">\r\n                          <table id=\"customerDetails\" style={{ width: \"100%\" }}>\r\n                            <tr>\r\n                              <td>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Customer Name :</b>\r\n                                  </th>\r\n                                  <td>{xyzData.CUSTOMER_NAME}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Email :</b>\r\n                                  </th>\r\n                                  <td>{xyzData.CUSTOMER_EMAIL}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Contact Number :</b>\r\n                                  </th>\r\n                                  <td>{xyzData.CUSTOMER_MOBILE}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Category :</b>\r\n                                  </th>\r\n                                  <td>{xyzData.CUSTOMER_CATEGORY_NAME}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Type :</b>\r\n                                  </th>\r\n                                  <td>{xyzData.CUSTOMER_TYPE_NAME}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Sub Type :</b>\r\n                                  </th>\r\n                                  <td>{xyzData.CUSTOMER_SUBTYPE_NAME}</td>\r\n                                </tr>\r\n                              </td>\r\n                              <td>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Capacity :</b>\r\n                                  </th>\r\n                                  <td>{xyzData.CUSTOMER_CAPACITY}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Superior :</b>\r\n                                  </th>\r\n                                  <td>{xyzData.EMPLOYEE_NAME}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Alternate Email :</b>\r\n                                  </th>\r\n                                  <td>{xyzData.CUSTOMER_EMAIL2}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Alternate Number :</b>\r\n                                  </th>\r\n                                  <td>{xyzData.CUSTOMER_ALT_MOBILE}</td>\r\n                                </tr>\r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n                        </CCol>\r\n                      </CRow>\r\n                      <hr />\r\n                      <CRow>\r\n                        <CCol md=\"8\">\r\n                          <h4 className=\"p1\">Select Products</h4>\r\n                        </CCol>\r\n                        <CCol md=\"4\">\r\n                          <CSelect\r\n                            custom\r\n                            name=\"addtype\"\r\n                            id=\"addtype\"\r\n                            value={CompanyID}\r\n                            onChange={GetAllProducts}\r\n                          >\r\n                            <option value=\"-1\">Select Company</option>\r\n                            {CompanyData}\r\n                          </CSelect>\r\n                        </CCol>\r\n                      </CRow>\r\n                      <br />\r\n                      <CDataTable\r\n                        items={ResponseData}\r\n                        fields={fields}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPage={10}\r\n                        pagination\r\n                        size=\"sm\"\r\n                        itemsPerPageSelect={items}\r\n                        scopedSlots={{\r\n                          \"Discount(%)\": (i) => {\r\n                            return (\r\n                              <td>\r\n                                <CInput\r\n                                  type=\"text\"\r\n                                  id={\"Discount-\" + i.PRODUCT_PKID}\r\n                                  placeholder=\"Amount\"\r\n                                  required\r\n                                  onChange={DiscountCalculate}\r\n                                />\r\n                              </td>\r\n                            );\r\n                          },\r\n                          \"Free Unit Scheme(%)\": (i) => {\r\n                            return (\r\n                              <td>\r\n                                <CInput\r\n                                  type=\"text\"\r\n                                  id={\"FreeUnit-\" + i.PRODUCT_PKID}\r\n                                  placeholder=\"Free Unit Scheme\"\r\n                                  required\r\n                                  onChange={CalculateFeeUnit}\r\n                                />\r\n                              </td>\r\n                            );\r\n                          },\r\n                          \"Package Amount\": (i) => {\r\n                            return (\r\n                              <td>\r\n                                <CInput\r\n                                  type=\"text\"\r\n                                  id={\"amount-\" + i.PRODUCT_PKID}\r\n                                  placeholder=\"Amount\"\r\n                                  required\r\n                                  onChange={PackageAmt}\r\n                                />\r\n                              </td>\r\n                            );\r\n                          },\r\n                          \"Product Amount\": (i) => (\r\n                            <td>\r\n                              <p id={\"producttotalam1\" + i.PRODUCT_PKID}></p>\r\n                            </td>\r\n                          ),\r\n                          \"Total Amount\": (i) => (\r\n                            <td>\r\n                              <p id={\"producttotalam\" + i.PRODUCT_PKID}></p>\r\n                            </td>\r\n                          ),\r\n                          Quantity: (i) => {\r\n                            return (\r\n                              <td\r\n                                className=\"TDClass\"\r\n                                style={{ width: \"20% !important\" }}\r\n                              >\r\n                                <CRow>\r\n                                  <CCol md=\"6\" style={{ paddingRight: \"0%\" }}>\r\n                                    <CInput\r\n                                      type=\"text\"\r\n                                      id={\"requiredqth\" + i.PRODUCT_PKID}\r\n                                      placeholder=\"Required\"\r\n                                      required\r\n                                      style={{ width: \"100%\", float: \"left\" }}\r\n                                    />\r\n                                  </CCol>\r\n                                  <CCol md=\"6\" style={{ paddingLeft: \"0%\" }}>\r\n                                    <CInput\r\n                                      type=\"text\"\r\n                                      id=\"Unit\"\r\n                                      placeholder=\"Required\"\r\n                                      readOnly\r\n                                      style={{\r\n                                        width: \"100%\",\r\n                                        textAlign: \"center\",\r\n                                        fontWeight: \"700\",\r\n                                      }}\r\n                                      value={i.UNIT_OF_MEASUREMENT_SHORT_KEY}\r\n                                    />\r\n                                  </CCol>\r\n                                </CRow>\r\n                              </td>\r\n                            );\r\n                          },\r\n                          \"Package Size\": (i) => {\r\n                            const Option = i.packagesArr.map((item, j) => (\r\n                              <option\r\n                                key={j}\r\n                                value={\r\n                                  i.PRODUCT_PKID +\r\n                                  \"/\" +\r\n                                  item.PRD_PACKAG_PKID +\r\n                                  \"/\" +\r\n                                  item.PRD_PACKAGE_UNIT\r\n                                }\r\n                              >\r\n                                {item.PRD_PACKAGE_UNIT +\r\n                                  \" \" +\r\n                                  item.UNIT_OF_MEASUREMENT_SHORT_KEY}\r\n                              </option>\r\n                            ));\r\n                            return (\r\n                              <td>\r\n                                <CSelect\r\n                                  custom\r\n                                  name=\"addtype\"\r\n                                  id={\"packagesel\" + i.PRODUCT_PKID}\r\n                                  onChange={SelectPackage}\r\n                                >\r\n                                  <option value=\"-1\">Select Package</option>\r\n                                  {Option}\r\n                                </CSelect>\r\n                              </td>\r\n                            );\r\n                          },\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <CCol md=\"12\">\r\n                  <CButton\r\n                    color=\"primary\"\r\n                    size=\"sm\"\r\n                    style={{ float: \"right\" }}\r\n                    onClick={FinalSubmit}\r\n                  >\r\n                    Next\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol md=\"2\" />\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerPlaceOrder;\r\n"],"sourceRoot":""}