{"version":3,"sources":["services/service.js","views/EmployeeMaster/ImportEmployees.js"],"names":["MyApiUrl","ViewImg","table","placeholder","label","items","values","fieldsDemo","key","ImportEmployees","history","useHistory","useState","ResponseData","setResponseData","ProcessExcel","data","excelRows","workbook","XLSX","type","firstSheet","SheetNames","sheet_to_row_object_array","Sheets","defval","console","log","document","getElementById","className","React","useEffect","id","style","marginTop","xs","sm","md","lg","xl","boxShadow","fontSize","action","method","encType","row","htmlFor","name","onChange","even","test","target","files","toLowerCase","FileReader","reader","readAsBinaryString","onload","e","result","bytes","Uint8Array","i","byteLength","String","fromCharCode","readAsArrayBuffer","Swal","fire","title","icon","confirmButtonText","size","onClick","obj","axios","post","then","response","push","catch","error","fields","hover","striped","bordered","tableFilter","itemsPerPageSelect","sorter","itemsPerPage","pagination","scopedSlots"],"mappings":"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","file":"static/js/20.7b69733e.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-12-07 11:58:06\r\n * @modify date 2021-12-07 16:26:19\r\n * @desc [description]\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport { MyApiUrl } from \"src/services/service\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CRow,\r\n  CDataTable,\r\n  CInput,\r\n  CLabel,\r\n} from \"@coreui/react\";\r\nimport \"../../style.css\";\r\nimport * as XLSX from \"xlsx\";\r\n//import ExcelPage from \"../../ForExcel/components/excelPage\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields2 = [\r\n  { key: \"EmployeeType\" },\r\n  { key: \"EmployeeSubType\" },\r\n  { key: \"EmployeeName\" },\r\n  { key: \"DOB\" },\r\n  { key: \"Mobile\" },\r\n];\r\n\r\nconst fieldsDemo = [\r\n  { key: \"Name\" },\r\n  { key: \"Email\" },\r\n  { key: \"Email2\" },\r\n  { key: \"CountryCode\" },\r\n  { key: \"PhoneNumber\" },\r\n  { key: \"AlterNateNumber\" },\r\n  { key: \"Designation\" },\r\n  { key: \"Qualification\" },\r\n  { key: \"JoiningDate\" },\r\n  { key: \"DateofBirth\" },\r\n  { key: \"Region\" },\r\n  { key: \"Gender\" },\r\n  { key: \"password\" },\r\n  { key: \"Ismanager\" },\r\n  { key: \"salary\" },\r\n  { key: \"dateofreleaving\" },\r\n  { key: \"address1\" },\r\n  { key: \"address2\" },\r\n  { key: \"address3\" },\r\n  { key: \"ZipCode\" },\r\n  { key: \"altaddress1\" },\r\n  { key: \"altaddress2\" },\r\n  { key: \"altaddress3\" },\r\n  { key: \"altZipCode\" },\r\n];\r\n\r\nconst ImportEmployees = () => {\r\n  let history = useHistory();\r\n  const [ResponseData, setResponseData] = useState([]);\r\n\r\n  const GetFiles = (even) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    let regex = /^([a-zA-Z0-9\\s_\\\\.\\-:])+(.xls|.xlsx)$/;\r\n    if (regex.test(even.target.files[0].name.toLowerCase())) {\r\n      if (typeof FileReader != \"undefined\") {\r\n        let reader = new FileReader();\r\n        //For Browsers other than IE.\r\n        if (reader.readAsBinaryString) {\r\n          reader.onload = function (e) {\r\n            ProcessExcel(e.target.result);\r\n          };\r\n          reader.readAsBinaryString(even.target.files[0]);\r\n        } else {\r\n          //For IE Browser.\r\n          reader.onload = function (e) {\r\n            let data = \"\";\r\n            let bytes = new Uint8Array(e.target.result);\r\n            for (let i = 0; i < bytes.byteLength; i++) {\r\n              data += String.fromCharCode(bytes[i]);\r\n            }\r\n            ProcessExcel(data);\r\n          };\r\n          reader.readAsArrayBuffer(even.target.files[0]);\r\n        }\r\n      } else {\r\n        Swal.fire({\r\n          title: \"This browser does not support HTML5.!\",\r\n          icon: \"info\",\r\n          confirmButtonText: \"OK\",\r\n        });\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      }\r\n    } else {\r\n      Swal.fire({\r\n        title: \"Please upload a valid Excel file.!\",\r\n        icon: \"info\",\r\n        confirmButtonText: \"OK\",\r\n      });\r\n      document.getElementById(\"divLoading\").className = \"hide\";\r\n    }\r\n  };\r\n\r\n  const ProcessExcel = (data) => {\r\n    let excelRows = \"\";\r\n    let workbook = XLSX.read(data, {\r\n      type: \"binary\",\r\n    });\r\n    let firstSheet = workbook.SheetNames[0];\r\n    excelRows = XLSX.utils.sheet_to_row_object_array(\r\n      workbook.Sheets[firstSheet], { defval: \"-\" }\r\n    );\r\n    console.log(excelRows);\r\n    setResponseData(excelRows);\r\n    document.getElementById(\"divLoading\").className = \"hide\";\r\n  };\r\n\r\n  const AddEmp = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    const obj = {\r\n      \"Employees\": ResponseData\r\n    }\r\n    console.log(obj);\r\n    axios\r\n      .post(MyApiUrl + \"importemps\", obj)\r\n      .then(function (response) {\r\n        console.log(response.data);\r\n        if (response.data === true) {\r\n          Swal.fire({\r\n            title: \"Employee Added Successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          history.push(\"/ViewEmployees\");\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        } else if (response.data === false) {\r\n          Swal.fire({\r\n            title: \"Employee Failed To Add!\",\r\n            icon: \"warning\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => { }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"divLoading\"> </div>\r\n      <h1 id=\"ccmaster\">Import Employees From Excel</h1>\r\n      <CRow style={{ marginTop: \"3%\" }}>\r\n        <CCol xs=\"12\" sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\" className=\"mb-3 mb-xl-0\">\r\n          <div id=\"country-master\">\r\n            <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol>\r\n                    <CCard>\r\n                      <CCardHeader style={{ fontSize: \"13px\" }}>Import Employees From Excel</CCardHeader>\r\n                      <CCardBody>\r\n                        <CForm\r\n                          action=\"\"\r\n                          method=\"post\"\r\n                          encType=\"multipart/form-data\"\r\n                          className=\"form-horizontal\"\r\n                        >\r\n                          <CFormGroup row>\r\n                            <CCol md=\"12\">\r\n                              <CLabel\r\n                                htmlFor=\"exampleInputName2\"\r\n                                className=\"pr-1\"\r\n                              >\r\n                                <h6>Select Excel</h6>\r\n                              </CLabel>\r\n                              <CInput\r\n                                type=\"file\"\r\n                                id=\"Question\"\r\n                                name=\"Question\"\r\n                                placeholder=\"Enter Title\"\r\n                                onChange={GetFiles}\r\n                              />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                        </CForm>\r\n                      </CCardBody>\r\n                    </CCard>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n            </CCard>\r\n          </div>\r\n        </CCol>\r\n\r\n        <CCol xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" className=\"mb-3 mb-xl-0\">\r\n          <div id=\"country-table\">\r\n            <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol md=\"12\">\r\n                    <div>\r\n                      <CButton size=\"sm\" id=\"AddEmp\" onClick={AddEmp}>\r\n                        Upload Excel\r\n                      </CButton>\r\n                      <br />\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol>\r\n                    <CCard>\r\n                      <CCardHeader>Loaded Excel</CCardHeader>\r\n\r\n                      <CCardBody>\r\n                        {/* <ExcelPage /> */}\r\n                        <CDataTable\r\n                          items={ResponseData}\r\n                          fields={fieldsDemo}\r\n                          hover\r\n                          striped\r\n                          bordered\r\n                          tableFilter={table}\r\n                          itemsPerPageSelect={items}\r\n                          sorter\r\n                          size=\"sm\"\r\n                          itemsPerPage={10}\r\n                          pagination\r\n                          scopedSlots={{}}\r\n                        />\r\n                      </CCardBody>\r\n                    </CCard>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n            </CCard>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImportEmployees;\r\n"],"sourceRoot":""}