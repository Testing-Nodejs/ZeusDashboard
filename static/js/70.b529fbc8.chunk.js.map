{"version":3,"sources":["services/service.js","../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/icons/DeleteSharp.js","views/masters/DistrictMaster.js"],"names":["MyApiUrl","ViewImg","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","table","placeholder","label","items","values","fields1","key","DistrictMaster","useState","DistrictPkid","setDistrictPkid","CountryData","setCountryData","StateData","setStateData","DistrictData","setDistrictData","SelectedCountry","setSelectedCountry","SelectedState","setSelectedState","DistrictName","setDistrictName","AddButton","setAddButton","UpdateButton","setUpdateButton","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","GetState","cid","document","getElementById","className","axios","method","url","headers","then","response","StateOption","data","map","item","STATE_PKID","STATE_NAME","catch","error","console","log","AddDistrict","fire","icon","title","obj","post","confirmButtonText","Reset","GetDistrict","GetCountry","UpdateDistrict","put","useCallback","CountryOption","COUNTRY_PKID","COUNTRY_NAME","GetAllStates","Country","State","District","DISTRICT_NAME","useEffect","Updatebtn","type","onClick","size","id","Addbtn","style","marginTop","sm","md","lg","xl","boxShadow","action","encType","row","xs","custom","name","onChange","event","target","STATE_COUNTRY_FKID","replace","col","fields","hover","striped","bordered","sorter","tableFilter","itemsPerPageSelect","itemsPerPage","pagination","scopedSlots","Action","countryid","stateid","district","DISTRICT_PKID","DISTRICT_COUNTRY_FKID","DISTRICT_STATE_FKID","status","confirm"],"mappings":"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","file":"static/js/70.b529fbc8.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 21h12V7H6v14zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteSharp');\n\nexports.default = _default;","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CForm,\r\n    CFormGroup,\r\n    CInput,\r\n    CSelect,\r\n    CRow,\r\n    CDataTable,\r\n    CLabel,\r\n} from \"@coreui/react\";\r\nimport { MyApiUrl } from \"src/services/service\";\r\nimport Swal from \"sweetalert2\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields1 = [{ key: \"Action\" }, { key: \"Country\" }, { key: \"State\" }, { key: \"District\" }];\r\n\r\nconst DistrictMaster = () => {\r\n\r\n    const [DistrictPkid, setDistrictPkid] = useState();\r\n    const [CountryData, setCountryData] = useState([]);\r\n    const [StateData, setStateData] = useState([]);\r\n    const [DistrictData, setDistrictData] = useState([]);\r\n    const [SelectedCountry, setSelectedCountry] = useState(\"-1\");\r\n    const [SelectedState, setSelectedState] = useState(\"-1\");\r\n    const [DistrictName, setDistrictName] = useState();\r\n    const [AddButton, setAddButton] = useState(true);\r\n    const [UpdateButton, setUpdateButton] = useState(false);\r\n\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: \"top-end\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n        timerProgressBar: true,\r\n        didOpen: (toast) => {\r\n            toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n            toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n        },\r\n    });\r\n\r\n    const CountryChange = (event) => {\r\n        setSelectedCountry(event.target.value);\r\n        GetState(event.target.value);\r\n    };\r\n\r\n    const GetState = (cid) => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"getStateByCountryId/\" + cid + \"\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                const StateOption = response.data.map((item) => (\r\n                    <option value={item.STATE_PKID}>{item.STATE_NAME}</option>\r\n                ));\r\n                setStateData(StateOption);\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const StateChange = (event) => {\r\n        setSelectedState(event.target.value);\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"states/\" + event.target.value + \"\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                console.log(response.data.STATE_COUNTRY_FKID)\r\n                setSelectedCountry(response.data.STATE_COUNTRY_FKID);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error); \r\n            });\r\n    };\r\n\r\n    const AddDistrict = () => {\r\n        if (SelectedCountry === \"-1\") {\r\n            Toast.fire({\r\n                icon: \"warning\",\r\n                title: \"Please Select Country!\",\r\n            });\r\n        } else if (SelectedState === \"-1\") {\r\n            Toast.fire({\r\n                icon: \"warning\",\r\n                title: \"Please Select State!\",\r\n            });\r\n        } else if (DistrictName === \"\" || DistrictName == null) {\r\n            Toast.fire({\r\n                icon: \"warning\",\r\n                title: \"Please Enter District Name!\",\r\n            });\r\n        } else {\r\n            document.getElementById(\"divLoading\").className = \"show\";\r\n            const obj = {\r\n                \"DISTRICT_COUNTRY_FKID\": SelectedCountry,\r\n                \"DISTRICT_STATE_FKID\": SelectedState,\r\n                \"DISTRICT_NAME\": DistrictName\r\n            };\r\n            axios.post(MyApiUrl + \"districts\", obj).then((response) => {\r\n                if (response.data === \"0\") {\r\n                    Swal.fire({\r\n                        title: \"District Already Exist!\",\r\n                        icon: \"info\",\r\n                        confirmButtonText: \"OK\",\r\n                    });\r\n                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                } else if (response.data === true) {\r\n                    Swal.fire({\r\n                        title: \"District Added Successfully!\",\r\n                        icon: \"success\",\r\n                        confirmButtonText: \"OK\",\r\n                    });\r\n                    Reset();\r\n                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                } else if (response.data === false) {\r\n                    Swal.fire({\r\n                        title: \"Failed To Add!\",\r\n                        icon: \"error\",\r\n                        confirmButtonText: \"OK\",\r\n                    });\r\n                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const Reset = () => {\r\n        GetDistrict();\r\n        GetCountry();\r\n        setSelectedCountry(\"-1\");\r\n        setSelectedState(\"-1\");\r\n        setDistrictName(\"\");\r\n        setAddButton(true);\r\n        setUpdateButton(false);\r\n    }\r\n\r\n    const EditDistrict = (id, countryid, stateid, district) => {\r\n        setDistrictPkid(id);\r\n        setSelectedCountry(countryid);\r\n        setSelectedState(stateid);\r\n        setDistrictName(district);\r\n        setAddButton(false);\r\n        setUpdateButton(true);\r\n    };\r\n\r\n    const UpdateDistrict = () => {\r\n        if (SelectedCountry === \"-1\") {\r\n            Toast.fire({\r\n                icon: \"warning\",\r\n                title: \"Please Select Country!\",\r\n            });\r\n        } else if (SelectedState === \"-1\") {\r\n            Toast.fire({\r\n                icon: \"warning\",\r\n                title: \"Please Select State!\",\r\n            });\r\n        } else if (DistrictName === \"\" || DistrictName == null) {\r\n            Toast.fire({\r\n                icon: \"warning\",\r\n                title: \"Please Enter District Name!\",\r\n            });\r\n        } else {\r\n            document.getElementById(\"divLoading\").className = \"show\";\r\n            const obj = {\r\n                \"DISTRICT_COUNTRY_FKID\": SelectedCountry,\r\n                \"DISTRICT_STATE_FKID\": SelectedState,\r\n                \"DISTRICT_NAME\": DistrictName,\r\n                \"DISTRICT_PKID\": DistrictPkid\r\n            };\r\n            axios.put(MyApiUrl + \"districts/\" + DistrictPkid, obj).then((response) => {\r\n                if (response.data === true) {\r\n                    Swal.fire({\r\n                        title: \"District Details Updated Successfully!\",\r\n                        icon: \"success\",\r\n                        confirmButtonText: \"OK\",\r\n                    });\r\n                    Reset();\r\n                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                } else if (response.data === false) {\r\n                    Swal.fire({\r\n                        title: \"Failed To Update!\",\r\n                        icon: \"error\",\r\n                        confirmButtonText: \"OK\",\r\n                    });\r\n                    document.getElementById(\"divLoading\").className = \"hide\";\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const DeleteDistrict = (id) => {\r\n        // eslint-disable-next-line no-restricted-globals\r\n        var res = confirm(\"Are you sure you want to delete\");\r\n        if (res) {\r\n            document.getElementById(\"divLoading\").className = \"show\";\r\n            axios({\r\n                method: \"DELETE\",\r\n                url: MyApiUrl + \"districts/\" + id + \"\",\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    if (response.data === true) {\r\n                        Swal.fire({\r\n                            title: \"Selected District Deleted!\",\r\n                            icon: \"success\",\r\n                            confirmButtonText: \"OK\",\r\n                        });\r\n                        GetDistrict();\r\n                        document.getElementById(\"divLoading\").className = \"hide\";\r\n                    } else {\r\n                        Swal.fire({\r\n                            title: \"Failed To Delete District!\",\r\n                            icon: \"error\",\r\n                            confirmButtonText: \"OK\",\r\n                        });\r\n                        document.getElementById(\"divLoading\").className = \"hide\";\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const GetCountry = React.useCallback(() => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"countries\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                const CountryOption = response.data.map((item) => (\r\n                    <option value={item.COUNTRY_PKID}>{item.COUNTRY_NAME}</option>\r\n                ));\r\n                setCountryData(CountryOption);\r\n                GetAllStates();\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }, []);\r\n\r\n    const GetAllStates = () => {\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"states\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                const StateOption = response.data.map((item) => (\r\n                    <option value={item.STATE_PKID}>{item.STATE_NAME}</option>\r\n                ));\r\n                setStateData(StateOption);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const GetDistrict = () => {\r\n        document.getElementById(\"divLoading\").className = \"show\";\r\n        axios({\r\n            method: \"GET\",\r\n            url: MyApiUrl + \"districts\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                const items = response.data.map((item) => {\r\n                    return {\r\n                        ...item,\r\n                        Country: item.COUNTRY_NAME,\r\n                        State: item.STATE_NAME,\r\n                        District: item.DISTRICT_NAME,\r\n                    };\r\n                });\r\n                setDistrictData(items);\r\n                document.getElementById(\"divLoading\").className = \"hide\";\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        GetCountry();\r\n        GetDistrict();\r\n    }, []);\r\n\r\n    const Updatebtn = () => (\r\n        <CButton type=\"button\" onClick={UpdateDistrict} size=\"md\" id=\"Add-btn\">\r\n            Update\r\n        </CButton>\r\n    );\r\n\r\n    const Addbtn = () => (\r\n        <CButton type=\"button\" onClick={AddDistrict} size=\"md\" id=\"Add-btn\">\r\n            Add\r\n        </CButton>\r\n    );\r\n\r\n    return (\r\n        <div id=\"state\">\r\n            <div id=\"divLoading\"> </div>\r\n            <h1 id=\"ccmaster\">\r\n                District Master\r\n            </h1>\r\n            <CRow style={{ marginTop: \"3%\" }}>\r\n                <CCol sm=\"12\" md=\"12\" lg=\"4\" xl=\"4\" className=\"mb-3 mb-xl-0\">\r\n                    <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n                        <CCardBody>\r\n                            <CRow>\r\n                                <CCol>\r\n                                    <CCard>\r\n                                        <CCardHeader>Add District</CCardHeader>\r\n                                        <CCardBody>\r\n                                            <CForm\r\n                                                action=\"\"\r\n                                                method=\"post\"\r\n                                                encType=\"multipart/form-data\"\r\n                                                className=\"form-horizontal\"\r\n                                            >\r\n                                                <CFormGroup row>\r\n                                                    <CCol xs=\"12\" md=\"12\">\r\n                                                        <CLabel>Select Country</CLabel>\r\n                                                        <CSelect\r\n                                                            custom\r\n                                                            name=\"Country\"\r\n                                                            id=\"Country\"\r\n                                                            onChange={CountryChange}\r\n                                                            value={SelectedCountry}\r\n                                                        >\r\n                                                            <option value=\"-1\">Select Country</option>\r\n                                                            {CountryData}\r\n                                                        </CSelect>\r\n                                                    </CCol>\r\n                                                </CFormGroup>\r\n                                                <CFormGroup row>\r\n                                                    <CCol xs=\"12\" md=\"12\">\r\n                                                        <CLabel>Select State</CLabel>\r\n                                                        <CSelect\r\n                                                            custom\r\n                                                            name=\"Country\"\r\n                                                            id=\"Country\"\r\n                                                            onChange={StateChange}\r\n                                                            value={SelectedState}\r\n                                                        >\r\n                                                            <option value=\"-1\">Select State</option>\r\n                                                            {StateData}\r\n                                                        </CSelect>\r\n                                                    </CCol>\r\n                                                </CFormGroup>\r\n                                                <CFormGroup row>\r\n                                                    <CCol xs=\"12\" md=\"12\">\r\n                                                        <CLabel>District</CLabel>\r\n                                                        <CInput\r\n                                                            id=\"text-input\"\r\n                                                            name=\"text-input\"\r\n                                                            placeholder=\"District\"\r\n                                                            value={DistrictName}\r\n                                                            onChange={(event) => {\r\n                                                                let value = event.target.value;\r\n                                                                value = value.replace(/[^A-Z a-z]/gi, \"\");\r\n                                                                setDistrictName(value);\r\n                                                            }}\r\n                                                        />\r\n                                                    </CCol>\r\n                                                </CFormGroup>\r\n                                            </CForm>\r\n                                            {AddButton && <Addbtn />}\r\n                                            {UpdateButton && <Updatebtn />}\r\n                                        </CCardBody>\r\n                                    </CCard>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n\r\n                <CCol col=\"10\">\r\n                    <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n                        <CCardBody>\r\n                            <CRow>\r\n                                <CCol>\r\n                                    <CCard>\r\n                                        <CCardHeader>Added District</CCardHeader>\r\n                                        <CCardBody>\r\n                                            <CDataTable\r\n                                                items={DistrictData}\r\n                                                fields={fields1}\r\n                                                hover\r\n                                                striped\r\n                                                bordered\r\n                                                sorter\r\n                                                tableFilter={table}\r\n                                                size=\"sm\"\r\n                                                itemsPerPageSelect={items}\r\n                                                itemsPerPage={10}\r\n                                                pagination\r\n                                                scopedSlots={{\r\n                                                    Action: (item) => (\r\n                                                        <td>\r\n                                                            <CButton\r\n                                                                size=\"sm\"\r\n                                                                onClick={() => {\r\n                                                                    EditDistrict(\r\n                                                                        item.DISTRICT_PKID,\r\n                                                                        item.DISTRICT_COUNTRY_FKID,\r\n                                                                        item.DISTRICT_STATE_FKID,\r\n                                                                        item.DISTRICT_NAME\r\n                                                                    );\r\n                                                                }}\r\n                                                                id=\"war-btn\"\r\n                                                            >\r\n                                                                <EditIcon />\r\n                                                                {item.status}\r\n                                                            </CButton>\r\n                                                            <CButton\r\n                                                                size=\"sm\"\r\n                                                                onClick={() => {\r\n                                                                    DeleteDistrict(item.DISTRICT_PKID);\r\n                                                                }}\r\n                                                                id=\"war-btn1\"\r\n                                                            >\r\n                                                                <DeleteSharpIcon />\r\n                                                                {item.status}\r\n                                                            </CButton>\r\n                                                        </td>\r\n                                                    ),\r\n                                                }}\r\n                                            />\r\n                                        </CCardBody>\r\n                                    </CCard>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n            </CRow>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DistrictMaster;\r\n"],"sourceRoot":""}