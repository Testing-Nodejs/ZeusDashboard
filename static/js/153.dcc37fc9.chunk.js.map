{"version":3,"sources":["views/EmployeeMaster/AddEmployeeIncentive.js"],"names":["table","placeholder","label","items","values","fields","key","AddEmployeeIncentive","props","empid","location","state","data","EMPLOYEE_PKID","useState","INCENTIVE_EMPLOYEE_FKID","INCENTIVE_AMOUNT","INCENTIVE_DESCRIPTION","INCENTIVE_MONTH","INCENTIVE_PKID","INCENTIVE_TYPE","ResponseData","AddButton","UpdateButton","Monthselection","YearSelection","Kimo","setKimo","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","ViewMonthOrYear","e","val","target","value","console","log","AddIncentive","fire","icon","title","document","getElementById","className","monthobj","obj","axios","post","MyApiUrl","then","response","confirmButtonText","fetchData","checked","UpdateIncentive","put","React","useCallback","method","url","headers","params","language_code","map","item","Month","Amount","Description","catch","error","Updatebtn","type","onClick","size","id","Addbtn","Fragment","name","onChange","Year","useEffect","style","marginTop","xs","sm","md","lg","xl","boxShadow","action","encType","row","hover","striped","bordered","tableFilter","itemsPerPageSelect","sorter","itemsPerPage","pagination","scopedSlots","Action","empid2","amt","desc","month","date","split","EditIncentive","status","confirm"],"mappings":"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","file":"static/js/153.dcc37fc9.chunk.js","sourcesContent":["/**\r\n * @author KimoSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-25 18:21:31\r\n * @modify date 2021-12-07 12:26:04\r\n * @desc [description]\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CRow,\r\n  CDataTable,\r\n  CLabel,\r\n} from \"@coreui/react\";\r\n\r\nimport { MyApiUrl } from \"src/services/service\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\nimport \"../../style.css\";\r\nimport \"../../RadioButtons.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields = [\r\n  { key: \"Action\" },\r\n  { key: \"Month / Year\" },\r\n  { key: \"Amount\" },\r\n  { key: \"Description\" },\r\n];\r\n\r\nconst AddEmployeeIncentive = (props) => {\r\n  const empid = props.location.state.data.EMPLOYEE_PKID;\r\n  const [Kimo, setKimo] = useState({\r\n    INCENTIVE_EMPLOYEE_FKID: empid,\r\n    INCENTIVE_AMOUNT: \"\",\r\n    INCENTIVE_DESCRIPTION: \"\",\r\n    INCENTIVE_MONTH: \"\",\r\n    INCENTIVE_PKID: \"\",\r\n    INCENTIVE_TYPE: \"\",\r\n    ResponseData: [],\r\n    AddButton: true,\r\n    UpdateButton: false,\r\n    Monthselection: false,\r\n    YearSelection: false,\r\n  });\r\n\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  const ViewMonthOrYear = (e) => {\r\n    let val = e.target.value;\r\n    console.log(val);\r\n    if (val === \"monthly\") {\r\n      setKimo({\r\n        ...Kimo,\r\n        Monthselection: true,\r\n        YearSelection: false,\r\n        INCENTIVE_TYPE: val,\r\n      });\r\n    } else {\r\n      setKimo({\r\n        ...Kimo,\r\n        Monthselection: false,\r\n        YearSelection: true,\r\n        INCENTIVE_TYPE: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  const AddIncentive = () => {\r\n    if (Kimo.INCENTIVE_MONTH === \"\" || Kimo.INCENTIVE_MONTH === null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Select Month OR Year!\",\r\n      });\r\n    } else if (Kimo.INCENTIVE_AMOUNT === \"\" || Kimo.INCENTIVE_AMOUNT === null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Add Amount!\",\r\n      });\r\n    } else if (\r\n      Kimo.INCENTIVE_DESCRIPTION === \"\" ||\r\n      Kimo.INCENTIVE_DESCRIPTION === null\r\n    ) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Add Description!\",\r\n      });\r\n    } else {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      let monthobj = \"\";\r\n      if (Kimo.INCENTIVE_TYPE === \"monthly\") {\r\n        monthobj = Kimo.INCENTIVE_MONTH + \"-01\";\r\n      } else {\r\n        monthobj = Kimo.INCENTIVE_MONTH;\r\n      }\r\n      const obj = {\r\n        INCENTIVE_EMPLOYEE_FKID: Kimo.INCENTIVE_EMPLOYEE_FKID,\r\n        INCENTIVE_AMOUNT: Kimo.INCENTIVE_AMOUNT,\r\n        INCENTIVE_DESCRIPTION: Kimo.INCENTIVE_DESCRIPTION,\r\n        INCENTIVE_MONTH: monthobj,\r\n        INCENTIVE_TYPE: Kimo.INCENTIVE_TYPE,\r\n      };\r\n      axios.post(MyApiUrl + \"incentives\", obj).then((response) => {\r\n        if (response.data === \"0\") {\r\n          Swal.fire({\r\n            title: \"Already Exist!\",\r\n            icon: \"info\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          fetchData();\r\n          setKimo({\r\n            ...Kimo,\r\n            INCENTIVE_EMPLOYEE_FKID: empid,\r\n            INCENTIVE_AMOUNT: \"\",\r\n            INCENTIVE_DESCRIPTION: \"\",\r\n            INCENTIVE_MONTH: \"\",\r\n            INCENTIVE_PKID: \"\",\r\n            INCENTIVE_TYPE: \"\",\r\n            AddButton: true,\r\n            UpdateButton: false,\r\n            Monthselection: false,\r\n            YearSelection: false,\r\n          });\r\n          document.getElementById(\"monthly\").checked = false;\r\n          document.getElementById(\"yearly\").checked = false;\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        } else if (response.data === true) {\r\n          Swal.fire({\r\n            title: \"Added Successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          fetchData();\r\n          setKimo({\r\n            ...Kimo,\r\n            INCENTIVE_EMPLOYEE_FKID: empid,\r\n            INCENTIVE_AMOUNT: \"\",\r\n            INCENTIVE_DESCRIPTION: \"\",\r\n            INCENTIVE_MONTH: \"\",\r\n            INCENTIVE_PKID: \"\",\r\n            INCENTIVE_TYPE: \"\",\r\n            AddButton: true,\r\n            UpdateButton: false,\r\n            Monthselection: false,\r\n            YearSelection: false,\r\n          });\r\n          document.getElementById(\"monthly\").checked = false;\r\n          document.getElementById(\"yearly\").checked = false;\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        } else if (response.data === false) {\r\n          Swal.fire({\r\n            title: \"Failed To Add!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const UpdateIncentive = () => {\r\n    if (Kimo.INCENTIVE_MONTH === \"\" || Kimo.INCENTIVE_MONTH === null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Select Month OR Year!\",\r\n      });\r\n    } else if (Kimo.INCENTIVE_AMOUNT === \"\" || Kimo.INCENTIVE_AMOUNT === null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Add Amount!\",\r\n      });\r\n    } else if (\r\n      Kimo.INCENTIVE_DESCRIPTION === \"\" ||\r\n      Kimo.INCENTIVE_DESCRIPTION === null\r\n    ) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Add Description!\",\r\n      });\r\n    } else {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      let monthobj = \"\";\r\n      if (Kimo.INCENTIVE_TYPE === \"monthly\") {\r\n        monthobj = Kimo.INCENTIVE_MONTH + \"-01\";\r\n      } else {\r\n        monthobj = Kimo.INCENTIVE_MONTH;\r\n      }\r\n      const obj = {\r\n        INCENTIVE_EMPLOYEE_FKID: Kimo.INCENTIVE_EMPLOYEE_FKID,\r\n        INCENTIVE_AMOUNT: Kimo.INCENTIVE_AMOUNT,\r\n        INCENTIVE_DESCRIPTION: Kimo.INCENTIVE_DESCRIPTION,\r\n        INCENTIVE_MONTH: monthobj,\r\n        INCENTIVE_TYPE: Kimo.INCENTIVE_TYPE,\r\n      };\r\n\r\n      axios\r\n        .put(MyApiUrl + \"incentives/\" + Kimo.INCENTIVE_PKID, obj)\r\n        .then((response) => {\r\n          if (response.data === \"0\") {\r\n            Swal.fire({\r\n              title: \"Already Exist!\",\r\n              icon: \"info\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n            fetchData();\r\n            setKimo({\r\n              ...Kimo,\r\n              INCENTIVE_EMPLOYEE_FKID: empid,\r\n              INCENTIVE_AMOUNT: \"\",\r\n              INCENTIVE_DESCRIPTION: \"\",\r\n              INCENTIVE_MONTH: \"\",\r\n              INCENTIVE_PKID: \"\",\r\n              INCENTIVE_TYPE: \"\",\r\n              AddButton: true,\r\n              UpdateButton: false,\r\n              Monthselection: false,\r\n              YearSelection: false,\r\n            });\r\n            document.getElementById(\"monthly\").checked = false;\r\n            document.getElementById(\"yearly\").checked = false;\r\n            document.getElementById(\"divLoading\").className = \"hide\";\r\n          } else if (response.data === true) {\r\n            Swal.fire({\r\n              title: \"Update Successfully!\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n            fetchData();\r\n            setKimo({\r\n              ...Kimo,\r\n              INCENTIVE_EMPLOYEE_FKID: empid,\r\n              INCENTIVE_AMOUNT: \"\",\r\n              INCENTIVE_DESCRIPTION: \"\",\r\n              INCENTIVE_MONTH: \"\",\r\n              INCENTIVE_PKID: \"\",\r\n              INCENTIVE_TYPE: \"\",\r\n              AddButton: true,\r\n              UpdateButton: false,\r\n              Monthselection: false,\r\n              YearSelection: false,\r\n            });\r\n            document.getElementById(\"monthly\").checked = false;\r\n            document.getElementById(\"yearly\").checked = false;\r\n            document.getElementById(\"divLoading\").className = \"hide\";\r\n          } else if (response.data === false) {\r\n            Swal.fire({\r\n              title: \"Failed To Update!\",\r\n              icon: \"error\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n            document.getElementById(\"divLoading\").className = \"hide\";\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const EditIncentive = (id, empid2, amt, desc, month, type) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    if (type === \"monthly\") {\r\n      document.getElementById(\"monthly\").checked = true;\r\n      document.getElementById(\"yearly\").checked = false;\r\n      const date = month.split(\"-\");\r\n      setKimo({\r\n        ...Kimo,\r\n        INCENTIVE_EMPLOYEE_FKID: empid2,\r\n        INCENTIVE_AMOUNT: amt,\r\n        INCENTIVE_DESCRIPTION: desc,\r\n        INCENTIVE_MONTH: date[0] + \"-\" + date[1],\r\n        INCENTIVE_PKID: id,\r\n        INCENTIVE_TYPE: type,\r\n        AddButton: false,\r\n        UpdateButton: true,\r\n        Monthselection: true,\r\n        YearSelection: false,\r\n      });\r\n      document.getElementById(\"divLoading\").className = \"hide\";\r\n    } else {\r\n      document.getElementById(\"monthly\").checked = false;\r\n      document.getElementById(\"yearly\").checked = true;\r\n      setKimo({\r\n        ...Kimo,\r\n        INCENTIVE_EMPLOYEE_FKID: empid2,\r\n        INCENTIVE_AMOUNT: amt,\r\n        INCENTIVE_DESCRIPTION: desc,\r\n        INCENTIVE_MONTH: month,\r\n        INCENTIVE_PKID: id,\r\n        INCENTIVE_TYPE: type,\r\n        AddButton: false,\r\n        UpdateButton: true,\r\n        Monthselection: false,\r\n        YearSelection: true,\r\n      });\r\n      document.getElementById(\"divLoading\").className = \"hide\";\r\n    }\r\n  };\r\n\r\n  const DeleteIncenitve = (id) => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    var res = confirm(\"Are you sure you want to delete\");\r\n    if (res) {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      axios\r\n        .put(MyApiUrl + \"deleteincentives/\" + id)\r\n        .then((response) => {\r\n          if (response.data === true) {\r\n            Swal.fire({\r\n              title: \"Deleted!\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n\r\n            fetchData();\r\n            document.getElementById(\"divLoading\").className = \"hide\";\r\n          } else {\r\n            Swal.fire({\r\n              title: \"Failed To Deleted!\",\r\n              icon: \"error\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n            document.getElementById(\"divLoading\").className = \"hide\";\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const fetchData = React.useCallback(() => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"incentives\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      params: {\r\n        language_code: \"en\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const items = response.data.map((item) => {\r\n          return {\r\n            ...item,\r\n            \"Month / Year\": item.Month,\r\n            Amount: item.INCENTIVE_AMOUNT,\r\n            Description: item.INCENTIVE_DESCRIPTION,\r\n          };\r\n        });\r\n        setKimo({\r\n          ...Kimo,\r\n          ResponseData: items,\r\n        });\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const Updatebtn = () => (\r\n    <CButton type=\"button\" onClick={UpdateIncentive} size=\"md\" id=\"Add-btn\">\r\n      Update\r\n    </CButton>\r\n  );\r\n\r\n  const Addbtn = () => (\r\n    <CButton type=\"button\" onClick={AddIncentive} size=\"md\" id=\"Add-btn\">\r\n      Add\r\n    </CButton>\r\n  );\r\n\r\n  const Month = () => (\r\n    <React.Fragment>\r\n      <CLabel>Month</CLabel>\r\n      <CInput\r\n        id=\"text-input1\"\r\n        type=\"month\"\r\n        name=\"text-input\"\r\n        placeholder=\"Employee Month\"\r\n        value={Kimo.INCENTIVE_MONTH}\r\n        onChange={(e) => {\r\n          setKimo({\r\n            ...Kimo,\r\n            INCENTIVE_MONTH: e.target.value,\r\n          });\r\n        }}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n\r\n  const Year = () => (\r\n    <React.Fragment>\r\n      <CLabel>Year</CLabel>\r\n      <CInput\r\n        id=\"text-input1\"\r\n        type=\"text\"\r\n        name=\"text-input\"\r\n        placeholder=\"YYYY\"\r\n        value={Kimo.INCENTIVE_MONTH}\r\n        onChange={(e) => {\r\n          setKimo({\r\n            ...Kimo,\r\n            INCENTIVE_MONTH: e.target.value,\r\n          });\r\n        }}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"divLoading\"> </div>\r\n      <h1 id=\"ccmaster\">Employee Incentive</h1>\r\n      <CRow style={{ marginTop: \"3%\" }}>\r\n        <CCol xs=\"12\" sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\" className=\"mb-3 mb-xl-0\">\r\n          <div id=\"country-master\">\r\n            <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol>\r\n                    <CCard>\r\n                      <CCardHeader>Add Employee Incentive</CCardHeader>\r\n                      <CCardBody>\r\n                        <CForm\r\n                          action=\"\"\r\n                          method=\"post\"\r\n                          encType=\"multipart/form-data\"\r\n                          className=\"form-horizontal\"\r\n                        >\r\n                          <CFormGroup row>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n                              <CRow>\r\n                                <CCol md=\"6\">\r\n                                  <label>\r\n                                    <input\r\n                                      type=\"radio\"\r\n                                      name=\"radio\"\r\n                                      id=\"monthly\"\r\n                                      onChange={ViewMonthOrYear}\r\n                                      value=\"monthly\"\r\n                                    />\r\n                                    <span>Monthly</span>\r\n                                  </label>\r\n                                </CCol>\r\n                                <CCol md=\"6\">\r\n                                  <label>\r\n                                    <input\r\n                                      type=\"radio\"\r\n                                      name=\"radio\"\r\n                                      id=\"yearly\"\r\n                                      onChange={ViewMonthOrYear}\r\n                                      value=\"yearly\"\r\n                                    />\r\n                                    <span>Yearly</span>\r\n                                  </label>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n                              {Kimo.Monthselection && <Month />}\r\n                              {Kimo.YearSelection && <Year />}\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n                              <CLabel>Amount</CLabel>\r\n                              <CInput\r\n                                id=\"text-input1\"\r\n                                type=\"text\"\r\n                                name=\"text-input\"\r\n                                placeholder=\"Incentive Amount\"\r\n                                value={Kimo.INCENTIVE_AMOUNT}\r\n                                onChange={(e) => {\r\n                                  setKimo({\r\n                                    ...Kimo,\r\n                                    INCENTIVE_AMOUNT: e.target.value,\r\n                                  });\r\n                                }}\r\n                              />\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n                              <CLabel>Description</CLabel>\r\n                              <CInput\r\n                                id=\"text-input1\"\r\n                                type=\"text\"\r\n                                name=\"text-input\"\r\n                                placeholder=\"Description\"\r\n                                value={Kimo.INCENTIVE_DESCRIPTION}\r\n                                onChange={(e) => {\r\n                                  setKimo({\r\n                                    ...Kimo,\r\n                                    INCENTIVE_DESCRIPTION: e.target.value,\r\n                                  });\r\n                                }}\r\n                              />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n\r\n                          {Kimo.UpdateButton && <Updatebtn />}\r\n                          {Kimo.AddButton && <Addbtn />}\r\n                        </CForm>\r\n                      </CCardBody>\r\n                    </CCard>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n            </CCard>\r\n          </div>\r\n        </CCol>\r\n\r\n        <CCol xs=\"12\" sm=\"12\" md=\"8\" lg=\"8\" xl=\"8\" className=\"mb-3 mb-xl-0\">\r\n          <div id=\"country-table\">\r\n            <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol>\r\n                    <CCard>\r\n                      <CCardHeader>Added Employee Incentive</CCardHeader>\r\n                      <CCardBody>\r\n                        <CDataTable\r\n                          items={Kimo.ResponseData}\r\n                          fields={fields}\r\n                          hover\r\n                          striped\r\n                          bordered\r\n                          tableFilter={table}\r\n                          itemsPerPageSelect={items}\r\n                          sorter\r\n                          size=\"sm\"\r\n                          itemsPerPage={10}\r\n                          pagination\r\n                          scopedSlots={{\r\n                            Action: (item) => (\r\n                              <td>\r\n                                <CButton\r\n                                  onClick={() => {\r\n                                    EditIncentive(\r\n                                      item.INCENTIVE_PKID,\r\n                                      item.INCENTIVE_EMPLOYEE_FKID,\r\n                                      item.INCENTIVE_AMOUNT,\r\n                                      item.INCENTIVE_DESCRIPTION,\r\n                                      item.INCENTIVE_MONTH,\r\n                                      item.INCENTIVE_TYPE\r\n                                    );\r\n                                  }}\r\n                                  size=\"sm\"\r\n                                  id=\"war-btn\"\r\n                                >\r\n                                  <EditIcon />\r\n                                  {item.status}\r\n                                </CButton>\r\n                                <CButton\r\n                                  size=\"sm\"\r\n                                  onClick={() => {\r\n                                    DeleteIncenitve(item.INCENTIVE_PKID);\r\n                                  }}\r\n                                  id=\"war-btn1\"\r\n                                >\r\n                                  <DeleteSharpIcon />\r\n                                  {item.status}\r\n                                </CButton>\r\n                              </td>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      </CCardBody>\r\n                    </CCard>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n            </CCard>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddEmployeeIncentive;\r\n"],"sourceRoot":""}