{"version":3,"sources":["services/service.js","../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/icons/DeleteSharp.js","views/CustomerMaster/ViewCustomers.js"],"names":["MyApiUrl","ViewImg","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","table","placeholder","label","items","values","fields2","key","ViewCustomers","useState","ResponseData","setResponseData","CustomerDocs","setCustomerDocs","ContactPersons","setContactPersons","block","setBlock","block2","setBlock2","GetAllCustomers","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","document","getElementById","className","axios","method","url","headers","then","response","data","map","item","Country","COUNTRY_NAME","State","STATE_NAME","District","DISTRICT_NAME","Taluk","TALUK_NAME","CUSTOMER_CATEGORY_NAME","CUSTOMER_TYPE_NAME","CUSTOMER_SUBTYPE_NAME","CUSTOMER_NAME","Email","CUSTOMER_EMAIL","CUSTOMER_EMAIL2","CUSTOMER_MOBILE","CUSTOMER_MOBILE_CODE","CUSTOMER_ALT_MOBILE","CUSTOMER_ALT_MOBILE_CODE","CUSTOMER_NUMBER","Capacity","CUSTOMER_CAPACITY","Unit","UNIT_NAME","Superior","EMPLOYEE_NAME","Password","CUSTOMER_PASSWORD","CUSTOMER_GST_NO","catch","error","console","log","useEffect","history","useHistory","id","style","marginTop","col","boxShadow","md","size","color","onClick","cnt","csvData","Array","push","fileName","buffer","join","blob","Blob","type","link","undefined","download","setAttribute","window","URL","createObjectURL","body","appendChild","click","removeChild","navigator","msSaveBlob","float","fields","hover","striped","bordered","sorter","tableFilter","itemsPerPageSelect","columnFilterSlot","itemsPerPage","pagination","scopedSlots","Profile","i","profile","CUSTOMER_PRFILE","Fragment","href","target","src","fluid","width","Documents","pkid","CUSTOMER_PKID","Action","status","confirm","put","fire","title","icon","confirmButtonText","Address","show","onClose","closeButton","fontWeight","fontFamily","textAlign","borderBottom","paddingBottom","CUSTOMER_CONTACT_PERSON_NAME","CUSTOMER_CONTACT_PERSON_EMAIL","CUSTOMER_CONTACT_PERSON_EMAIL2","CUSTOMER_CONTACT_PERSON_PHO","CUSTOMER_CONTACT_PERSON_PHO_CODE","CUSTOMER_CONTACT_PERSON_PHO2","CUSTOMER_CONTACT_PERSON_PHO2_CODE","CUSTOMER_CONTACT_SEC_PERSON_NAME","CUSTOMER_CONTACT_SEC_PERSON_EMAIL","CUSTOMER_CONTACT_SEC_PERSON_EMAIL2","CUSTOMER_CONTACT_SEC_PERSON_PHO","CUSTOMER_CONTACT_SEC_PERSON_PHO_CODE","CUSTOMER_CONTACT_SEC_PERSON_PHO2","CUSTOMER_CONTACT_SEC_PERSON_PHO2_CODE","CUSTOMER_DOC1","CUSTOMER_DOC2","CUSTOMER_DOC3","CUSTOMER_DOC4","CUSTOMER_DOC5","CUSTOMER_DOC6"],"mappings":"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","file":"static/js/63.ae3c5c87.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 21h12V7H6v14zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteSharp');\n\nexports.default = _default;","/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-29 12:14:40\r\n * @modify date 2021-12-06 15:20:08\r\n * @desc [description]\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CLink,\r\n  CRow,\r\n  CDataTable,\r\n  CImg,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n} from \"@coreui/react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { MyApiUrl, ViewImg } from \"src/services/service\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields2 = [\r\n  { key: \"Action\" },\r\n  { key: \"Customer Name\" },\r\n  { key: \"Customer Number\" },\r\n  { key: \"GST No\" },\r\n  { key: \"Customer Category\" },\r\n  { key: \"Customer Type\" },\r\n  { key: \"Customer Sub Type\" },\r\n  { key: \"Email\" },\r\n  { key: \"Alternate Email\" },\r\n  { key: \"Contact Number\" },\r\n  { key: \"Alternate Number\" },\r\n  { key: \"Capacity\" },\r\n  { key: \"Unit\" },\r\n  { key: \"Superior\" },\r\n  { key: \"Country\" },\r\n  { key: \"State\" },\r\n  { key: \"District\" },\r\n  { key: \"Taluk\" },\r\n  { key: \"Profile\" },\r\n  { key: \"Password\" },\r\n  { key: \"Address\" },\r\n  { key: \"Documents\" },\r\n  { key: \"Contact Persons\" },\r\n];\r\n\r\nconst ViewCustomers = () => {\r\n  const [ResponseData, setResponseData] = useState([]);\r\n  const [CustomerDocs, setCustomerDocs] = useState([]);\r\n  const [ContactPersons, setContactPersons] = useState([]);\r\n\r\n  const [block, setBlock] = useState(false);\r\n  const [block2, setBlock2] = useState(false);\r\n\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  const GetAllCustomers = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"customer\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const items = response.data.map((item) => {\r\n          return {\r\n            ...item,\r\n            Country: item.COUNTRY_NAME,\r\n            State: item.STATE_NAME,\r\n            District: item.DISTRICT_NAME,\r\n            Taluk: item.TALUK_NAME,\r\n            \"Customer Category\": item.CUSTOMER_CATEGORY_NAME,\r\n            \"Customer Type\": item.CUSTOMER_TYPE_NAME,\r\n            \"Customer Sub Type\": item.CUSTOMER_SUBTYPE_NAME,\r\n            \"Customer Name\": item.CUSTOMER_NAME,\r\n            Email: item.CUSTOMER_EMAIL,\r\n            \"Alternate Email\": item.CUSTOMER_EMAIL2,\r\n            \"Contact Number\": item.CUSTOMER_MOBILE == \"\" || item.CUSTOMER_MOBILE == null ? item.CUSTOMER_MOBILE : (\"+\" + item.CUSTOMER_MOBILE_CODE + \" \" + item.CUSTOMER_MOBILE),\r\n            \"Alternate Number\": item.CUSTOMER_ALT_MOBILE == null || item.CUSTOMER_ALT_MOBILE == \"\" ? item.CUSTOMER_ALT_MOBILE : (\"+\" + item.CUSTOMER_ALT_MOBILE_CODE + \" \" + item.CUSTOMER_ALT_MOBILE),\r\n            \"Customer Number\": item.CUSTOMER_NUMBER,\r\n            Capacity: item.CUSTOMER_CAPACITY,\r\n            Unit: item.UNIT_NAME,\r\n            Superior: item.EMPLOYEE_NAME,\r\n            Password: item.CUSTOMER_PASSWORD,\r\n            \"GST No\": item.CUSTOMER_GST_NO,\r\n          };\r\n        });\r\n        setResponseData(items);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const DeleteCustomer = (pkid) => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    var res = confirm(\"Are you sure you want to delete\");\r\n    if (res) {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      axios.put(MyApiUrl + \"customer/\" + pkid).then((response) => {\r\n        if (response.data === true) {\r\n          Swal.fire({\r\n            title: \"Customer Deleted Successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          GetAllCustomers();\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Failed To Delete Customer!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const CustomerDocsBlock = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"customerdocs/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setCustomerDocs(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setBlock2(!block2);\r\n  };\r\n\r\n  const ContactPersonsBlock = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"customercontactpersons/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setContactPersons(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setBlock(!block);\r\n  };\r\n\r\n  const ToExcel = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    var cnt = 0;\r\n    // eslint-disable-next-line no-array-constructor\r\n    var csvData = new Array();\r\n    csvData.push(\r\n      '\"Sl No\",\"Customer Name\",\"Customer Number\",\"GST No\",\"Customer Category\",\"Customer Type\",\"Customer Sub Type\",\"Email\",\"Alternate Email\",\"Contact Number\",\"Alternate Number\",\"Capacity\",\"Unit\",\"Superior\",\"Country\",\"State\",\"District\",\"Taluk\",\"Password\"'\r\n    );\r\n    let Status = \"\";\r\n    ResponseData.map((item) => {\r\n      return (\r\n        cnt++,\r\n        csvData.push(\r\n          '\"' +\r\n          cnt +\r\n          '\",\"' +\r\n          item.CUSTOMER_NAME +\r\n          '\",\"' +\r\n          item.CUSTOMER_NUMBER +\r\n          '\",\"' +\r\n          item.CUSTOMER_GST_NO +\r\n          '\",\"' +\r\n          item.CUSTOMER_CATEGORY_NAME +\r\n          '\",\"' +\r\n          item.CUSTOMER_TYPE_NAME +\r\n          '\",\"' +\r\n          item.CUSTOMER_SUBTYPE_NAME +\r\n          '\",\"' +\r\n          item.CUSTOMER_EMAIL +\r\n          '\",\"' +\r\n          item.CUSTOMER_EMAIL2 +\r\n          '\",\"' +\r\n          item.CUSTOMER_MOBILE +\r\n          '\",\"' +\r\n          item.CUSTOMER_ALT_MOBILE +\r\n          '\",\"' +\r\n          item.CUSTOMER_CAPACITY +\r\n          '\",\"' +\r\n          item.UNIT_NAME +\r\n          '\",\"' +\r\n          item.EMPLOYEE_NAME +\r\n          '\",\"' +\r\n          item.COUNTRY_NAME +\r\n          '\",\"' +\r\n          item.STATE_NAME +\r\n          '\",\"' +\r\n          item.DISTRICT_NAME +\r\n          '\",\"' +\r\n          item.TALUK_NAME +\r\n          '\",\"' +\r\n          item.CUSTOMER_PASSWORD +\r\n          '\"'\r\n        )\r\n      );\r\n    });\r\n\r\n    const fileName = \"All Customers.csv\";\r\n    const buffer = csvData.join(\"\\n\");\r\n    const blob = new Blob([buffer], {\r\n      type: \"text/csv;charset=utf8;\",\r\n    });\r\n\r\n    //IN IE\r\n    const link = document.createElement(\"a\");\r\n    if (link.download !== undefined) {\r\n      link.setAttribute(\"href\", window.URL.createObjectURL(blob));\r\n      link.setAttribute(\"download\", fileName);\r\n      link.style = \"visibility:hidden\";\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } else if (navigator.msSaveBlob) {\r\n      navigator.msSaveBlob(blob, fileName);\r\n    } else {\r\n    }\r\n    document.getElementById(\"divLoading\").className = \"hide\";\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    GetAllCustomers();\r\n  }, []);\r\n\r\n  let history = useHistory();\r\n  return (\r\n    <div id=\"city\">\r\n      <div id=\"divLoading\"> </div>\r\n      <h1 id=\"ccmaster\">View Customers</h1>\r\n      <CRow style={{ marginTop: \"3%\" }}>\r\n        <CCol col=\"12\">\r\n          <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>\r\n                      <CRow>\r\n                        <CCol md=\"8\">\r\n                          All Customers\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CButton\r\n                            size=\"sm\"\r\n                            color=\"primary\"\r\n                            onClick={ToExcel}\r\n                            style={{ float: \"right\" }}\r\n                          >\r\n                            Export To Excel\r\n                          </CButton>\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CButton\r\n                            size=\"sm\"\r\n                            color=\"success\"\r\n                            onClick={() => {\r\n                              history.push(\"/Customer\");\r\n                            }}\r\n                          >\r\n                            Add Customer\r\n                          </CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={ResponseData}\r\n                        fields={fields2}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPageSelect={items}\r\n                        columnFilterSlot\r\n                        size=\"sm\"\r\n                        itemsPerPage={10}\r\n                        pagination\r\n                        scopedSlots={{\r\n                          Profile: (i) => {\r\n                            let profile = \"\";\r\n                            if (\r\n                              i.CUSTOMER_PRFILE === \"\" ||\r\n                              i.CUSTOMER_PRFILE === null\r\n                            ) {\r\n                              profile = \"NoImage.png\";\r\n                            } else {\r\n                              profile = i.CUSTOMER_PRFILE;\r\n                            }\r\n                            return (\r\n                              <React.Fragment>\r\n                                <td>\r\n                                  <CLink\r\n                                    href={ViewImg + \"/\" + profile}\r\n                                    target=\"_blank\"\r\n                                  >\r\n                                    <CImg\r\n                                      src={ViewImg + \"/\" + profile}\r\n                                      fluid\r\n                                      className=\"mb-2\"\r\n                                      style={{ width: \"30%\" }}\r\n                                    />\r\n                                  </CLink>\r\n                                </td>\r\n                              </React.Fragment>\r\n                            );\r\n                          },\r\n                          Documents: (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"10\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      CustomerDocsBlock(i.CUSTOMER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          \"Contact Persons\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"10\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ContactPersonsBlock(i.CUSTOMER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          Action: (item) => (\r\n                            <td>\r\n                              <CButton\r\n                                onClick={() =>\r\n                                  history.push(\"/EditCustomer\", {\r\n                                    data: item,\r\n                                  })\r\n                                }\r\n                                size=\"sm\"\r\n                                id=\"war-btn\"\r\n                              >\r\n                                <EditIcon />\r\n                                {item.status}\r\n                              </CButton>\r\n                              <CButton\r\n                                onClick={() => {\r\n                                  DeleteCustomer(item.CUSTOMER_PKID);\r\n                                }}\r\n                                size=\"sm\"\r\n                                id=\"war-btn1\"\r\n                              >\r\n                                <DeleteSharpIcon />\r\n                                {item.status}\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          Address: (item) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"10\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() =>\r\n                                      history.push(\"/AddCustomerAddress\", {\r\n                                        data: item,\r\n                                      })\r\n                                    }\r\n                                  >\r\n                                    Manage\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CModal show={block} onClose={() => setBlock(!block)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Contact Persons Info</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {ContactPersons.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    First Contact People\r\n                  </p>\r\n                  <table id=\"ModelTable\">\r\n                    <tr>\r\n                      <th>Name</th>\r\n                      <th>:</th>\r\n                      <td>{i.CUSTOMER_CONTACT_PERSON_NAME}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Email</th>\r\n                      <th>:</th>\r\n                      <td>{i.CUSTOMER_CONTACT_PERSON_EMAIL}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Alternate Email</th>\r\n                      <th>:</th>\r\n                      <td>{i.CUSTOMER_CONTACT_PERSON_EMAIL2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Contact Number</th>\r\n                      <th>:</th>\r\n                      <td>{i.CUSTOMER_CONTACT_PERSON_PHO == \"\" || i.CUSTOMER_CONTACT_PERSON_PHO == null ? i.CUSTOMER_CONTACT_PERSON_PHO : (\"+\" + i.CUSTOMER_CONTACT_PERSON_PHO_CODE + \" \" + i.CUSTOMER_CONTACT_PERSON_PHO)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Alternate Number</th>\r\n                      <th>:</th>\r\n                      <td>{i.CUSTOMER_CONTACT_PERSON_PHO2 == null || i.CUSTOMER_CONTACT_PERSON_PHO2 == \"\" ? i.CUSTOMER_CONTACT_PERSON_PHO2 : (\"+\" + i.CUSTOMER_CONTACT_PERSON_PHO2_CODE + \" \" + i.CUSTOMER_CONTACT_PERSON_PHO2)}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n                <CCol md=\"12\" style={{ marginTop: \"5%\" }}>\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Second Contact People\r\n                  </p>\r\n                  <table id=\"ModelTable\">\r\n                    <tr>\r\n                      <th>Name</th>\r\n                      <th>:</th>\r\n                      <td>{i.CUSTOMER_CONTACT_SEC_PERSON_NAME}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Email</th>\r\n                      <th>:</th>\r\n                      <td>{i.CUSTOMER_CONTACT_SEC_PERSON_EMAIL}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Alternate Email</th>\r\n                      <th>:</th>\r\n                      <td>{i.CUSTOMER_CONTACT_SEC_PERSON_EMAIL2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Contact Number</th>\r\n                      <th>:</th>\r\n                      <td>{i.CUSTOMER_CONTACT_SEC_PERSON_PHO == null || i.CUSTOMER_CONTACT_SEC_PERSON_PHO == \"\" ? i.CUSTOMER_CONTACT_SEC_PERSON_PHO : (\"+\" + i.CUSTOMER_CONTACT_SEC_PERSON_PHO_CODE + \" \" + i.CUSTOMER_CONTACT_SEC_PERSON_PHO)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Alternate Number</th>\r\n                      <th>:</th>\r\n                      <td>{i.CUSTOMER_CONTACT_SEC_PERSON_PHO2 == null || i.CUSTOMER_CONTACT_SEC_PERSON_PHO2 == \"\" ? i.CUSTOMER_CONTACT_SEC_PERSON_PHO2 : (\"+\" + i.CUSTOMER_CONTACT_SEC_PERSON_PHO2_CODE + \" \" + i.CUSTOMER_CONTACT_SEC_PERSON_PHO2)}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setBlock(!block)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block2} onClose={() => setBlock2(!block2)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Uploaded Documents</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {CustomerDocs.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"3\">\r\n                  <CImg\r\n                    src={ViewImg + \"/\" + i.CUSTOMER_DOC1}\r\n                    fluid\r\n                    className=\"mb-2\"\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </CCol>\r\n                <CCol md=\"3\">\r\n                  <CImg\r\n                    src={ViewImg + \"/\" + i.CUSTOMER_DOC2}\r\n                    fluid\r\n                    className=\"mb-2\"\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </CCol>\r\n                <CCol md=\"3\">\r\n                  <CImg\r\n                    src={ViewImg + \"/\" + i.CUSTOMER_DOC3}\r\n                    fluid\r\n                    className=\"mb-2\"\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </CCol>\r\n                <CCol md=\"3\">\r\n                  <CImg\r\n                    src={ViewImg + \"/\" + i.CUSTOMER_DOC4}\r\n                    fluid\r\n                    className=\"mb-2\"\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </CCol>\r\n                <CCol md=\"3\">\r\n                  <CImg\r\n                    src={ViewImg + \"/\" + i.CUSTOMER_DOC5}\r\n                    fluid\r\n                    className=\"mb-2\"\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </CCol>\r\n                <CCol md=\"3\">\r\n                  <CImg\r\n                    src={ViewImg + \"/\" + i.CUSTOMER_DOC6}\r\n                    fluid\r\n                    className=\"mb-2\"\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setBlock2(!block2)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewCustomers;\r\n"],"sourceRoot":""}