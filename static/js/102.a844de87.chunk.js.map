{"version":3,"sources":["services/service.js","views/masters/DateFilter.js","views/Reports/ViewEmployeeAttendance.js"],"names":["MyApiUrl","ViewImg","DateFilter","date","idate","Date","toISOString","split","getDate","toString","padStart","getMonth","getFullYear","ViewEmployeeAttendance","props","EmployeeType","location","state","data","EMPLOYEE_TYPE_NAME","EmployeeSubType","EMPLOYEE_SUB_TYPE_NAME","EmployeeHQ","HQ_NAME","Company","COMPANY_NAME","EmployeeName","EMPLOYEE_NAME","EmployeeEmail","EMPLOYEE_EMAIL","ContactNumber","EMPLOYEE_CONTACT","JoiningDate","EMPLOYEE_DOJ","EmployeeID","EMPLOYEE_PKID","propsData","useState","ResponseData","setResponseData","fromDate","setfromDate","toDate","settoDate","kimo","setkimo","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","React","useEffect","document","getElementById","className","axios","method","url","headers","then","response","catch","error","console","log","GetAllAttendance","history","useHistory","id","style","marginTop","md","boxShadow","color","size","onClick","goBack","col","cnt","csvData","Array","push","Status","map","item","AttStatus","MDate","dateMDY","WeekName","LoginTime","LoginLat","LoginLong","TotalOrders","VisitedCustomer","LogoutTime","LogoutLat","LogoutLong","fileName","buffer","join","blob","Blob","type","link","createElement","undefined","download","setAttribute","window","URL","createObjectURL","body","appendChild","click","removeChild","navigator","msSaveBlob","width","borderRight","onChange","event","target","value","fire","icon","title","obj","put","overflow","i","index","cname","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"static/js/102.a844de87.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","export default function DateFilter({ date }) {\r\n  let idate = new Date(new Date(date).toISOString().split(\"T\")[0]);\r\n  let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n    idate.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n  return dateMDY;\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-25 17:00:15\r\n * @modify date 2021-12-06 15:32:46\r\n * @desc [description]\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CButton,\r\n  CInput,\r\n} from \"@coreui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MyApiUrl } from \"src/services/service\";\r\nimport DateFilter from \"../masters/DateFilter\";\r\nimport \"../../style.css\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst ViewEmployeeAttendance = (props) => {\r\n  const EmployeeType = props.location.state.data.EMPLOYEE_TYPE_NAME;\r\n  const EmployeeSubType = props.location.state.data.EMPLOYEE_SUB_TYPE_NAME;\r\n  const EmployeeHQ = props.location.state.data.HQ_NAME;\r\n  const Company = props.location.state.data.COMPANY_NAME;\r\n  const EmployeeName = props.location.state.data.EMPLOYEE_NAME;\r\n  const EmployeeEmail = props.location.state.data.EMPLOYEE_EMAIL;\r\n  const ContactNumber = props.location.state.data.EMPLOYEE_CONTACT;\r\n  const JoiningDate = props.location.state.data.EMPLOYEE_DOJ;\r\n  const EmployeeID = props.location.state.data.EMPLOYEE_PKID;\r\n\r\n  const propsData = props.location.state.data;\r\n\r\n  const [ResponseData, setResponseData] = useState([]);\r\n  const [fromDate, setfromDate] = useState();\r\n  const [toDate, settoDate] = useState();\r\n  const [kimo, setkimo] = useState();\r\n\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  const GetAllAttendance = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getAllEmployeeAttendence/\" + EmployeeID,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setResponseData(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    var months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    var date = new Date();\r\n    setkimo(months[date.getMonth()] + \" \" + date.getFullYear());\r\n  };\r\n\r\n  const FilterDates = () => {\r\n    if (fromDate === \"\" || fromDate === null || fromDate === undefined) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select From Date!\",\r\n      });\r\n    } else if (toDate === \"\" || toDate === null || toDate === undefined) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Select To Date!\",\r\n      });\r\n    } else {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      setkimo(fromDate + \" TO \" + toDate);\r\n\r\n      var obj = {\r\n        fromDate: fromDate,\r\n        toDate: toDate,\r\n        EmployeeID: EmployeeID,\r\n      };\r\n      console.log(obj);\r\n      axios\r\n        .put(MyApiUrl + \"GetEmployeeAttendenceBydate\", obj)\r\n        .then((response) => {\r\n          setResponseData(response.data);\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        });\r\n    }\r\n  };\r\n\r\n  const ToExcel = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    var cnt = 0;\r\n    // eslint-disable-next-line no-array-constructor\r\n    var csvData = new Array();\r\n    csvData.push(\r\n      '\"Sl No\",\"Employee Type\",\"Employee Sub Type\",\"HQ\",\"Company\",\"Employee Name\",\"Employee Email\",\"Contact Number\",\"Date\",\"Week Name\",\"Attendance\",\"Login Time\",\"Login Latitude\",\"Login Longitude\",\"Total Orders\",\"Visited Customers\",\"Logout Time\",\"Logout Latitude\",\"Logout Longitude\"'\r\n    );\r\n    let Status = \"\";\r\n    ResponseData.map((item) => {\r\n      if (item.AttStatus === \"0\") {\r\n        Status = \"Absent\";\r\n      } else if (item.AttStatus === \"1\") {\r\n        Status = \"Present\";\r\n      } else if (item.AttStatus === \"2\") {\r\n        Status = \"Leave\";\r\n      }\r\n      let idate = new Date(new Date(item.MDate).toISOString().split(\"T\")[0]);\r\n      let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n        idate.getMonth() + 1\r\n      )\r\n        .toString()\r\n        .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n      return (\r\n        cnt++,\r\n        csvData.push(\r\n          '\"' +\r\n          cnt +\r\n          '\",\"' +\r\n          EmployeeType +\r\n          '\",\"' +\r\n          EmployeeSubType +\r\n          '\",\"' +\r\n          EmployeeHQ +\r\n          '\",\"' +\r\n          Company +\r\n          '\",\"' +\r\n          EmployeeName +\r\n          '\",\"' +\r\n          EmployeeEmail +\r\n          '\",\"' +\r\n          ContactNumber +\r\n          '\",\"' +\r\n          dateMDY +\r\n          '\",\"' +\r\n          item.WeekName +\r\n          '\",\"' +\r\n          Status +\r\n          '\",\"' +\r\n          item.LoginTime +\r\n          '\",\"' +\r\n          item.LoginLat +\r\n          '\",\"' +\r\n          item.LoginLong +\r\n          '\",\"' +\r\n          item.TotalOrders +\r\n          '\",\"' +\r\n          item.VisitedCustomer +\r\n          '\",\"' +\r\n          item.LogoutTime +\r\n          '\",\"' +\r\n          item.LogoutLat +\r\n          '\",\"' +\r\n          item.LogoutLong +\r\n          '\"'\r\n        )\r\n      );\r\n    });\r\n\r\n    const fileName = \"Employee Attendance List ( \" + kimo + \" ).csv\";\r\n    const buffer = csvData.join(\"\\n\");\r\n    const blob = new Blob([buffer], {\r\n      type: \"text/csv;charset=utf8;\",\r\n    });\r\n\r\n    //IN IE\r\n    const link = document.createElement(\"a\");\r\n    if (link.download !== undefined) {\r\n      link.setAttribute(\"href\", window.URL.createObjectURL(blob));\r\n      link.setAttribute(\"download\", fileName);\r\n      link.style = \"visibility:hidden\";\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } else if (navigator.msSaveBlob) {\r\n      navigator.msSaveBlob(blob, fileName);\r\n    } else {\r\n    }\r\n    document.getElementById(\"divLoading\").className = \"hide\";\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    GetAllAttendance();\r\n  }, []);\r\n  let history = useHistory();\r\n  return (\r\n    <div>\r\n      <div id=\"divLoading\"> </div>\r\n      <h1 id=\"ccmaster\">Employee Attendance</h1>\r\n      <CRow style={{ marginTop: \"3%\" }}>\r\n        <CCol md=\"2\" />\r\n        <CCol md=\"12\">\r\n          <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol md=\"1\">\r\n                  <CButton\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() => history.goBack()}\r\n                  >\r\n                    Back\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n              <br />\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>\r\n                      <CRow>\r\n                        <CCol col=\"6\">Employee Details</CCol>\r\n                        <CCol col=\"6\">\r\n                          <CButton\r\n                            onClick={ToExcel}\r\n                            color=\"primary\"\r\n                            style={{\r\n                              marginTop: \"0%\",\r\n                            }}\r\n                            size=\"sm\"\r\n                            id=\"AddEmp\"\r\n                          >\r\n                            Export To Excel\r\n                          </CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                      <CRow>\r\n                        <CCol md=\"12\">\r\n                          <table id=\"customerDetails\" style={{ width: \"100%\" }}>\r\n                            <tr>\r\n                              <td style={{ borderRight: \"1px solid #7e0103\" }}>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Employee Type :</b>\r\n                                  </th>\r\n                                  <td>{EmployeeType}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Employee Sub Type :</b>\r\n                                  </th>\r\n                                  <td>{EmployeeSubType}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>HQ :</b>\r\n                                  </th>\r\n                                  <td>{EmployeeHQ}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Company :</b>\r\n                                  </th>\r\n                                  <td>{Company}</td>\r\n                                </tr>\r\n                              </td>\r\n                              <td style={{ borderRight: \"1px solid #7e0103\" }}>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Employee Name :</b>\r\n                                  </th>\r\n                                  <td>{EmployeeName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Email Address :</b>\r\n                                  </th>\r\n                                  <td>{EmployeeEmail}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Contact Number :</b>\r\n                                  </th>\r\n                                  <td>{ContactNumber}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <b>Joining Date :</b>\r\n                                  </th>\r\n                                  <td>{JoiningDate}</td>\r\n                                </tr>\r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardBody>\r\n                  </CCard>\r\n                  <CCard>\r\n                    <CCardHeader>\r\n                      <CRow>\r\n                        <CCol md=\"6\">Attendance List ( {kimo} )</CCol>\r\n                        <CCol md=\"2\">\r\n                          <CInput\r\n                            type=\"date\"\r\n                            onChange={(event) => {\r\n                              setfromDate(event.target.value);\r\n                            }}\r\n                            value={fromDate}\r\n                          />\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CInput\r\n                            type=\"date\"\r\n                            onChange={(event) => {\r\n                              settoDate(event.target.value);\r\n                            }}\r\n                            value={toDate}\r\n                          />\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CButton\r\n                            size=\"sm\"\r\n                            color=\"info\"\r\n                            style={{ width: \"100%\" }}\r\n                            onClick={FilterDates}\r\n                          >\r\n                            GET\r\n                          </CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                      <CRow>\r\n                        <CCol md=\"12\">\r\n                          <div style={{ overflow: \"auto\" }}>\r\n                            <table id=\"Attendence\">\r\n                              <thead>\r\n                                <tr>\r\n                                  <th>Sl</th>\r\n                                  <th>Date</th>\r\n                                  <th>Week Name</th>\r\n                                  <th>Attendance</th>\r\n                                  <th>Login Time</th>\r\n                                  <th>Login Lat</th>\r\n                                  <th>Login Long</th>\r\n                                  <th>Total Orders</th>\r\n                                  <th>Visited Customers</th>\r\n                                  <th>Logout Time</th>\r\n                                  <th>Logout Lat</th>\r\n                                  <th>Logout Long</th>\r\n                                  <th>Track</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {ResponseData.map((i, index) => {\r\n                                  let cname = \"\";\r\n                                  if (i.AttStatus === \"0\") {\r\n                                    cname = '<p class=\"absent\">Absent</p>';\r\n                                  } else if (i.AttStatus === \"1\") {\r\n                                    cname = '<p class=\"present\">Present</p>';\r\n                                  } else if (i.AttStatus === \"2\") {\r\n                                    cname = '<p class=\"leave\">Leave</p>';\r\n                                  }\r\n                                  return (\r\n                                    <tr>\r\n                                      <td>{index + 1}</td>\r\n                                      <td>{<DateFilter date={i.MDate} />}</td>\r\n                                      <td>{i.WeekName}</td>\r\n                                      <td>\r\n                                        <div\r\n                                          dangerouslySetInnerHTML={{\r\n                                            __html: cname,\r\n                                          }}\r\n                                        />\r\n                                      </td>\r\n                                      <td>{i.LoginTime}</td>\r\n                                      <td>{i.LoginLat}</td>\r\n                                      <td>{i.LoginLong}</td>\r\n                                      <td>\r\n                                        <CButton\r\n                                          onClick={() => {\r\n                                            history.push(\"/EmployeeOrders\", {\r\n                                              data: { i, propsData },\r\n                                            });\r\n                                          }}\r\n                                        >\r\n                                          {i.TotalOrders}\r\n                                        </CButton>\r\n                                      </td>\r\n                                      <td>\r\n                                        <CButton\r\n                                          onClick={() => {\r\n                                            history.push(\"/VisitedCustomers\", {\r\n                                              data: { i, propsData },\r\n                                            });\r\n                                          }}\r\n                                        >\r\n                                          {i.VisitedCustomer}\r\n                                        </CButton>\r\n                                      </td>\r\n                                      <td>{i.LogoutTime}</td>\r\n                                      <td>{i.LogoutLat}</td>\r\n                                      <td>{i.LogoutLong}</td>\r\n                                      <td>\r\n                                        <CButton\r\n                                          onClick={() => {\r\n                                            history.push(\"/TrackEmployee\", {\r\n                                              data: { i, propsData },\r\n                                            });\r\n                                          }}\r\n                                          color=\"primary\"\r\n                                        >\r\n                                          Track\r\n                                        </CButton>\r\n                                      </td>\r\n                                    </tr>\r\n                                  );\r\n                                })}\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol md=\"2\" />\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewEmployeeAttendance;\r\n"],"sourceRoot":""}