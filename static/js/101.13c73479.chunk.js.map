{"version":3,"sources":["services/service.js","views/masters/DateFilter.js","views/Reports/TourPlaces.js"],"names":["MyApiUrl","ViewImg","DateFilter","date","idate","Date","toISOString","split","getDate","toString","padStart","getMonth","getFullYear","table","placeholder","label","items","values","fields","key","TourPlaces","props","FromDate","location","state","data","EMPLOYEE_TOUR_PLANNER_FROM_DATE","ToDate","EMPLOYEE_TOUR_PLANNER_TO_DATE","Company","COMPANY_NAME","Name","EMPLOYEE_NAME","Pho","EMPLOYEE_CONTACT","PKID","EMPLOYEE_TOUR_PLANNER_PKID","useState","ResponseData","setResponseData","Suggention","setSuggention","setAdminSuggention","PlacePkid","setPlacePkid","block","setBlock","block1","setBlock1","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","GetTourPlacesList","document","getElementById","className","axios","method","url","headers","then","response","map","item","index","Place","EMPLOYEE_TOUR_PLANNER_PLACES_NAME","Remark","EMPLOYEE_TOUR_PLANNER_PLACES_REMARK","catch","error","console","log","React","useEffect","history","useHistory","id","style","marginTop","md","boxShadow","color","size","onClick","goBack","width","hover","striped","bordered","sorter","tableFilter","itemsPerPage","pagination","itemsPerPageSelect","scopedSlots","EMPLOYEE_TOUR_PLANNER_PLACES_DATE","Suggestion","i","pkid","EMPLOYEE_TOUR_PLANNER_PLACES_PKID","EMPLOYEE_TOUR_PLANNER_ISACTIVE","EMPLOYEE_TOUR_PLANNER_SUGGESTION","show","onClose","closeButton","class","value","onChange","event","target","rows","height","fontSize","fire","icon","title","obj","put","confirmButtonText"],"mappings":"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","file":"static/js/101.13c73479.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","export default function DateFilter({ date }) {\r\n  let idate = new Date(new Date(date).toISOString().split(\"T\")[0]);\r\n  let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n    idate.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n  return dateMDY;\r\n}\r\n","/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-25 17:00:15\r\n * @modify date 2021-12-06 15:32:46\r\n * @desc [description]\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CDataTable,\r\n  CButton,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalFooter,\r\n  CModalBody,\r\n  CTextarea,\r\n} from \"@coreui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MyApiUrl } from \"src/services/service\";\r\nimport DateFilter from \"../masters/DateFilter\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields = [\r\n  { key: \"Sl No\" },\r\n  { key: \"Date\" },\r\n  { key: \"Place\" },\r\n  { key: \"Remark\" },\r\n  { key: \"Suggestion\" },\r\n];\r\n\r\nconst TourPlaces = (props) => {\r\n  const FromDate = props.location.state.data.EMPLOYEE_TOUR_PLANNER_FROM_DATE;\r\n  const ToDate = props.location.state.data.EMPLOYEE_TOUR_PLANNER_TO_DATE;\r\n  const Company = props.location.state.data.COMPANY_NAME;\r\n  const Name = props.location.state.data.EMPLOYEE_NAME;\r\n  const Pho = props.location.state.data.EMPLOYEE_CONTACT;\r\n  const PKID = props.location.state.data.EMPLOYEE_TOUR_PLANNER_PKID;\r\n\r\n  const [ResponseData, setResponseData] = useState([]);\r\n  const [Suggention, setSuggention] = useState();\r\n  const [AdminSuggention, setAdminSuggention] = useState([]);\r\n  const [PlacePkid, setPlacePkid] = useState();\r\n  const [block, setBlock] = useState(false);\r\n  const [block1, setBlock1] = useState(false);\r\n\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  const GetTourPlacesList = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"GetTourPlaces/\" + PKID,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const items = response.data.map((item, index) => {\r\n          return {\r\n            ...item,\r\n            Place: item.EMPLOYEE_TOUR_PLANNER_PLACES_NAME,\r\n            \"Sl No\": index + 1,\r\n            Remark: item.EMPLOYEE_TOUR_PLANNER_PLACES_REMARK,\r\n          };\r\n        });\r\n        setResponseData(items);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const ManageSuggetion = (pkid, status) => {\r\n    if (status === false) {\r\n      setPlacePkid(pkid);\r\n      setBlock(!block);\r\n      setSuggention(\"\");\r\n    } else {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      setPlacePkid(pkid);\r\n      axios({\r\n        method: \"GET\",\r\n        url: MyApiUrl + \"GetPlacesAdminSuggestions/\" + pkid + \"\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          setAdminSuggention(response.data);\r\n          setSuggention(response.data[0].EMPLOYEE_TOUR_PLANNER_SUGGESTION);\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n      setBlock1(!block1);\r\n    }\r\n  };\r\n\r\n  const SendSuggestion = () => {\r\n    if (Suggention === \"\" || Suggention === null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter Suggestion!\",\r\n      });\r\n    } else {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      var obj = {\r\n        EMPLOYEE_TOUR_PLANNER_PLACES_PKID: PlacePkid,\r\n        EMPLOYEE_TOUR_PLANNER_SUGGESTION: Suggention,\r\n      };\r\n      axios.put(MyApiUrl + \"AdminSendSuggestion\", obj).then((response) => {\r\n        if (response.data === true) {\r\n          Swal.fire({\r\n            title: \"Suggestion Sent!\",\r\n            icon: \"succes\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          setSuggention(\"\");\r\n          setBlock(!block);\r\n          GetTourPlacesList();\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Failed To Send\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const UpdateSuggetion = () => {\r\n    if (Suggention === \"\" || Suggention === null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Please Enter Suggestion!\",\r\n      });\r\n    } else {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      var obj = {\r\n        EMPLOYEE_TOUR_PLANNER_PLACES_PKID: PlacePkid,\r\n        EMPLOYEE_TOUR_PLANNER_SUGGESTION: Suggention,\r\n      };\r\n      console.log(obj);\r\n      axios.put(MyApiUrl + \"AdminSendSuggestion\", obj).then((response) => {\r\n        if (response.data === true) {\r\n          Swal.fire({\r\n            title: \"Suggestion Updated!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          setSuggention(\"\");\r\n          setBlock1(!block1);\r\n          GetTourPlacesList();\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Failed To Update!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    GetTourPlacesList();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  let history = useHistory();\r\n  return (\r\n    <div>\r\n      <div id=\"divLoading\"> </div>\r\n      <h1 id=\"ccmaster\">Tour Planed Places</h1>\r\n      <CRow style={{ marginTop: \"3%\" }}>\r\n        <CCol md=\"2\" />\r\n        <CCol md=\"12\">\r\n        <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol md=\"1\">\r\n                  <CButton\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() => history.goBack()}\r\n                  >\r\n                    Back\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n              <br />\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Places List</CCardHeader>\r\n                    <CCardBody>\r\n                      <CRow>\r\n                        <CCol md=\"12\">\r\n                          <table style={{ width: \"100%\" }} id=\"customerDetails\">\r\n                            <tr>\r\n                              <td>\r\n                                <tr>\r\n                                  <th>\r\n                                    <p className=\"p1\">Employee Company :</p>\r\n                                  </th>\r\n                                  <td>\r\n                                    <p className=\"p2\">{Company}</p>\r\n                                  </td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <p className=\"p1\">Employee Name :</p>\r\n                                  </th>\r\n                                  <td>\r\n                                    <p className=\"p2\">{Name}</p>\r\n                                  </td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <p className=\"p1\">Contact Number :</p>\r\n                                  </th>\r\n                                  <td>\r\n                                    <p className=\"p2\">{Pho}</p>\r\n                                  </td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <p className=\"p1\">From Date :</p>\r\n                                  </th>\r\n                                  <td>\r\n                                    <p className=\"p2\">\r\n                                      {\" \"}\r\n                                      {<DateFilter date={FromDate} />}\r\n                                    </p>\r\n                                  </td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <th>\r\n                                    <p className=\"p1\">To Date :</p>\r\n                                  </th>\r\n                                  <td>\r\n                                    <p className=\"p2\">\r\n                                      {<DateFilter date={ToDate} />}\r\n                                    </p>\r\n                                  </td>\r\n                                </tr>\r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n                        </CCol>\r\n                      </CRow>\r\n                      <hr />\r\n                      <CRow>\r\n                        <CCol md=\"4\">\r\n                          <h4 className=\"p1\">Places List</h4>\r\n                        </CCol>\r\n                      </CRow>\r\n                      <br />\r\n                      <CDataTable\r\n                        items={ResponseData}\r\n                        fields={fields}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPage={10}\r\n                        pagination\r\n                        size=\"sm\"\r\n                        itemsPerPageSelect={items}\r\n                        scopedSlots={{\r\n                          \"Date\": (item) => (\r\n                            <td>{<DateFilter date={item.EMPLOYEE_TOUR_PLANNER_PLACES_DATE} />}</td>\r\n                          ),\r\n                          Suggestion: (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ManageSuggetion(\r\n                                        i.EMPLOYEE_TOUR_PLANNER_PLACES_PKID,\r\n                                        i.EMPLOYEE_TOUR_PLANNER_ISACTIVE\r\n                                      );\r\n                                    }}\r\n                                  >\r\n                                    Click Here\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol md=\"2\" />\r\n      </CRow>\r\n      <CModal show={block} onClose={() => setBlock(!block)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Enter Suggestion</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            <CTextarea\r\n              class=\"form-control\"\r\n              value={Suggention}\r\n              onChange={(event) => {\r\n                setSuggention(event.target.value);\r\n              }}\r\n              id=\"exampleFormControlTextarea1\"\r\n              rows=\"3\"\r\n              style={{ height: \"200px\", fontSize: \"16px\" }}\r\n            ></CTextarea>\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setBlock(!block)}>\r\n            Close\r\n          </CButton>\r\n          <CButton color=\"secondary\" onClick={SendSuggestion}>\r\n            Submit\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block1} onClose={() => setBlock1(!block1)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>View Suggestion</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            <CTextarea\r\n              class=\"form-control\"\r\n              value={Suggention}\r\n              onChange={(event) => {\r\n                setSuggention(event.target.value);\r\n              }}\r\n              id=\"exampleFormControlTextarea1\"\r\n              rows=\"3\"\r\n              style={{ height: \"200px\", fontSize: \"16px\" }}\r\n            ></CTextarea>\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setBlock1(!block1)}>\r\n            Close\r\n          </CButton>\r\n          <CButton color=\"secondary\" onClick={UpdateSuggetion}>\r\n            Update\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TourPlaces;\r\n"],"sourceRoot":""}