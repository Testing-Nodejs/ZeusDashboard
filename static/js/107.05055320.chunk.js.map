{"version":3,"sources":["services/service.js","views/masters/DateFilter.js","views/dashboard/ViewEmployeeTourPlan.js"],"names":["MyApiUrl","ViewImg","DateFilter","date","idate","Date","toISOString","split","getDate","toString","padStart","getMonth","getFullYear","table","placeholder","label","items","values","fields2","key","ViewEmployeeTourPlan","props","EmployeeID","location","state","data","EMPLOYEE_PKID","useState","ResponseData","setResponseData","React","useEffect","axios","method","url","headers","then","response","map","item","index","Company","COMPANY_NAME","Name","EMPLOYEE_NAME","EMPLOYEE_CONTACT","catch","error","console","log","history","useHistory","id","col","md","color","size","onClick","goBack","fields","hover","striped","bordered","sorter","tableFilter","itemsPerPageSelect","columnFilterSlot","itemsPerPage","pagination","scopedSlots","i","EMPLOYEE_TOUR_PLANNER_FROM_DATE","EMPLOYEE_TOUR_PLANNER_TO_DATE","Places","push","Status","EMPLOYEE_TOUR_PLANNER_STATUS","className"],"mappings":"kHAAA,oEAWE,IAAMA,EAAW,yCAEXC,EAAU,sC,uDCbH,SAASC,EAAT,GAA+B,IAATC,EAAQ,EAARA,KAC/BC,EAAQ,IAAIC,KAAK,IAAIA,KAAKF,GAAMG,cAAcC,MAAM,KAAK,IAM7D,MALW,UAAMH,EAAMI,UAAUC,WAAWC,SAAS,EAAG,KAA7C,aACTN,EAAMO,WAAa,GAElBF,WACAC,SAAS,EAAG,KAJJ,YAIYN,EAAMQ,eAN/B,mC,mJCsBMC,EAAQ,CAAEC,YAAa,iBAAkBC,MAAO,aAChDC,EAAQ,CAAED,MAAO,QAASE,OAAQ,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,MACtDC,EAAU,CACd,CAAEC,IAAK,UACP,CAAEA,IAAK,WACP,CAAEA,IAAK,QACP,CAAEA,IAAK,kBACP,CAAEA,IAAK,aACP,CAAEA,IAAK,WACP,CAAEA,IAAK,WAiKMC,UA9Jc,SAACC,GAC5B,IAAMC,EAAaD,EAAME,SAASC,MAAMC,KAAKC,cADP,EAGEC,mBAAS,IAHX,mBAG/BC,EAH+B,KAGjBC,EAHiB,KA6BtCC,IAAMC,WAAU,WAvBdC,IAAM,CACJC,OAAQ,MACRC,IAAKlC,IAAW,2BAA6BsB,EAC7Ca,QAAS,CACP,eAAgB,sBAGjBC,MAAK,SAACC,GACL,IAAMrB,EAAQqB,EAASZ,KAAKa,KAAI,SAACC,EAAMC,GACrC,OAAO,2BACFD,GADL,IAEEE,QAASF,EAAKG,aACdC,KAAMJ,EAAKK,cACX,iBAAkBL,EAAKM,sBAG3BhB,EAAgBb,MAEjB8B,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAMf,IAEH,IAAIG,EAAUC,cACd,OACE,sBAAKC,GAAG,OAAR,UACE,oBAAIA,GAAG,WAAP,mCACA,uBACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAMC,IAAI,KAAV,SACE,cAAC,IAAD,CAAOD,GAAG,aAAV,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAME,GAAG,IAAT,SACE,cAAC,IAAD,CACEC,MAAM,SACNC,KAAK,KACLC,QAAS,kBAAMP,EAAQQ,UAHzB,sBASJ,uBACA,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAML,IAAI,IAAV,mCAGJ,cAAC,IAAD,UACE,cAAC,IAAD,CACErC,MAAOY,EACP+B,OAAQzC,EACR0C,OAAK,EACLC,SAAO,EACPC,UAAQ,EACRC,QAAM,EACNC,YAAanD,EACboD,mBAAoBjD,EACpBkD,kBAAgB,EAChBV,KAAK,KACLW,aAAc,GACdC,YAAU,EACVC,YAAa,CACX,YAAa,SAACC,GAAD,OACX,6BAEI,cAAC,IAAD,CACEnE,KAAMmE,EAAEC,qCAKhB,UAAW,SAACD,GAAD,OACT,6BAEI,cAAC,IAAD,CACEnE,KAAMmE,EAAEE,mCAKhBC,OAAQ,SAACH,GAAD,OACN,6BACE,cAAC,IAAD,CACEf,MAAM,UACNC,KAAK,KACLC,QAAS,WACPP,EAAQwB,KAAK,cAAe,CAC1BjD,KAAM6C,KALZ,qBAaJK,OAAQ,SAACpC,GACP,MACwC,MAAtCA,EAAKqC,8BACiC,IAAtCrC,EAAKqC,6BAGH,6BACE,sBAAMC,UAAU,mBAAhB,sBAMkC,MAAtCtC,EAAKqC,8BACiC,IAAtCrC,EAAKqC,6BAGH,6BACE,sBAAMC,UAAU,mBAAhB,yBAMkC,MAAtCtC,EAAKqC,8BACiC,IAAtCrC,EAAKqC,6BAGH,6BACE,sBAAMC,UAAU,WAAhB,8BANC","file":"static/js/107.05055320.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","export default function DateFilter({ date }) {\r\n  let idate = new Date(new Date(date).toISOString().split(\"T\")[0]);\r\n  let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n    idate.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n  return dateMDY;\r\n}\r\n","/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-29 13:04:12\r\n * @modify date 2021-12-07 12:25:56\r\n * @desc [description]\r\n */\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CDataTable,\r\n} from \"@coreui/react\";\r\nimport { MyApiUrl } from \"src/services/service\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DateFilter from \"../masters/DateFilter\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields2 = [\r\n  { key: \"Status\" },\r\n  { key: \"Company\" },\r\n  { key: \"Name\" },\r\n  { key: \"Contact Number\" },\r\n  { key: \"From Date\" },\r\n  { key: \"To Date\" },\r\n  { key: \"Places\" },\r\n];\r\n\r\nconst ViewEmployeeTourPlan = (props) => {\r\n  const EmployeeID = props.location.state.data.EMPLOYEE_PKID;\r\n\r\n  const [ResponseData, setResponseData] = useState([]);\r\n\r\n  const GetEmployeeTourPlan = () => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"GetEmployeePlansByEmpID/\" + EmployeeID,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const items = response.data.map((item, index) => {\r\n          return {\r\n            ...item,\r\n            Company: item.COMPANY_NAME,\r\n            Name: item.EMPLOYEE_NAME,\r\n            \"Contact Number\": item.EMPLOYEE_CONTACT,\r\n          };\r\n        });\r\n        setResponseData(items);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    GetEmployeeTourPlan();\r\n  }, []);\r\n\r\n  let history = useHistory();\r\n  return (\r\n    <div id=\"city\">\r\n      <h1 id=\"ccmaster\">Employee 15 Days Plan</h1>\r\n      <br />\r\n      <CRow>\r\n        <CCol col=\"12\">\r\n          <CCard id=\"city-table\">\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol md=\"1\">\r\n                  <CButton\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() => history.goBack()}\r\n                  >\r\n                    Back\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n              <br />\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>\r\n                      <CRow>\r\n                        <CCol col=\"6\">15 Days Tour Plan</CCol>\r\n                      </CRow>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={ResponseData}\r\n                        fields={fields2}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPageSelect={items}\r\n                        columnFilterSlot\r\n                        size=\"sm\"\r\n                        itemsPerPage={10}\r\n                        pagination\r\n                        scopedSlots={{\r\n                          \"From Date\": (i) => (\r\n                            <td>\r\n                              {\r\n                                <DateFilter\r\n                                  date={i.EMPLOYEE_TOUR_PLANNER_FROM_DATE}\r\n                                />\r\n                              }\r\n                            </td>\r\n                          ),\r\n                          \"To Date\": (i) => (\r\n                            <td>\r\n                              {\r\n                                <DateFilter\r\n                                  date={i.EMPLOYEE_TOUR_PLANNER_TO_DATE}\r\n                                />\r\n                              }\r\n                            </td>\r\n                          ),\r\n                          Places: (i) => (\r\n                            <td>\r\n                              <CButton\r\n                                color=\"primary\"\r\n                                size=\"sm\"\r\n                                onClick={() => {\r\n                                  history.push(\"/TourPlaces\", {\r\n                                    data: i,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                View\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          Status: (item) => {\r\n                            if (\r\n                              item.EMPLOYEE_TOUR_PLANNER_STATUS === \"0\" ||\r\n                              item.EMPLOYEE_TOUR_PLANNER_STATUS === 0\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"DispatchedOrders\">\r\n                                    Active\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else if (\r\n                              item.EMPLOYEE_TOUR_PLANNER_STATUS === \"1\" ||\r\n                              item.EMPLOYEE_TOUR_PLANNER_STATUS === 1\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"ReadyForDelivery\">\r\n                                    Completed\r\n                                  </span>\r\n                                </td>\r\n                              );\r\n                            } else if (\r\n                              item.EMPLOYEE_TOUR_PLANNER_STATUS === \"2\" ||\r\n                              item.EMPLOYEE_TOUR_PLANNER_STATUS === 2\r\n                            ) {\r\n                              return (\r\n                                <td>\r\n                                  <span className=\"Rejected\">Cancelled</span>\r\n                                </td>\r\n                              );\r\n                            }\r\n                          },\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewEmployeeTourPlan;\r\n"],"sourceRoot":""}