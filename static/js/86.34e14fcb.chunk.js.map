{"version":3,"sources":["services/service.js","views/masters/DateFilter.js","views/OrderSchedulingTeam/AllScheduledOrders.js"],"names":["MyApiUrl","ViewImg","DateFilter","date","idate","Date","toISOString","split","getDate","toString","padStart","getMonth","getFullYear","table","placeholder","label","items","values","fields2","key","AllScheduledOrders","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","useState","ResponseData","setResponseData","BillingAddress","setBillingAddress","ShippingAddress","setShippingAddress","OrderRemark","setOrderRemark","fromDate","setfromDate","Otype","setOtype","Omonth","setOmonth","toDate","settoDate","block","setblock","block1","setblock1","block2","setblock2","block3","setblock3","OrderProcessRemark","setOrderProcessRemark","ManagerRemark","setManagerRemark","ManagerRemarkBloack","setManagerRemarkBloack","OderSupplyType","setOderSupplyType","GetAllScheduledOrder","document","getElementById","className","axios","method","url","headers","then","response","data","map","item","index","HDays","ORDER_NUMBER","ORDER_BY","TypeName","ORDER_TYPE_NAME","SUPPLY_NAME","Company","COMPANY_NAME","CUSTOMER_NAME","Logistic","ORDER_LOGISTIC","ORDER_LOGISTIC_DESTINATION","ORDER_LOGISTIC_PAY_MODE","ORDER_DELIVERY_TYPE","ORDER_CASH_DISCOUNT","ORDER_ORDER_AMOUNT","catch","error","console","log","React","useEffect","params","language_code","Option","i","value","SUPPLY_TYPE_PKID","history","useHistory","id","style","marginTop","col","boxShadow","md","htmlFor","custom","name","onChange","event","target","type","size","color","width","onClick","fire","icon","title","fields","hover","striped","bordered","sorter","tableFilter","itemsPerPageSelect","itemsPerPage","pagination","scopedSlots","Action","pkid","TentativeDate","put","confirmButtonText","SendToInvoice","ORDER_PKID","ORDER_DATE","clock","slice","push","ItemCount","Remark","Attachment","profile","ORD_DOC","Fragment","href","src","fluid","show","onClose","closeButton","fontWeight","fontFamily","textAlign","borderBottom","paddingBottom","CUSTOMER_ADDRESS_ADDRESS1","CUSTOMER_ADDRESS_ADDRESS2","CUSTOMER_ADDRESS_ADDRESS3","CUSTOMER_ADDRESS_ZIP_CODE","ORDER_REMARK","ORDER_REMARK_BY_PROCESSTEAM","ORDER_MANAGER_REMARK"],"mappings":"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","file":"static/js/86.34e14fcb.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","export default function DateFilter({ date }) {\r\n  let idate = new Date(new Date(date).toISOString().split(\"T\")[0]);\r\n  let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n    idate.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n  return dateMDY;\r\n}\r\n","/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-25 17:00:15\r\n * @modify date 2021-12-06 15:32:46\r\n * @desc [description]\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CDataTable,\r\n  CButton,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModal,\r\n  CInput,\r\n  CLabel,\r\n  CSelect,\r\n  CLink,\r\n  CImg,\r\n} from \"@coreui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MyApiUrl, ViewImg } from \"src/services/service\";\r\nimport Swal from \"sweetalert2\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DateFilter from \"../masters/DateFilter\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields2 = [\r\n  { key: \"Action\" },\r\n  { key: \"Tentative Dispatched Date\" },\r\n  // { key: \"Order Date\" },\r\n  // { key: \"Order Time\" },\r\n  // { key: \"Customer Name\" },\r\n  { key: \"Company\" },\r\n  { key: \"Order Items\" },\r\n  // { key: \"Order Number\" },\r\n  // { key: \"Order By\" },\r\n  // { key: \"Ordered Person\" },\r\n  // { key: \"Order Type\" },\r\n  // { key: \"Supply Type\" },\r\n  // { key: \"Day Till Now\" },\r\n  // { key: \"Billing Address\" },\r\n  // { key: \"Shipping Address\" },\r\n  // { key: \"Logistic\" },\r\n  // { key: \"Logistic Designation\" },\r\n  // { key: \"Logistic Payment Mode\" },\r\n  // { key: \"Delivery Type\" },\r\n  // { key: \"Cash Discount\" },\r\n  // { key: \"Grand Total\" },\r\n  // { key: \"Attachment\" },\r\n  // { key: \"Remark\" },\r\n  { key: \"Process Remark\" },\r\n  // { key: \"Manager Remark\" },\r\n];\r\n\r\nconst AllScheduledOrders = () => {\r\n\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  const [ResponseData, setResponseData] = useState([]);\r\n  const [BillingAddress, setBillingAddress] = useState([]);\r\n  const [ShippingAddress, setShippingAddress] = useState([]);\r\n  const [OrderRemark, setOrderRemark] = useState([]);\r\n  const [fromDate, setfromDate] = useState();\r\n  const [Otype, setOtype] = useState();\r\n  const [Omonth, setOmonth] = useState();\r\n  const [toDate, settoDate] = useState();\r\n  const [block, setblock] = useState(false);\r\n  const [block1, setblock1] = useState(false);\r\n  const [block2, setblock2] = useState(false);\r\n  const [block3, setblock3] = useState(false);\r\n  const [OrderProcessRemark, setOrderProcessRemark] = useState([]);\r\n\r\n  const [ManagerRemark, setManagerRemark] = useState([]);\r\n  const [ManagerRemarkBloack, setManagerRemarkBloack] = useState(false);\r\n\r\n  // Filters\r\n\r\n  const [OderSupplyType, setOderSupplyType] = useState([]);\r\n\r\n  const ViewSalesPersonRemark = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderRemarkByManager/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setManagerRemark(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setManagerRemarkBloack(!block2);\r\n  };\r\n\r\n  const GetAllScheduledOrder = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"GetAllScheduledOrder\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const items = response.data.map((item, index) => {\r\n          return {\r\n            ...item,\r\n            \"Day Till Now\": item.HDays,\r\n            \"Order Number\": item.ORDER_NUMBER,\r\n            \"Order By\": item.ORDER_BY,\r\n            \"Ordered Person\": item.TypeName,\r\n            \"Order Type\": item.ORDER_TYPE_NAME,\r\n            \"Supply Type\": item.SUPPLY_NAME,\r\n            Company: item.COMPANY_NAME,\r\n            \"Customer Name\": item.CUSTOMER_NAME,\r\n            Logistic: item.ORDER_LOGISTIC,\r\n            \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n            \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n            \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n            \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n            \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n          };\r\n        });\r\n        setResponseData(items);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const GetOrderSupplyType = () => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderSupplyType\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      params: {\r\n        language_code: \"en\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const Option = response.data.map((item, i) => (\r\n          <option key={i} value={item.SUPPLY_TYPE_PKID}>\r\n            {item.SUPPLY_NAME}\r\n          </option>\r\n        ));\r\n        setOderSupplyType(Option);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const ViewBillingAddress = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderBillingAddress/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setBillingAddress(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock(!block);\r\n  };\r\n\r\n  const ViewShippingAddress = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderShippingAddress/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setShippingAddress(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock1(!block1);\r\n  };\r\n\r\n  const ViewOderRemark = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderRemark/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setOrderRemark(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock2(!block2);\r\n  };\r\n\r\n  const ViewOderProcessRemark = (pkid) => {\r\n    document.getElementById(\"divLoading\").className = \"show\";\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderProcessRemark/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setOrderProcessRemark(response.data);\r\n        document.getElementById(\"divLoading\").className = \"hide\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock3(!block3);\r\n  };\r\n\r\n  const SendToInvoice = (pkid) => {\r\n    let TentativeDate = document.getElementById(\"TentativeDate\" + pkid + \"\").value;\r\n    if (TentativeDate === \"\" || TentativeDate == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Select Tentative Dispatched Date!\",\r\n      });\r\n    } else {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      axios\r\n        .put(MyApiUrl + \"ConfirmForInvoice/\" + pkid + \"/\" + TentativeDate)\r\n        .then((response) => {\r\n          if (response.data === true) {\r\n            Swal.fire({\r\n              title: \"Tentative Dispatched Date Has Been Confirmed!\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n            GetAllScheduledOrder();\r\n            document.getElementById(\"divLoading\").className = \"hide\";\r\n          } else {\r\n            Swal.fire({\r\n              title: \"Failed To Confirm!\",\r\n              icon: \"error\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n            document.getElementById(\"divLoading\").className = \"hide\";\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const FilterDates = () => {\r\n    if (fromDate === \"\" || fromDate == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Select From Date!\",\r\n      });\r\n    } else if (toDate === \"\" || toDate == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Select To Date!\",\r\n      });\r\n    } else {\r\n      document.getElementById(\"divLoading\").className = \"show\";\r\n      axios({\r\n        method: \"GET\",\r\n        url: MyApiUrl + \"getScheduledOrdersByDate/\" + fromDate + \"/\" + toDate,\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          const items = response.data.map((item, index) => {\r\n            return {\r\n              ...item,\r\n              \"Day Till Now\": item.HDays,\r\n              \"Order Number\": item.ORDER_NUMBER,\r\n              \"Order By\": item.ORDER_BY,\r\n              \"Ordered Person\": item.TypeName,\r\n              \"Order Type\": item.ORDER_TYPE_NAME,\r\n              \"Supply Type\": item.SUPPLY_NAME,\r\n              Company: item.COMPANY_NAME,\r\n              \"Customer Name\": item.CUSTOMER_NAME,\r\n              Logistic: item.ORDER_LOGISTIC,\r\n              \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n              \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n              \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n              \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n              \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n            };\r\n          });\r\n          setResponseData(items);\r\n          document.getElementById(\"divLoading\").className = \"hide\";\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const FilterReset = () => {\r\n    GetAllScheduledOrder();\r\n    setfromDate(\"\");\r\n    settoDate(\"\");\r\n    setOtype(\"0\");\r\n    setOmonth(\"0\");\r\n  };\r\n  React.useEffect(() => {\r\n    GetAllScheduledOrder();\r\n    GetOrderSupplyType();\r\n  }, []);\r\n  let history = useHistory();\r\n  return (\r\n    <div id=\"city\">\r\n      <div id=\"divLoading\"> </div>\r\n      <h1 id=\"ccmaster\">Scheduled Orders</h1>\r\n      <CRow style={{ marginTop: \"3%\" }}>\r\n        <CCol col=\"12\">\r\n        <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardBody>\r\n                      <CRow>\r\n                        <CCol md=\"2\">\r\n                          <CLabel htmlFor=\"nf-email\">Select Order Type</CLabel>\r\n                          <CSelect\r\n                            custom\r\n                            name=\"merchant\"\r\n                            value={Otype}\r\n                            onChange={(event) => {\r\n                              document.getElementById(\"divLoading\").className = \"show\";\r\n                              axios({\r\n                                method: \"GET\",\r\n                                url:\r\n                                  MyApiUrl +\r\n                                  \"/getScheduledOrdersBySupplyType/\" +\r\n                                  event.target.value,\r\n                                headers: {\r\n                                  \"content-type\": \"application/json\",\r\n                                },\r\n                              })\r\n                                .then((response) => {\r\n                                  const items = response.data.map((item, index) => {\r\n                                    return {\r\n                                      ...item,\r\n                                      \"Day Till Now\": item.HDays,\r\n                                      \"Order Number\": item.ORDER_NUMBER,\r\n                                      \"Order By\": item.ORDER_BY,\r\n                                      \"Ordered Person\": item.TypeName,\r\n                                      \"Order Type\": item.ORDER_TYPE_NAME,\r\n                                      \"Supply Type\": item.SUPPLY_NAME,\r\n                                      Company: item.COMPANY_NAME,\r\n                                      \"Customer Name\": item.CUSTOMER_NAME,\r\n                                      Logistic: item.ORDER_LOGISTIC,\r\n                                      \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n                                      \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n                                      \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n                                      \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n                                      \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n                                    };\r\n                                  });\r\n                                  setResponseData(items);\r\n                                  document.getElementById(\"divLoading\").className = \"hide\";\r\n                                })\r\n                                .catch((error) => {\r\n                                  console.log(error);\r\n                                });\r\n                            }}\r\n                            id=\"merchant\"\r\n                          >\r\n                            <option value=\"0\">All</option>\r\n                            {OderSupplyType}\r\n                          </CSelect>\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CLabel htmlFor=\"nf-email\">Select Month</CLabel>\r\n                          <CSelect\r\n                            custom\r\n                            name=\"Marchant\"\r\n                            id=\"Marchant\"\r\n                            value={Omonth}\r\n                            onChange={(event) => {\r\n                              document.getElementById(\"divLoading\").className = \"show\";\r\n                              axios({\r\n                                method: \"GET\",\r\n                                url:\r\n                                  MyApiUrl +\r\n                                  \"/getScheduledOrdersByMonth/\" +\r\n                                  event.target.value,\r\n                                headers: {\r\n                                  \"content-type\": \"application/json\",\r\n                                },\r\n                              })\r\n                                .then((response) => {\r\n                                  const items = response.data.map((item, index) => {\r\n                                    return {\r\n                                      ...item,\r\n                                      \"Day Till Now\": item.HDays,\r\n                                      \"Order Number\": item.ORDER_NUMBER,\r\n                                      \"Order By\": item.ORDER_BY,\r\n                                      \"Ordered Person\": item.TypeName,\r\n                                      \"Order Type\": item.ORDER_TYPE_NAME,\r\n                                      \"Supply Type\": item.SUPPLY_NAME,\r\n                                      Company: item.COMPANY_NAME,\r\n                                      \"Customer Name\": item.CUSTOMER_NAME,\r\n                                      Logistic: item.ORDER_LOGISTIC,\r\n                                      \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n                                      \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n                                      \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n                                      \"Cash Discount\": item.ORDER_CASH_DISCOUNT + \"%\",\r\n                                      \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n                                    };\r\n                                  });\r\n                                  setResponseData(items);\r\n                                  document.getElementById(\"divLoading\").className = \"hide\";\r\n                                })\r\n                                .catch((error) => {\r\n                                  console.log(error);\r\n                                });\r\n                            }}\r\n                          >\r\n                            <option value=\"0\">All</option>\r\n                            <option value=\"1\">Jan</option>\r\n                            <option value=\"2\">Feb</option>\r\n                            <option value=\"3\">March</option>\r\n                            <option value=\"4\">April</option>\r\n                            <option value=\"5\">May</option>\r\n                            <option value=\"6\">Jun</option>\r\n                            <option value=\"7\">Jul</option>\r\n                            <option value=\"8\">Aug</option>\r\n                            <option value=\"9\">Sept</option>\r\n                            <option value=\"10\">Oct</option>\r\n                            <option value=\"11\">Nov</option>\r\n                            <option value=\"12\">Dec</option>\r\n                          </CSelect>\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CLabel>From:</CLabel>\r\n                          <CInput\r\n                            type=\"date\"\r\n                            onChange={(event) => {\r\n                              setfromDate(event.target.value);\r\n                            }}\r\n                            value={fromDate}\r\n                          />\r\n                        </CCol>\r\n\r\n                        <CCol md=\"2\">\r\n                          <CLabel>To:</CLabel>\r\n                          <CInput\r\n                            type=\"date\"\r\n                            onChange={(event) => {\r\n                              settoDate(event.target.value);\r\n                            }}\r\n                            value={toDate}\r\n                          />\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CButton\r\n                            size=\"sm\"\r\n                            color=\"info\"\r\n                            style={{ marginTop: \"28px\", width: \"100%\" }}\r\n                            onClick={FilterDates}\r\n                          >\r\n                            Filter\r\n                          </CButton>\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CButton\r\n                            size=\"sm\"\r\n                            color=\"danger\"\r\n                            style={{ marginTop: \"28px\", width: \"100%\" }}\r\n                            onClick={FilterReset}\r\n                          >\r\n                            Reset\r\n                          </CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                      <hr />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow style={{ marginTop: \"3%\" }}>\r\n        <CCol col=\"12\">\r\n        <CCard style={{ boxShadow: \"0px 0px 1px 1px #959595\" }}>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Scheduled Orders</CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={ResponseData}\r\n                        fields={fields2}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPageSelect={items}\r\n                        size=\"sm\"\r\n                        itemsPerPage={10}\r\n                        pagination\r\n                        scopedSlots={{\r\n                          Action: (item) => (\r\n                            <td>\r\n                              <CButton\r\n                                onClick={() => {\r\n                                  SendToInvoice(item.ORDER_PKID);\r\n                                }}\r\n                                size=\"sm\"\r\n                                color=\"success\"\r\n                              >\r\n                                Confirm\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          \"Tentative Dispatched Date\": (item) => (\r\n                            <td>\r\n                              <CInput\r\n                                type=\"date\"\r\n                                id={\"TentativeDate\" + item.ORDER_PKID}\r\n                                placeholder=\"Date Of Birth\"\r\n                              // value={TentativeDate}\r\n                              // onChange={(event) => {\r\n                              //   setTentativeDate(event.target.value);\r\n                              // }}\r\n                              />\r\n                            </td>\r\n                          ),\r\n                          \"Manager Remark\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewSalesPersonRemark(i.ORDER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          \"Order Date\": (i) => (\r\n                            <td>{<DateFilter date={i.ORDER_DATE} />}</td>\r\n                          ),\r\n                          \"Order Time\": (i) => {\r\n                            return (\r\n                              <td>\r\n                                {new Date(i.clock)\r\n                                  .toISOString()\r\n                                  .split(\"T\")[1]\r\n                                  .slice(0, -1)}\r\n                              </td>\r\n                            );\r\n                          },\r\n                          \"Order Items\": (i) => (\r\n                            <td>\r\n                              <CButton\r\n                                onClick={() => {\r\n                                  history.push(\"/OrderItemsSchedule\", {\r\n                                    data: i,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {i.ItemCount}\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          \"Billing Address\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewBillingAddress(i.ORDER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          \"Shipping Address\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewShippingAddress(i.ORDER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          Remark: (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewOderRemark(i.ORDER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          \"Process Remark\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewOderProcessRemark(i.ORDER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          Attachment: (i) => {\r\n                            let profile = \"\";\r\n                            if (\r\n                              i.ORD_DOC === \"\" ||\r\n                              i.ORD_DOC === null\r\n                            ) {\r\n                              profile = \"NoImage.png\";\r\n                            } else {\r\n                              profile = i.ORD_DOC;\r\n                            }\r\n                            return (\r\n                              <React.Fragment>\r\n                                <td>\r\n                                  <CLink\r\n                                    href={ViewImg + \"/\" + profile}\r\n                                    target=\"_blank\"\r\n                                  >\r\n                                    <CImg\r\n                                      src={ViewImg + \"/\" + profile}\r\n                                      fluid\r\n                                      className=\"mb-2\"\r\n                                      style={{ width: \"100%\" }}\r\n                                    />\r\n                                  </CLink>\r\n                                </td>\r\n                              </React.Fragment>\r\n                            );\r\n                          },\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CModal show={block} onClose={() => setblock(!block)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Customer Billing Address</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {BillingAddress.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Billing Address\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS1}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS3}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ZIP_CODE}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock(!block)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block1} onClose={() => setblock1(!block1)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Customer Shipping Address</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {ShippingAddress.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Shipping Address\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS1}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS3}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ZIP_CODE}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock1(!block1)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block2} onClose={() => setblock2(!block2)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Order Remark</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {OrderRemark.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.ORDER_REMARK}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock2(!block2)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block3} onClose={() => setblock3(!block3)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Process Remark</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {OrderProcessRemark.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.ORDER_REMARK_BY_PROCESSTEAM}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock3(!block3)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={ManagerRemarkBloack} onClose={() => setManagerRemarkBloack(!ManagerRemarkBloack)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Order Remark From Manager</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {ManagerRemark.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Remark\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.ORDER_MANAGER_REMARK}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setManagerRemarkBloack(!ManagerRemarkBloack)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllScheduledOrders;\r\n"],"sourceRoot":""}