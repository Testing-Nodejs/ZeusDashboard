{"version":3,"sources":["services/service.js","views/masters/DateFilter.js","services/SweetAlerts.js","views/dashboard/SalesReport.js"],"names":["MyApiUrl","ViewImg","DateFilter","date","idate","Date","toISOString","split","getDate","toString","padStart","getMonth","getFullYear","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","table","placeholder","label","items","values","fields2","key","SalesReport","props","CompanyID","location","state","data","COMPANY_NAME","CompanyName","useState","ResponseData","setResponseData","BillingAddress","setBillingAddress","ShippingAddress","setShippingAddress","OrderRemark","setOrderRemark","fromDate","setfromDate","toDate","settoDate","block","setblock","block1","setblock1","block2","setblock2","GetAllPendingOrder","axios","method","url","headers","then","response","map","item","index","hrs","HDays","ORDER_NUMBER","ORDER_BY","TypeName","SUPPLY_NAME","Company","CUSTOMER_NAME","Logistic","ORDER_LOGISTIC","ORDER_LOGISTIC_DESTINATION","ORDER_LOGISTIC_PAY_MODE","ORDER_DELIVERY_TYPE","ORDER_CASH_DISCOUNT","ORDER_ORDER_AMOUNT","catch","error","console","log","React","useEffect","history","useHistory","id","col","md","color","size","onClick","goBack","className","style","width","push","type","class","onChange","event","target","value","marginTop","fire","icon","title","fields","hover","striped","bordered","sorter","tableFilter","itemsPerPageSelect","itemsPerPage","pagination","scopedSlots","i","ORDER_DATE","clock","slice","ItemCount","pkid","ORDER_PKID","Remark","show","onClose","closeButton","Fragment","fontWeight","fontFamily","textAlign","borderBottom","paddingBottom","CUSTOMER_ADDRESS_ADDRESS1","CUSTOMER_ADDRESS_ADDRESS2","CUSTOMER_ADDRESS_ADDRESS3","CUSTOMER_ADDRESS_ZIP_CODE","ORDER_REMARK"],"mappings":"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","file":"static/js/45.5af0dde7.chunk.js","sourcesContent":["// Nodejs Api's\r\n// Local\r\n//  const MyApiUrl = 'http://192.168.1.7:7765/api/';\r\n\r\n//  const ViewImg = 'http://192.168.1.7:7765/';\r\n\r\n// Live\r\n // const MyApiUrl = 'https://ssieducation.in:7765/api/';\r\n\r\n  //const ViewImg = 'https://ssieducation.in:7765/'; \r\n\r\n  const MyApiUrl = 'https://zeusservices.onrender.com/api/';\r\n\r\n  const ViewImg = 'https://zeusservices.onrender.com/'; \r\n\r\nexport {\r\n    MyApiUrl,\r\n    ViewImg,\r\n}\r\n","export default function DateFilter({ date }) {\r\n  let idate = new Date(new Date(date).toISOString().split(\"T\")[0]);\r\n  let dateMDY = `${idate.getDate().toString().padStart(2, \"0\")}-${(\r\n    idate.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${idate.getFullYear()}`;\r\n  return dateMDY;\r\n}\r\n","import Swal from \"sweetalert2\";\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  export{\r\n    Toast\r\n  }","/* eslint-disable react-hooks/exhaustive-deps */\r\n/**\r\n * @author KIMOSABE\r\n * @email Kimosabe@mail.com\r\n * @create date 2021-11-25 17:00:15\r\n * @modify date 2021-12-06 15:32:46\r\n * @desc [description]\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CDataTable,\r\n  CButton,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModal,\r\n  CLabel,\r\n  CInput,\r\n} from \"@coreui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MyApiUrl } from \"src/services/service\";\r\nimport { Toast } from \"src/services/SweetAlerts\";\r\nimport DateFilter from \"../masters/DateFilter\";\r\nimport \"../../style.css\";\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields2 = [\r\n  { key: \"Order Date\" },\r\n  { key: \"Order Time\" },\r\n  { key: \"Time Till Now\" },\r\n  { key: \"Days Till Now\" },\r\n  { key: \"Order Number\" },\r\n  { key: \"Order By\" },\r\n  { key: \"Order Placed By\" },\r\n  { key: \"Order Items\" },\r\n  { key: \"Supply Type\" },\r\n  { key: \"Company\" },\r\n  { key: \"Customer Name\" },\r\n  { key: \"Billing Address\" },\r\n  { key: \"Shipping Address\" },\r\n  { key: \"Logistic\" },\r\n  { key: \"Logistic Designation\" },\r\n  { key: \"Logistic Payment Mode\" },\r\n  { key: \"Delivery Type\" },\r\n  { key: \"Cash Discount\" },\r\n  { key: \"Grand Total\" },\r\n  { key: \"Remark\" },\r\n];\r\n\r\nconst SalesReport = (props) => {\r\n  const CompanyID = props.location.state.data.CompanyID;\r\n  const COMPANY_NAME = props.location.state.data.CompanyName;\r\n  const [ResponseData, setResponseData] = useState([]);\r\n  const [BillingAddress, setBillingAddress] = useState([]);\r\n  const [ShippingAddress, setShippingAddress] = useState([]);\r\n  const [OrderRemark, setOrderRemark] = useState([]);\r\n  const [fromDate, setfromDate] = useState();\r\n  const [toDate, settoDate] = useState();\r\n  const [block, setblock] = useState(false);\r\n  const [block1, setblock1] = useState(false);\r\n  const [block2, setblock2] = useState(false);\r\n\r\n  // Filters\r\n\r\n  const GetAllPendingOrder = () => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"getAllOrdersByCompId/\" + CompanyID,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const items = response.data.map((item, index) => {\r\n          return {\r\n            ...item,\r\n            \"Time Till Now\": item.hrs + \" hrs\",\r\n            \"Days Till Now\": item.HDays,\r\n            \"Order Number\": item.ORDER_NUMBER,\r\n            \"Order By\": item.ORDER_BY,\r\n            \"Order Placed By\": item.TypeName,\r\n            \"Supply Type\": item.SUPPLY_NAME,\r\n            Company: item.COMPANY_NAME,\r\n            \"Customer Name\": item.CUSTOMER_NAME,\r\n            Logistic: item.ORDER_LOGISTIC,\r\n            \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n            \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n            \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n            \"Cash Discount\": item.ORDER_CASH_DISCOUNT,\r\n            \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n          };\r\n        });\r\n        setResponseData(items);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const ViewBillingAddress = (pkid) => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderBillingAddress/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setBillingAddress(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock(!block);\r\n  };\r\n\r\n  const ViewShippingAddress = (pkid) => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderShippingAddress/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setShippingAddress(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock1(!block1);\r\n  };\r\n\r\n  const ViewOderRemark = (pkid) => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: MyApiUrl + \"OrderRemark/\" + pkid + \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setOrderRemark(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setblock2(!block2);\r\n  };\r\n\r\n  const FilterDates = () => {\r\n    if (fromDate === \"\" || fromDate == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Select From Date!\",\r\n      });\r\n    } else if (toDate === \"\" || toDate == null) {\r\n      Toast.fire({\r\n        icon: \"warning\",\r\n        title: \"Select To Date!\",\r\n      });\r\n    } else {\r\n      axios({\r\n        method: \"GET\",\r\n        url:\r\n          MyApiUrl +\r\n          \"/getAllOrdersByCompIdByDate/\" +\r\n          fromDate +\r\n          \"/\" +\r\n          toDate +\r\n          \"/\" +\r\n          CompanyID,\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          const items = response.data.map((item, index) => {\r\n            return {\r\n              ...item,\r\n              \"Time Till Now\": item.hrs + \" hrs\",\r\n              \"Days Till Now\": item.HDays,\r\n              \"Order Number\": item.ORDER_NUMBER,\r\n              \"Order By\": item.ORDER_BY,\r\n              \"Order Placed By\": item.TypeName,\r\n              \"Supply Type\": item.SUPPLY_NAME,\r\n              Company: item.COMPANY_NAME,\r\n              \"Customer Name\": item.CUSTOMER_NAME,\r\n              Logistic: item.ORDER_LOGISTIC,\r\n              \"Logistic Designation\": item.ORDER_LOGISTIC_DESTINATION,\r\n              \"Logistic Payment Mode\": item.ORDER_LOGISTIC_PAY_MODE,\r\n              \"Delivery Type\": item.ORDER_DELIVERY_TYPE,\r\n              \"Cash Discount\": item.ORDER_CASH_DISCOUNT,\r\n              \"Grand Total\": item.ORDER_ORDER_AMOUNT,\r\n            };\r\n          });\r\n          setResponseData(items);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const FilterReset = () => {\r\n    GetAllPendingOrder();\r\n    setfromDate(\"\");\r\n    settoDate(\"\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    GetAllPendingOrder();\r\n  }, []);\r\n  let history = useHistory();\r\n  return (\r\n    <div id=\"city\">\r\n      <h1 id=\"ccmaster\">Sales Report From {COMPANY_NAME}</h1>\r\n      <br />\r\n      <br />\r\n      <CRow>\r\n        <CCol col=\"12\">\r\n          <CCard id=\"city-table\">\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol md=\"1\">\r\n                  <CButton\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() => history.goBack()}\r\n                  >\r\n                    Back\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n              <br />\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardBody>\r\n                      <CRow>\r\n                        <CCol md=\"12\">\r\n                          <table className=\"salesbtn\" style={{ width: \"100%\" }}>\r\n                            <tr>\r\n                              <td>\r\n                                <button\r\n                                  onClick={() => {\r\n                                    history.push(\"/SalesReportByEmployee\", {\r\n                                      data: { CompanyID, COMPANY_NAME },\r\n                                    });\r\n                                  }}\r\n                                  type=\"button\"\r\n                                  class=\"btn btn-dark rounded-pill\"\r\n                                >\r\n                                  Sales Person\r\n                                </button>\r\n                              </td>\r\n                              <td>\r\n                                <button\r\n                                  onClick={() => {\r\n                                    history.push(\"/CustomerSalesReport\", {\r\n                                      data: { CompanyID, COMPANY_NAME },\r\n                                    });\r\n                                  }}\r\n                                  type=\"button\"\r\n                                  class=\"btn btn-dark rounded-pill\"\r\n                                >\r\n                                  Customers\r\n                                </button>\r\n                              </td>\r\n                              <td>\r\n                                <button\r\n                                  type=\"button\"\r\n                                  class=\"btn btn-dark rounded-pill\"\r\n                                  onClick={() => {\r\n                                    history.push(\"/SalesReportByArea\", {\r\n                                      data: { CompanyID, COMPANY_NAME },\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  Area\r\n                                </button>\r\n                              </td>\r\n                              <td>\r\n                                <button\r\n                                  type=\"button\"\r\n                                  class=\"btn btn-dark rounded-pill\"\r\n                                  onClick={() => {\r\n                                    history.push(\"/SalesReportByProduct\", {\r\n                                      data: { CompanyID, COMPANY_NAME },\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  Product\r\n                                </button>\r\n                              </td>\r\n                              <td>\r\n                                <button\r\n                                  type=\"button\"\r\n                                  class=\"btn btn-dark rounded-pill\"\r\n                                  onClick={() => {\r\n                                    history.push(\"/SalesReportByProductUnits\", {\r\n                                      data: { CompanyID, COMPANY_NAME },\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  Product Unit\r\n                                </button>\r\n                              </td>\r\n                              <td>\r\n                                <button\r\n                                  type=\"button\"\r\n                                  class=\"btn btn-dark rounded-pill\"\r\n                                  onClick={() => {\r\n                                    history.push(\"/CurrentYearOrders\", {\r\n                                      data: { CompanyID, COMPANY_NAME },\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  Yearly\r\n                                </button>\r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol col=\"12\">\r\n          <CCard id=\"city-table\">\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>\r\n                      <CRow>\r\n                        <CCol col=\"4\">Sales Report</CCol>\r\n                        <CCol md=\"2\">\r\n                          <CLabel>From:</CLabel>\r\n                          <CInput\r\n                            type=\"date\"\r\n                            onChange={(event) => {\r\n                              setfromDate(event.target.value);\r\n                            }}\r\n                            value={fromDate}\r\n                          />\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CLabel>To:</CLabel>\r\n                          <CInput\r\n                            type=\"date\"\r\n                            onChange={(event) => {\r\n                              settoDate(event.target.value);\r\n                            }}\r\n                            value={toDate}\r\n                          />\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CButton\r\n                            size=\"sm\"\r\n                            color=\"info\"\r\n                            style={{ marginTop: \"28px\", width: \"100%\" }}\r\n                            onClick={FilterDates}\r\n                          >\r\n                            Filter\r\n                          </CButton>\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CButton\r\n                            size=\"sm\"\r\n                            color=\"danger\"\r\n                            style={{ marginTop: \"28px\", width: \"100%\" }}\r\n                            onClick={FilterReset}\r\n                          >\r\n                            Reset\r\n                          </CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={ResponseData}\r\n                        fields={fields2}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPageSelect={items}\r\n                        size=\"sm\"\r\n                        itemsPerPage={10}\r\n                        pagination\r\n                        scopedSlots={{\r\n                          \"Order Date\": (i) => (\r\n                            <td>{<DateFilter date={i.ORDER_DATE} />}</td>\r\n                          ),\r\n                          \"Order Time\": (i) => {\r\n                            return (\r\n                              <td>\r\n                                {new Date(i.clock)\r\n                                  .toISOString()\r\n                                  .split(\"T\")[1]\r\n                                  .slice(0, -1)}\r\n                              </td>\r\n                            );\r\n                          },\r\n                          \"Order Items\": (i) => (\r\n                            <td>\r\n                              <CButton\r\n                                onClick={() => {\r\n                                  history.push(\"/OrderItems\", {\r\n                                    data: i,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {i.ItemCount}\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          \"Billing Address\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewBillingAddress(i.ORDER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          \"Shipping Address\": (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewShippingAddress(i.ORDER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          Remark: (i) => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"8\">\r\n                                  <CButton\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    id=\"AddEmp\"\r\n                                    onClick={() => {\r\n                                      ViewOderRemark(i.ORDER_PKID);\r\n                                    }}\r\n                                  >\r\n                                    View\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CModal show={block} onClose={() => setblock(!block)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Customer Billing Address</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {BillingAddress.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Billing Address\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS1}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS3}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ZIP_CODE}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock(!block)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block1} onClose={() => setblock1(!block1)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Customer Shipping Address</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {ShippingAddress.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Shipping Address\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS1}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ADDRESS3}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{i.CUSTOMER_ADDRESS_ZIP_CODE}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock1(!block1)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal show={block2} onClose={() => setblock2(!block2)} color=\"dark\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Order Remark</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            {OrderRemark.map((i) => (\r\n              <React.Fragment>\r\n                <CCol md=\"12\">\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"sans-serif\",\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"1px solid #ebedef\",\r\n                      paddingBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    Remark\r\n                  </p>\r\n                  <table>\r\n                    <tr>\r\n                      <td>{i.ORDER_REMARK}</td>\r\n                    </tr>\r\n                  </table>\r\n                </CCol>\r\n              </React.Fragment>\r\n            ))}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setblock2(!block2)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesReport;\r\n"],"sourceRoot":""}